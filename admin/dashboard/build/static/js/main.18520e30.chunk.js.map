{"version":3,"sources":["assets/img/three-dots-black.svg","assets/img/three-dots.svg","components/users/login.js","graphql/mutation.js","components/users/signup.js","PrivateRoute.js","PublicRoute.js","context/userContext.js","components/navbar/left-navbar.js","graphql/query.js","components/navbar/top-navbar.js","components/footer.js","components/data/admin.js","components/admin.js","components/posts/tools.js","components/posts/new-post.js","components/posts/all-post.js","components/pages/tools.js","components/pages/new-page.js","components/pages/all-pages.js","components/users.js","components/users/logout.js","components/categories/category.js","components/categories/edit-category.js","components/posts/edit-post.js","components/pages/edit-page.js","components/members/new-member.js","components/members/members.js","components/members/edit-member.js","components/retailers/new-retailer.js","components/retailers/retailers.js","components/retailers/edit-retailer.js","components/socialmedia/new-social-media.js","components/socialmedia/social-media.js","components/socialmedia/edit-social-media.js","components/settings.js","components/telegram-bot/handle-verify.js","components/telegram-bot/handle-message.js","components/telegram-bot/telegram-bot.js","components/legals/tools.js","components/legals/legal.js","components/legals/all-legals.js","components/legals/edit-legal.js","components/payments/payment.js","components/softwares/tools.js","components/softwares/add-software.js","components/softwares/all-softwares.js","components/softwares/edit-software.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","create","props","useState","loading","setLoading","getFieldDecorator","form","className","params","particles","number","value","size","interactivity","events","onhover","enable","mode","onSubmit","e","preventDefault","validateFields","err","values","console","log","remember","axios","post","then","a","res","setTimeout","Cookie","set","data","token","expires","message","success","window","location","replace","catch","error","type","response","notification","description","closeIcon","duration","Item","rules","required","prefix","style","color","placeholder","valuePropName","initialValue","htmlType","disabled","src","three_dots","alt","height","to","CREATE_USER","gql","UPDATE_USER","APPROVE_USER","ISADMIN","DELETE_USER","CREATE_CATEGORY","DELETE_CATEGORY","UPDATE_CATEGORY","CREATE_POST","DELETE_POST","UPDATE_POST","CREATE_PAGE","DELETE_PAGE","UPDATE_PAGE","CREATE_MEMBER","DELETE_MEMBER","UPDATE_MEMBER","CREATE_RETAILER","DELETE_RETAILER","UPDATE_RETAILER","CREATE_SOCIAL_MEDIA","DELETE_SOCIAL_MEDIA","UPDATE_SOCIAL_MEDIA","CREATE_LEGAL","UPDATE_LEGAL","DELETE_LEGAL","ADD_SOFTWARE","UPDATE_SOFTWARE","DELETE_SOFTWARE","DELETE_PAYMENT","useMutation","createUser","fullname","email","password","variables","JSON","parse","stringify","graphQLErrors","get","user","jwt","decode","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","UserContext","createContext","UserProvider","avatar","setUser","useEffect","Provider","children","Sider","Layout","SubMenu","Menu","LeftNavbar","userData","useContext","isLight","setIsLight","pathname","isAdmin","sessionIsLight","localStorage","getItem","backgroundColor","onClick","setItem","theme","defaultSelectedKeys","defaultOpenKeys","key","title","GET_USERS","GET_USER","GET_CATEGORIES","EDIT_CATEGORY","GET_POSTS","GET_POST","GET_PAGES","GET_PAGE","GET_MEMBERS","GET_MEMBER","GET_RETAILERS","GET_RETAILER","GET_SOCIAL_MEDIA","GET_ONE_SOCIAL_MEDIA","GET_LEGALS","GET_LEGAL","GET_PAYMENTS","GET_SOFTWARES","GET_SOFTWARE","Header","TopNavbar","content","href","background","padding","useQuery","placement","Footer","PageFooter","textAlign","UserTotal","users","length","TotalPost","posts","TotalPage","pages","TotalRetailer","retailers","Content","Admin","series","name","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","minHeight","gutter","span","EDITOR_JS_TOOLS","embed","Embed","table","Table","list","List","warning","Warning","code","Code","linkTool","LinkTool","image","Image","raw","Raw","header","quote","Quote","marker","Marker","checklist","CheckList","delimiter","Delimiter","inlineCode","InlineCode","simpleImage","SimpleImage","FormItem","TextArea","Input","Option","Select","setImage","categoryRefetch","refetch","postsRefetch","createPost","uploadImage","multiple","action","defaultFileList","onChange","info","status","file","fileList","toLowerCase","editorJsRef","React","useRef","handleSubmit","useCallback","current","save","savedData","validateFieldsAndScroll","slug","slugify","lower","resetFields","create_post","margin","label","display","instanceRef","instance","tools","Dragger","width","filtered_pages","_","filter","p","includes","map","cate","id","rows","float","AllPosts","deletePost","postRefetch","columns","dataIndex","dataSource","category","created_at","thumnail","substring","created_by","moment","unix","okText","cancelText","onConfirm","delete_post","pagination","createPage","pageRefetch","sectionNumber","toString","create_page","min","AllPages","visible","setVisible","deletePage","sorter","b","hideModal","DisplayTable","page","subTitle","updated_by","toUpperCase","delete_page","onOk","onCancel","footer","Users","approveUser","deleteUser","makeAsAdmin","adminColumns","index","approved","admin","cursor","approve","Logout","createCategory","deleteCategory","onFilter","record","indexOf","marginTop","marginBottom","updated_at","updateCategory","split","edit_category_loading","edit_category_data","history","push","Date","toISOString","postLoading","postData","updatePost","update_post","tags","keywords","meta_desc","pageLoading","pageData","updatePage","update_page","memberRefetch","createMember","add_member","Members","deleteMember","members","member","phoneNumber","photo","department","borderRadius","delete_member","memberData","updateMember","update_member","position","refetchRetailer","createRetailer","add_retailer","Retailers","deleteRetailer","retailerRefetch","retailer","logo","delete_retailer","retailerData","refechRetailer","updateRetailer","update_retailer","addSocailMedia","add_social_media","SocialMedia","deleteSocialMedia","refetchSocialMedia","socialMedia","link","delete_social_media","socialMediaLoading","socialMediaData","refechSocialMedia","updateSocialMedia","update_social_media","oneSocialMedia","userLoading","userQuery","updateUser","oldPassword","newPassword","phone","parseInt","channel","msg","setPhone","target","createLegal","refetchLegal","create_legal","deleteLegal","legalRefetch","legals","delete_legal","errorLegal","dataLoading","legalData","updateLegal","edit_legal","legal","Payment","deletePayment","paymentRefetch","payments","payment","fname","lname","price","product","cancle","delete_payment","setLogo","createSoftware","uploadLogo","create_software","AllSoftwares","deleteSoftware","refetchSoftware","softwares","software","delete_software","softwareLoading","softwareData","updateSoftware","edit_software","App","exact","path","LoginForm","SignupForm","Settings","NewPost","editPost","AddSoftware","EditSoftware","NewPage","editPage","Category","editCategory","newMember","editMember","newRetailer","editRetailer","newSocialMedia","editSocialMedia","TelegramBot","Legal","allLegals","editLegal","Boolean","hostname","match","cache","InMemoryCache","client","ApolloClient","uri","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18520e30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/three-dots-black.9f3b0075.svg\";","module.exports = __webpack_public_path__ + \"static/media/three-dots.7627bc82.svg\";","import React, { useState } from \"react\"\nimport { Form, Icon, Input, Button, Checkbox, message, notification } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport Cookie from \"js-cookie\"\nimport Particles from \"react-particles-js\"\n\nfunction LoginForm(props) {\n  const [loading, setLoading] = useState(false)\n\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: `Hello there!`,\n      description:\n        \"You don't permission to access it yet. Please ask the admin to approve your user.\",\n      closeIcon: true,\n      duration: 10\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(values.remember)\n\n        axios\n          .post(`https://admin.koompi.com/login`, { ...values })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            Cookie.set(\n              \"token\",\n              res.data.token,\n              values.remember ? { expires: 7 } : null\n            )\n            await message.success(\"Login successfully.\", 3)\n            window.location.replace(\"/admin/dashboard\")\n          })\n          .catch((error) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            if (\n              error.response.data.message ===\n              \"You don't have a permission to access it\"\n            ) {\n              openNotificationWithIcon(\"info\")\n            } else {\n              message.error(error.response.data.message, 10)\n            }\n          })\n      } else {\n        console.log(err)\n      }\n    })\n  }\n\n  const { getFieldDecorator } = props.form\n  return (\n    <div>\n      {/* <div className=\"loginBackground\"></div> */}\n      <Particles\n        className=\"loginBackground\"\n        params={{\n          particles: {\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"repulse\"\n              }\n            }\n          }\n        }}\n      />\n      <div className=\"loginContainer\">\n        <h1 className=\"loginTitle\">Login</h1>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator(\"email\", {\n              rules: [{ required: true, message: \"Please input your Email!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"Please input your Password!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"remember\", {\n              valuePropName: \"checked\",\n              initialValue: true\n            })(<Checkbox>Remember me</Checkbox>)}\n            {/* <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a> */}\n            <br />\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"koompi-steam-loading\" height=\"10\" />\n              ) : (\n                \"Login\"\n              )}\n            </Button>\n            <br />\n            Or <Link to=\"/register\">register now!</Link>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Form.create()(LoginForm)\n","import gql from \"graphql-tag\"\n\nconst CREATE_USER = gql`\n  mutation($fullname: String!, $email: String!, $password: String!) {\n    create_user(fullname: $fullname, email: $email, password: $password) {\n      fullname\n      email\n      password\n    }\n  }\n`\n\nconst UPDATE_USER = gql`\n  mutation(\n    $fullname: String!\n    $email: String!\n    $avatar: String!\n    $oldPassword: String\n    $newPassword: String\n  ) {\n    update_user(\n      fullname: $fullname\n      email: $email\n      avatar: $avatar\n      oldPassword: $oldPassword\n      newPassword: $newPassword\n    ) {\n      fullname\n      email\n    }\n  }\n`\n\nconst APPROVE_USER = gql`\n  mutation($id: String!, $approve: Boolean!) {\n    approve_user(id: $id, approve: $approve) {\n      fullname\n      email\n      approved\n    }\n  }\n`\n\nconst ISADMIN = gql`\n  mutation($id: String!, $isAdmin: Boolean!) {\n    isAdmin(id: $id, isAdmin: $isAdmin) {\n      fullname\n      email\n      isAdmin\n    }\n  }\n`\n\nconst DELETE_USER = gql`\n  mutation($id: String!) {\n    delete_user(id: $id) {\n      fullname\n    }\n  }\n`\n\nconst CREATE_CATEGORY = gql`\n  mutation($title: String!, $slug: String!, $created_by: String!) {\n    create_category(title: $title, slug: $slug, created_by: $created_by) {\n      id\n      title\n      slug\n      created_by\n      created_at\n    }\n  }\n`\n\nconst DELETE_CATEGORY = gql`\n  mutation($id: String!) {\n    delete_category(id: $id) {\n      title\n    }\n  }\n`\n\nconst UPDATE_CATEGORY = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $slug: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_category(\n      id: $id\n      title: $title\n      slug: $slug\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      id\n      title\n      slug\n    }\n  }\n`\n\nconst CREATE_POST = gql`\n  mutation(\n    $title: String!\n    $slug: String!\n    $category: String!\n    $created_by: String!\n    $description: String!\n    $thumnail: String\n    $tags: [String]!\n    $keywords: [String]!\n    $meta_desc: String!\n  ) {\n    create_post(\n      title: $title\n      slug: $slug\n      category: $category\n      created_by: $created_by\n      description: $description\n      thumnail: $thumnail\n      tags: $tags\n      keywords: $keywords\n      meta_desc: $meta_desc\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_POST = gql`\n  mutation($id: String!) {\n    delete_post(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_POST = gql`\n  mutation(\n    $id: String!\n    $slug: String!\n    $title: String!\n    $category: String!\n    $description: String!\n    $thumnail: String\n    $tags: [String]!\n    $keywords: [String]!\n    $meta_desc: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_post(\n      id: $id\n      title: $title\n      slug: $slug\n      category: $category\n      description: $description\n      thumnail: $thumnail\n      tags: $tags\n      keywords: $keywords\n      meta_desc: $meta_desc\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_PAGE = gql`\n  mutation(\n    $title: String!\n    $subTitle: String\n    $created_by: String!\n    $description: String!\n    $image: String\n    $category: String!\n    $sectionNumber: String!\n    $keywords: [String]!\n    $meta_desc: String!\n  ) {\n    create_page(\n      title: $title\n      subTitle: $subTitle\n      created_by: $created_by\n      description: $description\n      sectionNumber: $sectionNumber\n      image: $image\n      category: $category\n      keywords: $keywords\n      meta_desc: $meta_desc\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_PAGE = gql`\n  mutation($id: String!) {\n    delete_page(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_PAGE = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $subTitle: String\n    $description: String!\n    $image: String\n    $category: String!\n    $sectionNumber: String!\n    $keywords: [String]!\n    $meta_desc: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_page(\n      id: $id\n      title: $title\n      subTitle: $subTitle\n      description: $description\n      image: $image\n      category: $category\n      sectionNumber: $sectionNumber\n      keywords: $keywords\n      meta_desc: $meta_desc\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_MEMBER = gql`\n  mutation(\n    $fullname: String!\n    $department: String!\n    $position: String!\n    $phoneNumber: String!\n    $email: String\n    $photo: String!\n    $created_by: String!\n  ) {\n    add_member(\n      fullname: $fullname\n      department: $department\n      position: $position\n      phoneNumber: $phoneNumber\n      email: $email\n      photo: $photo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_MEMBER = gql`\n  mutation($id: String!) {\n    delete_member(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_MEMBER = gql`\n  mutation(\n    $id: String!\n    $fullname: String!\n    $department: String!\n    $position: String!\n    $phoneNumber: String!\n    $email: String\n    $photo: String!\n    $created_by: String!\n  ) {\n    update_member(\n      id: $id\n      fullname: $fullname\n      department: $department\n      position: $position\n      phoneNumber: $phoneNumber\n      email: $email\n      photo: $photo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_RETAILER = gql`\n  mutation(\n    $name: String!\n    $location: String!\n    $logo: String!\n    $phoneNumber: String\n    $email: String\n    $created_by: String!\n  ) {\n    add_retailer(\n      name: $name\n      location: $location\n      logo: $logo\n      phoneNumber: $phoneNumber\n      email: $email\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_RETAILER = gql`\n  mutation($id: String!) {\n    delete_retailer(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_RETAILER = gql`\n  mutation(\n    $id: String!\n    $name: String!\n    $location: String!\n    $logo: String!\n    $phoneNumber: String\n    $email: String\n  ) {\n    update_retailer(\n      id: $id\n      name: $name\n      location: $location\n      logo: $logo\n      phoneNumber: $phoneNumber\n      email: $email\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_SOCIAL_MEDIA = gql`\n  mutation($name: String!, $link: String!, $logo: String!, $created_by: String!) {\n    add_social_media(\n      name: $name\n      link: $link\n      logo: $logo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_SOCIAL_MEDIA = gql`\n  mutation($id: String!) {\n    delete_social_media(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_SOCIAL_MEDIA = gql`\n  mutation($id: String!, $name: String!, $link: String!, $logo: String!) {\n    update_social_media(id: $id, name: $name, link: $link, logo: $logo) {\n      message\n    }\n  }\n`\n\nconst CREATE_LEGAL = gql`\n  mutation($title: String!, $description: String!, $created_by: String!) {\n    create_legal(title: $title, description: $description, created_by: $created_by) {\n      message\n    }\n  }\n`\n\nconst UPDATE_LEGAL = gql`\n  mutation($id: String!, $title: String!, $description: String!) {\n    edit_legal(id: $id, title: $title, description: $description) {\n      message\n    }\n  }\n`\n\nconst DELETE_LEGAL = gql`\n  mutation($id: String!) {\n    delete_legal(id: $id) {\n      message\n    }\n  }\n`\n\nconst ADD_SOFTWARE = gql`\n  mutation(\n    $title: String!\n    $description: String!\n    $logo: String!\n    $image: String!\n    $created_by: String!\n  ) {\n    create_software(\n      title: $title\n      description: $description\n      logo: $logo\n      image: $image\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst UPDATE_SOFTWARE = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $description: String!\n    $logo: String!\n    $image: String!\n  ) {\n    edit_software(\n      id: $id\n      title: $title\n      description: $description\n      logo: $logo\n      image: $image\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_SOFTWARE = gql`\n  mutation($id: String!) {\n    delete_software(id: $id) {\n      message\n    }\n  }\n`\n\nconst DELETE_PAYMENT = gql`\n  mutation($id: String!) {\n    delete_payment(id: $id) {\n      message\n    }\n  }\n`\n\nexport {\n  CREATE_USER,\n  CREATE_CATEGORY,\n  DELETE_CATEGORY,\n  UPDATE_CATEGORY,\n  CREATE_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  APPROVE_USER,\n  DELETE_USER,\n  ISADMIN,\n  CREATE_PAGE,\n  DELETE_PAGE,\n  UPDATE_PAGE,\n  CREATE_MEMBER,\n  DELETE_MEMBER,\n  UPDATE_MEMBER,\n  CREATE_RETAILER,\n  DELETE_RETAILER,\n  UPDATE_RETAILER,\n  CREATE_SOCIAL_MEDIA,\n  DELETE_SOCIAL_MEDIA,\n  UPDATE_SOCIAL_MEDIA,\n  UPDATE_USER,\n  CREATE_LEGAL,\n  UPDATE_LEGAL,\n  DELETE_LEGAL,\n  ADD_SOFTWARE,\n  UPDATE_SOFTWARE,\n  DELETE_SOFTWARE,\n  DELETE_PAYMENT\n}\n","import React, { useState } from \"react\"\nimport { Form, Icon, Input, Button, message } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport Particles from \"react-particles-js\"\n\n// ===== Create User =====\nimport { CREATE_USER } from \"../../graphql/mutation\"\n\nfunction SignupForm(props) {\n  const [createUser] = useMutation(CREATE_USER)\n\n  // ===== State Section =====\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const { fullname, email, password } = values\n        await createUser({\n          variables: {\n            fullname,\n            email,\n            password\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            await message.success(\"Register Successfully.\", 3)\n            await window.location.replace(\"/login\")\n          })\n          .catch((error) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            let err = JSON.parse(JSON.stringify(error))\n            message.error(err.graphQLErrors[0].message)\n          })\n      } else {\n        console.log(err)\n      }\n    })\n  }\n\n  const { getFieldDecorator } = props.form\n  return (\n    <>\n      <Particles\n        className=\"loginBackground\"\n        params={{\n          particles: {\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"repulse\"\n              }\n            }\n          }\n        }}\n      />\n      <div className=\"loginContainer\">\n        <h1 className=\"loginTitle\">Register</h1>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          {/* Full Name */}\n          <Form.Item>\n            {getFieldDecorator(\"fullname\", {\n              rules: [{ required: true, message: \"Please input your Full Name!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Full Name\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Email */}\n          <Form.Item>\n            {getFieldDecorator(\"email\", {\n              rules: [{ required: true, message: \"Please input your Email!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Password */}\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"Please input your Password!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Remember Me */}\n          <Form.Item>\n            {/* Button Submit */}\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"koompi-steam-loading\" height=\"10\" />\n              ) : (\n                \"Sign Up\"\n              )}\n            </Button>\n            <br />\n            Have an account? <Link to=\"/login\">Login</Link>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default Form.create()(SignupForm)\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\n// Global varible\nlet token = Cookie.get(\"token\")\nlet user = jwt.decode(token)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLogin = () => {\n    if (user) {\n      return true\n    }\n    return false\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  let token = Cookie.get(\"token\")\n  let user = jwt.decode(token)\n\n  const isLogin = () => {\n    if (!user) {\n      return false\n    }\n    return true\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() && restricted ? (\n          <Redirect to=\"/admin/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n}\n\nexport default PublicRoute\n","import React, { createContext, useState, useEffect } from \"react\"\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\nexport const UserContext = createContext()\n\nexport const UserProvider = (props) => {\n  const [user, setUser] = useState({\n    fullname: \"\",\n    email: \"\",\n    avatar: \"\"\n  })\n\n  useEffect(() => {\n    let token = Cookie.get(\"token\")\n    let user = jwt.decode(token)\n    setUser(user)\n  }, [])\n\n  return (\n    <UserContext.Provider value={{ user }}>{props.children}</UserContext.Provider>\n  )\n}\n","import React, { useState, useContext } from \"react\"\nimport { Layout, Menu } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { UserContext } from \"../../context/userContext\"\nimport {\n  FiBarChart,\n  FiFileText,\n  FiFile,\n  FiList,\n  FiUsers,\n  FiMapPin,\n  FiShare2,\n  FiDollarSign,\n  FiSend,\n  FiUserCheck,\n  FiUser,\n  FiLayers\n} from \"react-icons/fi\"\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nfunction LeftNavbar() {\n  const userData = useContext(UserContext)\n  const [isLight, setIsLight] = useState(true)\n\n  // const isDay = () => {\n  //   const hours = new Date().getHours();\n  //   return hours >= 6 && hours < 18;\n  // };\n\n  const pathname = window.location.pathname\n\n  const { fullname, isAdmin } = userData.user\n  if (fullname === \"\") {\n    return null\n  }\n\n  const handleIsLight = () => {\n    setIsLight(!isLight)\n    localStorage.setItem(\"isLight\", !isLight)\n  }\n\n  const sessionIsLight = JSON.parse(localStorage.getItem(\"isLight\"))\n\n  return (\n    <Sider\n      // collapsible\n      // collapsed={collapsed}\n      // onCollapse={onCollapse}\n      style={\n        sessionIsLight\n          ? { backgroundColor: \"rgb(30, 39, 46)\" }\n          : { backgroundColor: \"#fff\" }\n      }\n    >\n      <div>\n        <center>\n          <img\n            src={\n              sessionIsLight\n                ? \"/images/KOOMPI_Logo.svg\"\n                : \"/images/KOOMPI_Logo_dark.svg\"\n            }\n            alt=\"\"\n            className=\"KOOMPI_LOGO\"\n          />\n        </center>\n        <div className=\"themeChange\" onClick={handleIsLight}>\n          {sessionIsLight ? (\n            <img src=\"/images/day.svg\" alt=\"koompi day\" height=\"25px\" />\n          ) : (\n            <img src=\"/images/night.svg\" alt=\"koompi night\" height=\"25px\" />\n          )}\n        </div>\n      </div>\n      <Menu\n        theme={sessionIsLight ? \"dark\" : \"light\"}\n        defaultSelectedKeys={[pathname]}\n        defaultOpenKeys={[pathname]}\n        mode=\"inline\"\n      >\n        {/* ========= Dashboard Section ========= */}\n        <Menu.Item key=\"/admin/dashboard\">\n          <Link to=\"/admin/dashboard\" className=\"nav-text\">\n            <FiBarChart />\n            <span>Dashboard</span>\n          </Link>\n        </Menu.Item>\n\n        {/* ========= Posts Section ========= */}\n        <SubMenu\n          key={\n            pathname === \"/admin/new-post\"\n              ? \"/admin/new-post\"\n              : \"/admin/all-posts\"\n              ? \"/admin/all-posts\"\n              : \"\"\n          }\n          title={\n            <div className=\"nav-text\">\n              <FiFileText />\n              <span>Posts</span>\n            </div>\n          }\n        >\n          <Menu.Item key=\"/admin/new-post\">\n            <Link to=\"/admin/new-post\">New Post</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/all-posts\">\n            <Link to=\"/admin/all-posts\">All Posts</Link>\n          </Menu.Item>\n        </SubMenu>\n\n        {/* ========= Pages Section ========= */}\n        <SubMenu\n          key={\n            pathname === \"/admin/new-page\"\n              ? \"/admin/new-page\"\n              : \"/admin/all-pages\"\n              ? \"/admin/all-pages\"\n              : \"\"\n          }\n          title={\n            <div className=\"nav-text\">\n              <FiFile />\n              <span>Pages</span>\n            </div>\n          }\n        >\n          <Menu.Item key=\"/admin/new-page\">\n            <Link to=\"/admin/new-page\">New Page</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/all-pages\">\n            <Link to=\"/admin/all-pages\">All Pages</Link>\n          </Menu.Item>\n        </SubMenu>\n\n        {/* ========= Software Section ========= */}\n        <SubMenu\n          key={\n            pathname === \"/admin/add-software\"\n              ? \"/admin/add-software\"\n              : \"/admin/all-softwares\"\n              ? \"/admin/all-softwares\"\n              : \"\"\n          }\n          title={\n            <div className=\"nav-text\">\n              <FiLayers />\n              <span>Softwares</span>\n            </div>\n          }\n        >\n          <Menu.Item key=\"/admin/add-software\">\n            <Link to=\"/admin/add-software\">Add Software</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/all-softwares\">\n            <Link to=\"/admin/all-softwares\">All Software</Link>\n          </Menu.Item>\n        </SubMenu>\n\n        {/* ========= Categories Section ========= */}\n\n        <Menu.Item key=\"/admin/categories\">\n          <Link to=\"/admin/categories\" className=\"nav-text\">\n            <FiList />\n            <span>Categories</span>\n          </Link>\n        </Menu.Item>\n\n        {/* ========= Member Section ========= */}\n        <SubMenu\n          key={\n            pathname === \"/admin/new-member\"\n              ? \"/admin/new-member\"\n              : \"/admin/members\"\n              ? \"/admin/members\"\n              : \"\"\n          }\n          title={\n            <div className=\"nav-text\">\n              <FiUsers />\n              <span>Members</span>\n            </div>\n          }\n        >\n          <Menu.Item key=\"/admin/new-member\">\n            <Link to=\"/admin/new-member\">New Member</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/members\">\n            <Link to=\"/admin/members\">All Members</Link>\n          </Menu.Item>\n        </SubMenu>\n\n        {/* ========= Retailer Section ========= */}\n        <SubMenu\n          key={\n            pathname === \"/admin/new-retailer\"\n              ? \"/admin/new-retailer\"\n              : \"/admin/retailers\"\n              ? \"/admin/retailers\"\n              : \"\"\n          }\n          title={\n            <div className=\"nav-text\">\n              <FiMapPin />\n              <span>Retailers</span>\n            </div>\n          }\n        >\n          <Menu.Item key=\"/admin/new-retailer\">\n            <Link to=\"/admin/new-retailer\">New Retailer</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/retailers\">\n            <Link to=\"/admin/retailers\">All Retailers</Link>\n          </Menu.Item>\n        </SubMenu>\n\n        {/* ========= Social Media Section ========= */}\n        <SubMenu\n          key={\n            pathname === \"/admin/add-social-media\"\n              ? \"/admin/add-social-media\"\n              : \"/admin/social-media\"\n              ? \"/admin/social-media\"\n              : \"\"\n          }\n          title={\n            <div className=\"nav-text\">\n              <FiShare2 />\n              <span>Socail media</span>\n            </div>\n          }\n        >\n          <Menu.Item key=\"/admin/add-social-media\">\n            <Link to=\"/admin/add-social-media\">Add Social Media</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/admin/social-media\">\n            <Link to=\"/admin/social-media\">Social Media</Link>\n          </Menu.Item>\n        </SubMenu>\n\n        {/* ========= Payment Section ========= */}\n        {isAdmin && (\n          <Menu.Item key=\"/admin/user/payments\">\n            <Link to=\"/admin/user/payments\" className=\"nav-text\">\n              <FiDollarSign />\n              <span>User Payment</span>\n            </Link>\n          </Menu.Item>\n        )}\n\n        {/* ========= Mail Sender Section ========= */}\n        {/* {isAdmin && (\n          <Menu.Item key=\"/admin/send-mail\">\n            <Link to=\"/user/send-mail\" className=\"nav-text\">\n              <Icon type=\"mail\" />\n              <span>Mail Sender</span>\n            </Link>\n          </Menu.Item>\n        )} */}\n\n        {/* ========= Mail Sender Section ========= */}\n        {isAdmin && (\n          <Menu.Item key=\"/admin/telegram-bot\">\n            <Link to=\"/admin/telegram-bot\" className=\"nav-text\">\n              <FiSend />\n              <span>Telegram</span>\n            </Link>\n          </Menu.Item>\n        )}\n\n        {/* ========= Mail Sender Section ========= */}\n        {isAdmin && (\n          <SubMenu\n            key={\n              pathname === \"/admin/new-legal\"\n                ? \"/admin/new-legal\"\n                : \"/admin/all-legals\"\n                ? \"/admin/all-legals\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiUserCheck />\n                <span>Legals</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-legal\">\n              <Link to=\"/admin/new-legal\">New Legal</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-legals\">\n              <Link to=\"/admin/all-legals\">All Legals</Link>\n            </Menu.Item>\n          </SubMenu>\n        )}\n\n        {/* ========= Users Section ========= */}\n        <Menu.Item key=\"/admin/users\">\n          <Link to=\"/admin/users\" className=\"nav-text\">\n            <FiUser />\n            <span>Users</span>\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default LeftNavbar\n","import gql from \"graphql-tag\"\n\nconst GET_USERS = gql`\n  query {\n    users {\n      fullname\n      email\n      avatar\n      isAdmin\n      id\n      approved\n    }\n  }\n`\n\nconst GET_USER = gql`\n  query($email: String!) {\n    user(email: $email) {\n      fullname\n      email\n      avatar\n      isAdmin\n      id\n      approved\n    }\n  }\n`\n\nconst GET_CATEGORIES = gql`\n  query {\n    categories {\n      id\n      title\n      slug\n      created_by\n      updated_by\n      created_at\n      updated_at\n    }\n  }\n`\n\nconst EDIT_CATEGORY = gql`\n  query($id: String!) {\n    category(id: $id) {\n      id\n      title\n      created_by\n    }\n  }\n`\n\nconst GET_POSTS = gql`\n  query {\n    posts {\n      id\n      title\n      slug\n      description\n      category {\n        title\n      }\n      user {\n        fullname\n      }\n      meta_desc\n      keywords\n      tags\n      updated_at\n      updated_by\n      created_at\n      thumnail\n    }\n  }\n`\n\nconst GET_POST = gql`\n  query($id: String!) {\n    post(id: $id) {\n      id\n      title\n      slug\n      created_by\n      description\n      category {\n        title\n      }\n      meta_desc\n      keywords\n      tags\n      updated_at\n      updated_by\n      created_at\n      thumnail\n    }\n  }\n`\n\nconst GET_PAGES = gql`\n  query {\n    pages {\n      id\n      title\n      subTitle\n      category {\n        title\n      }\n      sectionNumber\n      created_by\n      description\n      meta_desc\n      keywords\n      image\n      updated_at\n      updated_by\n      created_at\n    }\n  }\n`\n\nconst GET_PAGE = gql`\n  query($id: String!) {\n    page(id: $id) {\n      id\n      title\n      subTitle\n      category {\n        title\n        slug\n      }\n      sectionNumber\n      created_by\n      description\n      meta_desc\n      keywords\n      image\n      updated_at\n      updated_by\n      created_at\n    }\n  }\n`\n\nconst GET_MEMBERS = gql`\n  query {\n    members {\n      id\n      fullname\n      phoneNumber\n      email\n      created_by\n      position\n      photo\n      department\n      created_at\n    }\n  }\n`\n\nconst GET_MEMBER = gql`\n  query($id: String!) {\n    member(id: $id) {\n      id\n      fullname\n      phoneNumber\n      email\n      created_by\n      position\n      photo\n      department\n      created_at\n    }\n  }\n`\n\nconst GET_RETAILERS = gql`\n  query {\n    retailers {\n      name\n      id\n      email\n      logo\n      location\n      created_by\n      phoneNumber\n      created_at\n    }\n  }\n`\n\nconst GET_RETAILER = gql`\n  query($id: String!) {\n    retailer(id: $id) {\n      name\n      id\n      email\n      logo\n      location\n      created_by\n      phoneNumber\n      created_at\n    }\n  }\n`\n\nconst GET_SOCIAL_MEDIA = gql`\n  query {\n    socialMedia {\n      id\n      name\n      logo\n      link\n      created_by\n      created_at\n    }\n  }\n`\nconst GET_ONE_SOCIAL_MEDIA = gql`\n  query($id: String!) {\n    oneSocialMedia(id: $id) {\n      id\n      name\n      logo\n      link\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_LEGALS = gql`\n  query {\n    legals {\n      id\n      title\n      description\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_LEGAL = gql`\n  query($id: String!) {\n    legal(id: $id) {\n      id\n      title\n      description\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_PAYMENTS = gql`\n  query {\n    payments {\n      id\n      fname\n      lname\n      email\n      phoneNumber\n      message\n      product\n      cancle\n      price\n      created_at\n    }\n  }\n`\n\nconst GET_SOFTWARES = gql`\n  query {\n    softwares {\n      id\n      title\n      description\n      logo\n      image\n      created_at\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nconst GET_SOFTWARE = gql`\n  query($id: String!) {\n    software(id: $id) {\n      id\n      title\n      description\n      logo\n      image\n      created_at\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nexport {\n  GET_USERS,\n  GET_USER,\n  GET_CATEGORIES,\n  EDIT_CATEGORY,\n  GET_POSTS,\n  GET_POST,\n  GET_PAGES,\n  GET_PAGE,\n  GET_MEMBERS,\n  GET_MEMBER,\n  GET_RETAILERS,\n  GET_RETAILER,\n  GET_SOCIAL_MEDIA,\n  GET_ONE_SOCIAL_MEDIA,\n  GET_LEGALS,\n  GET_LEGAL,\n  GET_PAYMENTS,\n  GET_SOFTWARES,\n  GET_SOFTWARE\n}\n","import React, { useContext } from \"react\"\nimport { Layout, Popover } from \"antd\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { UserContext } from \"../../context/userContext\"\nimport { Link } from \"react-router-dom\"\nimport { GET_USER } from \"../../graphql/query\"\n\nconst { Header } = Layout\n\nfunction TopNavbar() {\n  const userContext = useContext(UserContext)\n  const { email } = userContext.user\n  const content = (\n    <div>\n      <Link to=\"/admin/user/settings\">Settings</Link>\n      <p>\n        <a href=\"/logout\">Logout</a>\n      </p>\n    </div>\n  )\n\n  const DisplayUser = () => {\n    const { error, loading, data } = useQuery(GET_USER, {\n      variables: { email }\n    })\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data) {\n      const { fullname, avatar, email } = data.user\n      return (\n        <Popover\n          placement=\"bottomRight\"\n          title={\n            <div>\n              <div>\n                <b>{fullname}</b>\n              </div>\n              <p>{email}</p>\n            </div>\n          }\n          content={content}\n        >\n          <img\n            src={`https://admin.koompi.com` + avatar}\n            alt={fullname}\n            className=\"avatar\"\n          />\n        </Popover>\n      )\n    }\n  }\n\n  return (\n    <Header style={{ background: \"#fff\", padding: 0 }}>\n      <DisplayUser />\n    </Header>\n  )\n}\n\nexport default TopNavbar\n","import React from \"react\"\nimport { Layout } from \"antd\"\nconst { Footer } = Layout\n\nfunction PageFooter() {\n  return (\n    <Footer style={{ textAlign: \"center\" }}>\n      Copyright © 2020 Created by <b>KOOMPI</b>\n      <p>\n        A brainchild of <b>SmallWorld Venture</b>\n      </p>\n    </Footer>\n  )\n}\n\nexport default PageFooter\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport three_dots from \"../../assets/img/three-dots-black.svg\"\n\n// ===== Query Section =====\nimport { GET_USERS, GET_POSTS, GET_PAGES, GET_RETAILERS } from \"../../graphql/query\"\n\nconst UserTotal = () => {\n  const { error, loading, data } = useQuery(GET_USERS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.users.length}</b> users\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\nconst TotalPost = () => {\n  const { error, loading, data } = useQuery(GET_POSTS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.posts.length}</b> posts\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\n\nconst TotalPage = () => {\n  const { error, loading, data } = useQuery(GET_PAGES)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.pages.length}</b> pages\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\n\nconst TotalRetailer = () => {\n  const { error, loading, data } = useQuery(GET_RETAILERS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.retailers.length}</b> retailers\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\nexport { UserTotal, TotalPost, TotalPage, TotalRetailer }\n","import React, { useState } from \"react\"\nimport { Row, Col, Layout } from \"antd\"\n\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport PageFooter from \"./footer\"\nimport { UserTotal, TotalPost, TotalPage, TotalRetailer } from \"./data/admin\"\n\nimport Chart from \"react-apexcharts\"\n\nconst { Content } = Layout\n\nfunction Admin() {\n  const [chart] = useState({\n    series: [\n      {\n        name: \"Posts\",\n        data: [1, 2, 1, 1, 3, 1, 2]\n      }\n    ],\n    options: {\n      chart: {\n        height: 350,\n        type: \"area\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      xaxis: {\n        type: \"datetime\",\n        categories: [\n          \"2018-09-19T00:00:00\",\n          \"2018-09-19T01:30:00\",\n          \"2018-09-19T02:30:00\",\n          \"2018-09-19T03:30:00\",\n          \"2018-09-19T04:30:00\",\n          \"2018-09-19T05:30:00\",\n          \"2018-09-19T06:30:00\"\n        ]\n      },\n      tooltip: {\n        x: {\n          format: \"dd/MM/yy\"\n        }\n      }\n    }\n  })\n  // const { error, loading, data } = useQuery(GET_POSTS);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div style={{ padding: \"0px 50px \" }}>\n            {/* ======= Display content ====== */}\n            <Row gutter={[16, 16]}>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/User.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <UserTotal />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Post.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalPost />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Page.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalPage />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Retailers.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalRetailer />\n                </div>\n              </Col>\n            </Row>\n            <Row gutter={[16, 16]}>\n              <Col span={8}>\n                <div className=\"card_back\">\n                  <Chart\n                    series={chart.series}\n                    options={chart.options}\n                    type=\"area\"\n                  ></Chart>\n                </div>\n              </Col>\n              <Col span={8}>\n                <div className=\"card_back\">\n                  <Chart\n                    series={chart.series}\n                    options={chart.options}\n                    type=\"line\"\n                  ></Chart>\n                </div>\n              </Col>\n              <Col span={8}>\n                <div className=\"card_back\">\n                  <Chart\n                    series={chart.series}\n                    options={chart.options}\n                    type=\"area\"\n                  ></Chart>\n                </div>\n              </Col>\n            </Row>\n          </div>\n\n          <div></div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Admin\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES, GET_POSTS } from \"../../graphql/query\"\nimport { CREATE_POST } from \"../../graphql/mutation\"\nimport _ from \"lodash\"\n\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction NewPost(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: categoryRefetch } = useQuery(GET_CATEGORIES)\n  const { refetch: postsRefetch } = useQuery(GET_POSTS)\n  const [createPost] = useMutation(CREATE_POST)\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\"\n              }\n            ]\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      const filtered_pages = _.filter(data.categories, function(p) {\n        return _.includes([\"news\", \"events\"], p.slug)\n      })\n\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\"\n              }\n            ],\n            initialValue: filtered_pages[0].title\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {filtered_pages.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createPost({\n          variables: {\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            categoryRefetch()\n            postsRefetch()\n            props.form.resetFields()\n            await message.success(res.data.create_post.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">New Post</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        placeholder=\"Let's write an awesome story!\"\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Thumnail\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"thumnail\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    {/* ======= Category Sections ======= */}\n                    <DisplayCategories />\n\n                    {/* ======= Tags ======= */}\n                    <FormItem label=\"Tags\">\n                      {getFieldDecorator(\"tags\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The tags is required\"\n                          }\n                        ]\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\"\n                          }\n                        ]\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\"\n                          }\n                        ]\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewPost)\n","import React from \"react\"\nimport { Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_POSTS } from \"../../graphql/query\"\nimport { DELETE_POST } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllPosts() {\n  // ===== Mutation Varile Section =====\n  const [deletePost] = useMutation(DELETE_POST)\n  const { refetch: postRefetch } = useQuery(GET_POSTS)\n\n  const columns = [\n    {\n      title: \"Image\",\n      dataIndex: \"image\"\n    },\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\"\n    },\n    {\n      title: \"Slug\",\n      dataIndex: \"slug\",\n      key: \"slug\"\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_POSTS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.posts.map((post) => {\n              const { id, title, category, created_at, user, slug } = post\n              return {\n                key: id,\n                image: (\n                  <img\n                    src={\"https://admin.koompi.com\" + post.thumnail}\n                    alt=\"post\"\n                    height=\"40px\"\n                    width=\"60px\"\n                  />\n                ),\n                title: title.length <= 25 ? title : title.substring(0, 25) + \" ...\",\n                slug: slug.length <= 25 ? slug : slug.substring(0, 25) + \" ...\",\n                category: (\n                  <Tag color=\"green\">\n                    {category === null ? \"No category\" : category.title}\n                  </Tag>\n                ),\n\n                created_by: user === null ? \"Null\" : user.fullname,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/post/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this Post?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deletePost({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_post.message)\n                            await postRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={true}\n          />\n        )\n      }\n      return (\n        <div>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All Posts</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllPosts\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\n// import QuillTextEditor from \"../QuillTextEditor\";\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { GET_PAGES, GET_CATEGORIES } from \"../../graphql/query\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Upload,\n  Select,\n  Layout,\n  message,\n  InputNumber\n} from \"antd\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_PAGE } from \"../../graphql/mutation\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction NewPage(props) {\n  const { getFieldDecorator } = props.form\n\n  const [createPage] = useMutation(CREATE_PAGE)\n\n  // ===== state management =====\n  const [image, setImage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createPage({\n          variables: {\n            ...values,\n            description: JSON.stringify(savedData),\n            sectionNumber: values.sectionNumber.toString()\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            pageRefetch()\n            await message.success(res.data.create_page.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\"\n              }\n            ]\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      return (\n        <Form.Item label=\"Page\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\"\n              }\n            ],\n            initialValue: data.categories[0].title\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {data.categories.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              {/* <h1 className=\"koompi-title-brand\">KOOMPI</h1> */}\n              <h1 className=\"title_new_post\">New Page</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title: \">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"SubTitle: \">\n                      {getFieldDecorator(\"subTitle\")(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        placeholder=\"Let's write an awesome story!\"\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        {/* ======= Section Number ======= */}\n                        <FormItem label=\"Section Number: \">\n                          {getFieldDecorator(\"sectionNumber\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Section Number is required\"\n                              }\n                            ],\n                            initialValue: 1\n                          })(\n                            <InputNumber\n                              min={1}\n                              size=\"large\"\n                              style={{ width: \"100%\" }}\n                            />\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={12}>\n                        {/* ======= Category Sections ======= */}\n                        <DisplayCategories />\n                      </Col>\n                    </Row>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\"\n                          }\n                        ]\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\"\n                          }\n                        ]\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewPage)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_PAGES } from \"../../graphql/query\"\nimport { DELETE_PAGE } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllPages() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deletePage] = useMutation(DELETE_PAGE)\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n\n  const columns = [\n    {\n      title: \"Image\",\n      dataIndex: \"image\"\n    },\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\"\n    },\n    {\n      title: \"SubTitle\",\n      dataIndex: \"subTitle\",\n      key: \"subTitle\"\n    },\n    {\n      title: \"Page\",\n      dataIndex: \"category\",\n      key: \"category\",\n      sorter: (a, b) => a.category.length - b.category.length\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n    {\n      title: \"Updated By\",\n      dataIndex: \"updated_by\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_PAGES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.pages.map((page) => {\n              const {\n                id,\n                title,\n                subTitle,\n                category,\n                image,\n                created_at,\n                created_by,\n                updated_by\n              } = page\n\n              return {\n                key: parse(title.substring(0, 30)),\n                image: (\n                  <img\n                    src={\"https://admin.koompi.com\" + image}\n                    alt=\"post\"\n                    height=\"40px\"\n                    width=\"60px\"\n                  />\n                ),\n                title:\n                  title.substring().length > 25\n                    ? parse(title.substring(0, 25) + \"... \")\n                    : parse(title),\n                subTitle:\n                  subTitle === null ? (\n                    <Tag color=\"red\">N/A</Tag>\n                  ) : (\n                    <Tag color=\"green\">{subTitle.toUpperCase()}</Tag>\n                  ),\n                category: category === null ? \"No category\" : category.title,\n                created_by,\n                updated_by: updated_by === null ? \"No Update\" : updated_by,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: visible ? null : (\n                  <div>\n                    <Link to={`/admin/page/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this Page?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deletePage({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_page.message)\n                            await pageRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All Pages</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllPages\n","import React, { useContext } from \"react\"\nimport { Table, Tag, Layout, Popconfirm, message } from \"antd\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport PageFooter from \"./footer\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { UserContext } from \"../context/userContext\"\nimport { GET_USERS } from \"../graphql/query\"\nimport { APPROVE_USER, DELETE_USER, ISADMIN } from \"../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Users() {\n  const [approveUser] = useMutation(APPROVE_USER)\n  const [deleteUser] = useMutation(DELETE_USER)\n  const [makeAsAdmin] = useMutation(ISADMIN)\n  const userContext = useContext(UserContext)\n  const { isAdmin } = userContext.user\n\n  const columns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Admin\",\n      key: \"admin\",\n      dataIndex: \"admin\"\n    },\n    {\n      title: \"Approved\",\n      key: \"approved\",\n      dataIndex: \"approved\"\n    }\n  ]\n\n  const adminColumns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Admin\",\n      key: \"admin\",\n      dataIndex: \"admin\"\n    },\n    {\n      title: \"Approved\",\n      key: \"approved\",\n      dataIndex: \"approved\"\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const DisplayUserAdmin = () => {\n    const { error, loading, data, refetch } = useQuery(GET_USERS)\n    if (loading) {\n      return \"Loading ...\"\n    }\n    if (error) console.log(error)\n\n    if (data) {\n      refetch()\n      return (\n        <Table\n          dataSource={data.users.map((user, index) => {\n            const { id, fullname, email, isAdmin, approved } = user\n\n            return {\n              key: index,\n              fullname,\n              email,\n              admin: isAdmin ? (\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"Are you sure to make this user a normal user?\"\n                  onConfirm={() => {\n                    makeAsAdmin({\n                      variables: { id: `${id}`, isAdmin: false }\n                    })\n                    message.success(`${fullname} updated successfully `)\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"green\" key={id} style={{ cursor: \"pointer\" }}>\n                    Yes\n                  </Tag>\n                </Popconfirm>\n              ) : (\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"Are you sure to approve this user as Admin?\"\n                  onConfirm={() => {\n                    makeAsAdmin({\n                      variables: { id: `${id}`, isAdmin: true }\n                    })\n\n                    message.success(\n                      `${fullname} has been aprroved as admin successfully `\n                    )\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"red\" key={id} style={{ cursor: \"pointer\" }}>\n                    No\n                  </Tag>\n                </Popconfirm>\n              ),\n              approved: approved ? (\n                <Popconfirm\n                  disabled={isAdmin ? true : false}\n                  placement=\"topRight\"\n                  title=\"Are you sure disable this user?\"\n                  onConfirm={() => {\n                    approveUser({\n                      variables: { id: `${id}`, approve: false }\n                    })\n                    message.success(`${fullname} is disable `)\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"green\" key={id} style={{ cursor: \"pointer\" }}>\n                    Approved\n                  </Tag>\n                </Popconfirm>\n              ) : (\n                <Popconfirm\n                  disabled={isAdmin ? true : false}\n                  placement=\"topRight\"\n                  title=\"Are you sure to approve this user?\"\n                  onConfirm={() => {\n                    approveUser({\n                      variables: { id: `${id}`, approve: true }\n                    })\n                    message.success(`${fullname} has been aprroved successfully `)\n                    refetch()\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"orange\" key={id} style={{ cursor: \"pointer\" }}>\n                    Pending\n                  </Tag>\n                </Popconfirm>\n              ),\n              action: (\n                <div>\n                  <Popconfirm\n                    disabled={isAdmin ? true : false}\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this user?\"\n                    onConfirm={() => {\n                      deleteUser({ variables: { id: id } })\n                      message.success(`${fullname} Has been deleted `)\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n          columns={adminColumns}\n        />\n      )\n    }\n  }\n\n  const DisplayUser = () => {\n    const { error, loading, data } = useQuery(GET_USERS)\n    if (loading) {\n      return \"Loading ...\"\n    }\n    if (error) console.log(error)\n\n    if (data) {\n      return (\n        <Table\n          dataSource={data.users.map((user, index) => {\n            const { id, fullname, email, isAdmin, approved } = user\n\n            return {\n              key: index,\n              fullname,\n              email,\n              admin: isAdmin ? (\n                <Tag color=\"green\" key={id}>\n                  Yes\n                </Tag>\n              ) : (\n                <Tag color=\"red\" key={id}>\n                  No\n                </Tag>\n              ),\n              approved: approved ? (\n                <Tag color=\"green\" key={id}>\n                  Approved\n                </Tag>\n              ) : (\n                <Tag color=\"orange\" key={id}>\n                  Pending\n                </Tag>\n              )\n            }\n          })}\n          columns={columns}\n        />\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Users</h1>\n              {isAdmin ? <DisplayUserAdmin /> : <DisplayUser />}\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Users\n","import { useEffect } from \"react\"\nimport Cookie from \"js-cookie\"\nconst Logout = () => {\n  useEffect(() => {\n    Cookie.set(\"token\", \"\")\n    window.location.replace(\"/login\")\n  })\n  return null\n}\n\nexport default Logout\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\nimport slugify from \"slugify\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES } from \"../../graphql/query\"\nimport { CREATE_CATEGORY, DELETE_CATEGORY } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport {\n  Form,\n  Icon,\n  Input,\n  Button,\n  Row,\n  Col,\n  Layout,\n  message,\n  Table,\n  Divider,\n  Tag,\n  Popconfirm\n} from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Category(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== Mutation Varile Section =====\n  const [createCategory] = useMutation(CREATE_CATEGORY)\n  const [deleteCategory] = useMutation(DELETE_CATEGORY)\n  const { refetch: categoryRefetch } = useQuery(GET_CATEGORIES)\n\n  // ===== Display Column in the Table Section =====\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Slug\",\n      dataIndex: \"slug\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      sorter: (a, b) => a.created_by.length - b.created_by.length\n    },\n\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"Updated By\",\n      dataIndex: \"updated_by\"\n    },\n    {\n      title: \"Updated At\",\n      dataIndex: \"updated_at\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  // ===== Display Category Section =====\n  const DisplayCategory = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <Table\n          columns={columns}\n          dataSource={data.categories.map((cate) => {\n            return {\n              key: cate.id,\n              title: cate.title,\n              slug: cate.slug,\n              created_by: cate.created_by,\n              updated_by: cate.updated_by === \"\" ? \"No Update\" : cate.updated_by,\n              created_at: moment.unix(cate.created_at / 1000).format(\"YYYY-MM-DD\"),\n              updated_at:\n                cate.updated_at === null\n                  ? \"No Update\"\n                  : moment.unix(cate.updated_at / 1000).format(\"YYYY-MM-DD\"),\n              action: (\n                <div>\n                  <Link to={`/admin/category/edit/${cate.id}`}>\n                    <Tag className=\"btn\" color=\"#2db7f5\">\n                      Edit\n                    </Tag>\n                  </Link>\n                  <Divider type=\"vertical\" />\n\n                  <Popconfirm\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this category?\"\n                    onConfirm={() => {\n                      deleteCategory({ variables: { id: `${cate.id}` } })\n                      message.success(\"The Category has been Deleted\")\n                      categoryRefetch()\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n        />\n      )\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createCategory({\n          variables: { ...values, slug: slugify(values.title, { lower: true }) }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            categoryRefetch()\n            props.form.resetFields()\n            await message.success(\"The Category created successfully.\", 3)\n          })\n          .catch((error) => {\n            message.error(error.graphQLErrors[0].message, 5)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Category</h1>\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col span={4} style={{ display: \"none\" }}>\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col\n                    span={24}\n                    style={{ marginTop: \"-10px\", marginBottom: \"10px\" }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"btnSubmit\"\n                      disabled={loading ? true : false}\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n              <br />\n              <h1 className=\"title_new_post\">Categories</h1>\n              <DisplayCategory />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Category)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport slugify from \"slugify\"\n\n// ===== Query Section =====\nimport { EDIT_CATEGORY } from \"../../graphql/query\"\n\n// ===== Mutation Section =====\nimport { UPDATE_CATEGORY } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport { Form, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditCategory(props) {\n  const { getFieldDecorator } = props.form\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const userData = useContext(UserContext)\n  const [updateCategory] = useMutation(UPDATE_CATEGORY)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updateCategory({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true })\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(\"The Category update successfully.\", 3)\n            await props.history.push(\"/admin/categories\")\n          })\n          .catch((error) => {\n            message.error(error)\n          })\n      }\n    })\n  }\n\n  const { loading: edit_category_loading, data: edit_category_data } = useQuery(\n    EDIT_CATEGORY,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">\n                {edit_category_loading\n                  ? \"loading ...\"\n                  : `Update ${edit_category_data.category.title}`}\n              </h1>\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[16, 16]}>\n                  <Col span={16}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        initialValue: edit_category_loading\n                          ? \"loading ...\"\n                          : edit_category_data.category.title\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: new Date().toISOString()\n                      })(<Input style={{ display: \"none\" }} size=\"large\" />)}\n                    </FormItem>\n                  </Col>\n                  <Col span={4}>\n                    <FormItem>\n                      {getFieldDecorator(\"updated_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" disabled />)}\n                    </FormItem>\n                  </Col>\n                  <Col span={4}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"btnSubmit\"\n                      disabled={loading ? true : false}\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Update\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditCategory)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES, GET_POST, GET_POSTS } from \"../../graphql/query\"\nimport { UPDATE_POST } from \"../../graphql/mutation\"\nimport _ from \"lodash\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction EditPost(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: postLoading, data: postData } = useQuery(GET_POST, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n\n  const { refetch: postRefetch } = useQuery(GET_POSTS)\n  const [updatePost] = useMutation(UPDATE_POST)\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n\n    const filtered_pages = _.filter(data.categories, function(p) {\n      return _.includes([\"news\", \"events\"], p.slug)\n    })\n    return (\n      <Form.Item label=\"Categories\">\n        {getFieldDecorator(\"category\", {\n          rules: [\n            {\n              required: true,\n              message: \"Please select your category!\"\n            }\n          ],\n          initialValue: postData.post.category.title\n        })(\n          <Select placeholder=\"Please select the category\" size=\"large\">\n            {filtered_pages.map((cate) => {\n              return (\n                <Option value={cate.title} key={cate.id}>\n                  {cate.title}\n                </Option>\n              )\n            })}\n          </Select>\n        )}\n      </Form.Item>\n    )\n  }\n\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      console.log(slugify(values.title, { lower: true }))\n\n      if (!err) {\n        updatePost({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            postRefetch()\n            await message.success(res.data.update_post.message, 3)\n            await props.history.push(\"/admin/all-posts\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // const handleSubmit = async e => {\n  //   e.preventDefault();\n  //   props.form.validateFieldsAndScroll((err, values) => {\n  //     if (!err) {\n  //       console.log(values);\n\n  //       updatePost({\n  //         variables: {\n  //           id: window.location.pathname.split(\"/\")[4],\n  //           ...values\n  //         }\n  //       })\n  //         .then(async () => {\n  //           setLoading(true);\n  //           setTimeout(() => {\n  //             setLoading(false);\n  //           }, 3000);\n  //           postRefetch();\n  //           await message.success(\"Post updated successfully.\", 3);\n  //           await props.history.push(\"/admin/all-posts\");\n  //         })\n  //         .catch(error => {\n  //           console.log(error);\n  //         });\n  //     }\n  //   });\n  // };\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  console.log(\"Result\", postData.post.description)\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Post</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: postData.post.title\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: new Date().toISOString()\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          postLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(postData.post.description)\n                        }\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Thumnail\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              postData.post.thumnail}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"thumnail\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? postData.post.thumnail\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    {/* ======= Category Sections ======= */}\n                    <DisplayCategories />\n\n                    {/* ======= Tags ======= */}\n                    <FormItem label=\"Tags\">\n                      {getFieldDecorator(\"tags\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The tags is required\"\n                          }\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.tags\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\"\n                          }\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.keywords\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\"\n                          }\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.meta_desc\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={handleSubmit}\n                        // disabled=\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditPost)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_PAGE, GET_PAGES, GET_CATEGORIES } from \"../../graphql/query\"\nimport { UPDATE_PAGE } from \"../../graphql/mutation\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Upload,\n  Select,\n  Layout,\n  message,\n  InputNumber\n} from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction EditPage(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: pageLoading, data: pageData } = useQuery(GET_PAGE, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n  const [updatePage] = useMutation(UPDATE_PAGE)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updatePage({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            description: JSON.stringify(savedData),\n            ...values,\n            sectionNumber: values.sectionNumber.toString()\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.update_page.message, 3)\n            await pageRefetch()\n            await props.history.push(\"/admin/all-pages\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // ===== Handle Image Upload =====\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\"\n              }\n            ]\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\"\n              }\n            ],\n            initialValue: pageData.page.category.title\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {data.categories.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  if (pageLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Page</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: pageData.page.title\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"SubTitle\">\n                      {getFieldDecorator(\"subTitle\", {\n                        initialValue: pageData.page.subTitle\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: new Date().toISOString()\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          pageLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(pageData.page.description)\n                        }\n                      />\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        // disabled=\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              pageData.page.image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Imae is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? pageData.page.image\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        {/* ======= Section Number ======= */}\n                        <FormItem label=\"Section Number: \">\n                          {getFieldDecorator(\"sectionNumber\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Section Number is required\"\n                              }\n                            ],\n                            initialValue: pageData.page.sectionNumber\n                          })(\n                            <InputNumber\n                              min={1}\n                              size=\"large\"\n                              style={{ width: \"100%\" }}\n                            />\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={12}>\n                        {/* ======= Category Sections ======= */}\n                        <DisplayCategories />\n                      </Col>\n                    </Row>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\"\n                          }\n                        ],\n                        initialValue: pageLoading ? \"\" : pageData.page.keywords\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\"\n                          }\n                        ],\n                        initialValue: pageLoading ? \"\" : pageData.page.meta_desc\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditPage)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_MEMBER } from \"../../graphql/mutation\"\nimport { GET_MEMBERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\n\nfunction NewMember(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n  const [createMember] = useMutation(CREATE_MEMBER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createMember({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            memberRefetch()\n            props.form.resetFields()\n            await message.success(res.data.add_member.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The fullname is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Department\">\n                      {getFieldDecorator(\"department\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Please select member department!\"\n                          }\n                        ],\n                        initialValue: \"software-team\"\n                      })(\n                        <Select size=\"large\">\n                          <Option value=\"business-development\">\n                            Business Development\n                          </Option>\n                          <Option value=\"hardware-team\">KOOMPI Hardware Team</Option>\n                          <Option value=\"academy\">KOOMPI ACADEMY</Option>\n                          <Option value=\"sales-and-supplier-relation\">\n                            Sales and Supplier Relation\n                          </Option>\n                          <Option value=\"communication-and-marketing\">\n                            Communication and Marketing\n                          </Option>\n                          <Option value=\"software-team\">Software Teams</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Postion: \">\n                      {getFieldDecorator(\"position\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Position is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number: \">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Phone Number is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email: \">\n                      {getFieldDecorator(\"email\", {\n                        rules: [\n                          {\n                            type: \"email\",\n                            message: \"The input is not valid E-mail!\"\n                          },\n                          {\n                            required: true,\n                            message: \"Email is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"photo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Photo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewMember)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_MEMBERS } from \"../../graphql/query\"\nimport { DELETE_MEMBER } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Members() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteMember] = useMutation(DELETE_MEMBER)\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n\n  const columns = [\n    {\n      title: \"Photo\",\n      dataIndex: \"photo\"\n    },\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Department\",\n      dataIndex: \"department\",\n      key: \"department\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_MEMBERS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.members.map((member) => {\n              const {\n                id,\n                fullname,\n                phoneNumber,\n                email,\n                created_by,\n                photo,\n                department,\n                created_at\n              } = member\n              return {\n                key: id,\n                photo: (\n                  <img\n                    src={`https://admin.koompi.com${photo}`}\n                    alt=\"post\"\n                    height=\"50px\"\n                    width=\"50px\"\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ),\n                fullname,\n                department,\n                email,\n                phoneNumber,\n\n                created_by: created_by,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/member/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this member?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteMember({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_member.message)\n                            await memberRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Members</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Members\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_MEMBERS, GET_MEMBER } from \"../../graphql/query\"\nimport { UPDATE_MEMBER } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\n\nfunction EditMember(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: postLoading, data: memberData } = useQuery(GET_MEMBER, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n  const [updateMember] = useMutation(UPDATE_MEMBER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateMember({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            memberRefetch()\n            await message.success(res.data.update_member.message)\n            await props.history.push(\"/admin/members\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The fullname is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Department\">\n                      {getFieldDecorator(\"department\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Please select member department!\"\n                          }\n                        ],\n                        initialValue: memberData.member.department\n                      })(\n                        <Select>\n                          <Option value=\"business-development\">\n                            Business Development\n                          </Option>\n                          <Option value=\"hardware-team\">KOOMPI Hardware Team</Option>\n                          <Option value=\"academy\">KOOMPI ACADEMY</Option>\n                          <Option value=\"sales-and-supplier-relation\">\n                            Sales and Supplier Relation\n                          </Option>\n                          <Option value=\"communication-and-marketing\">\n                            Communication and Marketing\n                          </Option>\n                          <Option value=\"software-team\">Software Teams</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Postion: \">\n                      {getFieldDecorator(\"position\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Position is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.position\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number: \">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Phone Number is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.phoneNumber\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email: \">\n                      {getFieldDecorator(\"email\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Email is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.email\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              memberData.member.photo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"photo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? memberData.member.photo\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditMember)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_RETAILER } from \"../../graphql/mutation\"\nimport { GET_RETAILERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction NewRetailer(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchRetailer } = useQuery(GET_RETAILERS)\n  const [createRetailer] = useMutation(CREATE_RETAILER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        createRetailer({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            refetchRetailer()\n            props.form.resetFields()\n            await message.success(res.data.add_retailer.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">New Retailer</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email\">\n                      {getFieldDecorator(\"email\", {})(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number\">\n                      {getFieldDecorator(\"phoneNumber\", {})(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link Location: \">\n                      {getFieldDecorator(\"location\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link Location is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"logo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewRetailer)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_RETAILERS } from \"../../graphql/query\"\nimport { DELETE_RETAILER } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Retailers() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteRetailer] = useMutation(DELETE_RETAILER)\n  const { refetch: retailerRefetch } = useQuery(GET_RETAILERS)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\"\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_RETAILERS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.retailers.map((retailer) => {\n              const {\n                id,\n                name,\n                phoneNumber,\n                email,\n                created_by,\n                logo,\n                created_at\n              } = retailer\n              return {\n                key: parse(name),\n                logo: (\n                  <img\n                    src={`https://admin.koompi.com${logo}`}\n                    alt={name}\n                    height=\"30px\"\n                    width=\"auto\"\n                  />\n                ),\n                name,\n                email: email === null ? \"Null\" : email,\n                phoneNumber: phoneNumber === null ? \"Null\" : phoneNumber,\n\n                created_by: created_by,\n                created_at: moment\n                  .unix(created_at / 1000)\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/retailer/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this retailer?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteRetailer({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_retailer.message)\n                            await retailerRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Retailers</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Retailers\n","import React, { useState } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_RETAILERS, GET_RETAILER } from \"../../graphql/query\"\nimport { UPDATE_RETAILER } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditRetailer(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: postLoading, data: retailerData } = useQuery(GET_RETAILER, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  const { refetch: refechRetailer } = useQuery(GET_RETAILERS)\n  const [updateRetailer] = useMutation(UPDATE_RETAILER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateRetailer({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            await message.success(res.data.update_retailer.message, 3)\n            refechRetailer()\n            await props.history.push(\"/admin/retailers\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Retailer</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ],\n                        initialValue: retailerData.retailer.name\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Email\">\n                      {getFieldDecorator(\"email\", {\n                        initialValue: retailerData.retailer.email\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number\">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        initialValue: retailerData.retailer.phoneNumber\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link Location: \">\n                      {getFieldDecorator(\"location\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link Location is required\"\n                          }\n                        ],\n                        initialValue: retailerData.retailer.location\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              retailerData.retailer.logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? retailerData.retailer.logo\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditRetailer)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\nimport { GET_RETAILERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction NewSocialMedia(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchRetailer } = useQuery(GET_RETAILERS)\n  const [addSocailMedia] = useMutation(CREATE_SOCIAL_MEDIA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        addSocailMedia({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.add_social_media.message, 3)\n            await refetchRetailer()\n            await props.form.resetFields()\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Social Media</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link: \">\n                      {getFieldDecorator(\"link\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"logo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewSocialMedia)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOCIAL_MEDIA } from \"../../graphql/query\"\nimport { DELETE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction SocialMedia() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteSocialMedia] = useMutation(DELETE_SOCIAL_MEDIA)\n  const { refetch: refetchSocialMedia } = useQuery(GET_SOCIAL_MEDIA)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\"\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"Link\",\n      dataIndex: \"link\",\n      key: \"link\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplaySocailMedia = () => {\n    const { error, loading, data, refetch } = useQuery(GET_SOCIAL_MEDIA)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      refetch()\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.socialMedia.map((socialMedia) => {\n              const { id, name, created_by, link, logo, created_at } = socialMedia\n              return {\n                key: parse(name),\n                logo: (\n                  <img\n                    src={`https://admin.koompi.com${logo}`}\n                    alt={name}\n                    height=\"40px\"\n                    width=\"40px\"\n                  />\n                ),\n                name,\n                link,\n                created_by,\n                created_at: moment\n                  .unix(created_at / 1000)\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/social-media/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title={`Are you sure to delete ${name}?`}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteSocialMedia({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(\n                              res.data.delete_social_media.message\n                            )\n                            await refetchSocialMedia()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Social Media</h1>\n              <DisplaySocailMedia />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default SocialMedia\n","import React, { useState } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_SOCIAL_MEDIA, GET_ONE_SOCIAL_MEDIA } from \"../../graphql/query\"\nimport { UPDATE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditSocialMedia(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: socialMediaLoading, data: socialMediaData } = useQuery(\n    GET_ONE_SOCIAL_MEDIA,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  const { refetch: refechSocialMedia } = useQuery(GET_SOCIAL_MEDIA)\n  const [updateSocialMedia] = useMutation(UPDATE_SOCIAL_MEDIA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateSocialMedia({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n\n            await message.success(res.data.update_social_media.message, 3)\n            await props.form.resetFields()\n            await refechSocialMedia()\n            await props.history.push(\"/admin/social-media\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (socialMediaLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ],\n                        initialValue: socialMediaData.oneSocialMedia.name\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link: \">\n                      {getFieldDecorator(\"link\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link is required\"\n                          }\n                        ],\n                        initialValue: socialMediaData.oneSocialMedia.link\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              socialMediaData.oneSocialMedia.logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? socialMediaData.oneSocialMedia.logo\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditSocialMedia)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport PageFooter from \"./footer\"\nimport { UserContext } from \"../context/userContext\"\nimport three_dots from \"../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { UPDATE_USER } from \"../graphql/mutation\"\nimport { GET_USER } from \"../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Settings(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  //   ===== Global Data =====\n  const { loading: userLoading, data: userQuery, refetch } = useQuery(GET_USER, {\n    variables: { email: userData.user.email }\n  })\n\n  const [updateUser] = useMutation(UPDATE_USER)\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const { fullname, avatar, oldPassword, newPassword } = values\n\n        updateUser({\n          variables: {\n            email: userQuery.user.email,\n            fullname,\n            avatar,\n            oldPassword,\n            newPassword\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            refetch()\n            await message.success(\"User updated successfully.\", 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (userLoading) {\n    return \"Loading ...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">User Settings</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              userQuery.user.avatar}`}\n                            alt=\"avatar\"\n                            style={{ height: \"133.5px\", width: \"133.5px\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ height: \"133.5px\", width: \"133.5px\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"avatar\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Avatar is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? userQuery.user.avatar\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"FullName is required\"\n                          }\n                        ],\n                        initialValue: userQuery.user.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={16}>\n                    <FormItem label=\"Old Password\">\n                      {getFieldDecorator(\"oldPassword\")(\n                        <Input size=\"large\" type=\"password\" />\n                      )}\n                    </FormItem>\n\n                    <FormItem label=\"New Password\">\n                      {getFieldDecorator(\"newPassword\")(\n                        <Input size=\"large\" type=\"password\" />\n                      )}\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Settings)\n","import React, { useState } from \"react\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\n\nfunction HandleVerify(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleVerify = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post(\n            `http://127.0.0.1:8000/telegramlogin?phone=${\n              values.phone\n            }&code=${parseInt(values.code)}`\n          )\n          .then(async () => {\n            message.success(\"Hello World\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Form className=\"login-form\" onSubmit={handleVerify}>\n      <Row gutter={24}>\n        <Col span={18}>\n          <FormItem>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Phone Number is required\"\n                }\n              ],\n              initialValue: props.phone\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Phone Number\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={6}>\n          <FormItem>\n            {getFieldDecorator(\"code\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Code is required\"\n                }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Code\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            className=\"btnSubmit\"\n            disabled={loading ? true : false}\n          >\n            {loading ? (\n              <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default Form.create()(HandleVerify)\n","import React, { useState } from \"react\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport TextArea from \"antd/lib/input/TextArea\"\nimport axios from \"axios\"\nimport \"react-mde/lib/styles/css/react-mde-all.css\"\n\nconst FormItem = Form.Item\n\nfunction HandleMessage(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleMessage = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      console.log(err)\n\n      if (!err) {\n        console.log(values)\n\n        axios\n          .post(\n            `http://127.0.0.1:8000/telegrammsg?phone=${values.phone}&channel=${values.channel}&msg=${values.msg}`\n          )\n          .then(async () => {\n            message.success(\"Hello World\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <div style={{ marginBottom: \"24px\" }}>\n      <h4>Verify Code telegram</h4>\n      <Form className=\"login-form\" onSubmit={handleMessage}>\n        <Row gutter={12}>\n          <Col span={12}>\n            <FormItem>\n              {getFieldDecorator(\"phone\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The Phone Number is required\"\n                  }\n                ],\n                initialValue: props.phone\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                  placeholder=\"Phone Number\"\n                />\n              )}\n            </FormItem>\n          </Col>\n\n          <Col span={12}>\n            <FormItem>\n              {getFieldDecorator(\"channel\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The Channel is required\"\n                  }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                  placeholder=\"Channel\"\n                />\n              )}\n            </FormItem>\n          </Col>\n          <Col span={24}>\n            <FormItem>\n              {getFieldDecorator(\"msg\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The message is required\"\n                  }\n                ]\n              })(<TextArea></TextArea>)}\n            </FormItem>\n          </Col>\n\n          <Col span={24}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              size=\"large\"\n              className=\"btnSubmit\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n              ) : (\n                \"Submit\"\n              )}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  )\n}\n\nexport default Form.create()(HandleMessage)\n","import React, { useState } from \"react\"\n\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\nimport HandleVerify from \"./handle-verify\"\nimport HandleMessage from \"./handle-message\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction TelegramBot(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n  const [phone, setPhone] = useState(\"\")\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    axios\n      .post(`http://127.0.0.1:8000/sendrequest?phone=${phone}`)\n      .then(async () => {\n        message.success(\"Hello World\")\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const handleChange = (e) => {\n    setPhone(e.target.value)\n  }\n\n  console.log(phone)\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\" style={{ width: \"60%\" }}>\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Telegram Bot</h1>\n              <div style={{ marginBottom: \"24px\" }}>\n                <h4>Login telegram</h4>\n                <Form className=\"login-form\" onSubmit={handleSubmit}>\n                  <Row gutter={24}>\n                    <Col span={24}>\n                      <FormItem>\n                        {getFieldDecorator(\"phone\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"The Phone Number is required\"\n                            }\n                          ]\n                        })(\n                          <Input\n                            prefix={\n                              <Icon\n                                type=\"font-size\"\n                                style={{ color: \"rgba(0,0,0,.25)\" }}\n                              />\n                            }\n                            size=\"large\"\n                            placeholder=\"Phone Number\"\n                            onChange={handleChange}\n                          />\n                        )}\n                      </FormItem>\n                    </Col>\n                    <Col span={24}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </div>\n              <div style={{ marginBottom: \"24px\" }}>\n                <HandleVerify phone={phone} />\n              </div>\n              <div style={{ marginBottom: \"24px\" }}>\n                <HandleMessage phone={phone} />\n              </div>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(TelegramBot)\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nimport { CREATE_LEGAL } from \"../../graphql/mutation\"\nimport { GET_LEGALS } from \"../../graphql/query\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Legal(props) {\n  const { getFieldDecorator } = props.form\n  const [createLegal] = useMutation(CREATE_LEGAL)\n  const { refetch: refetchLegal } = useQuery(GET_LEGALS)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [description] = useState(\"\")\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createLegal({\n          variables: {\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            await message.success(res.data.create_legal.message, 3)\n            await refetchLegal()\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legal</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      {getFieldDecorator(\"description\", {\n                        initialValue: description\n                      })(\n                        <div>\n                          <EditorJs\n                            instanceRef={(instance) =>\n                              (editorJsRef.current = instance)\n                            }\n                            tools={EDITOR_JS_TOOLS}\n                            placeholder=\"Let's write an awesome story!\"\n                          />\n                        </div>\n                      )}\n                    </FormItem>\n\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                      onClick={handleSubmit}\n                      // disabled=\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Legal)\n","import React from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_LEGALS } from \"../../graphql/query\"\nimport { DELETE_LEGAL } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport { Form, Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\n\nconst { Content } = Layout\n\nfunction Legals() {\n  // ===== Mutation Varile Section =====\n  const [deleteLegal] = useMutation(DELETE_LEGAL)\n  const { refetch: legalRefetch } = useQuery(GET_LEGALS)\n\n  // ===== Display Column in the Table Section =====\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      sorter: (a, b) => a.created_by.length - b.created_by.length\n    },\n\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  // ===== Display Category Section =====\n  const DisplayLegals = () => {\n    const { error, loading, data } = useQuery(GET_LEGALS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <Table\n          columns={columns}\n          dataSource={data.legals.map((data) => {\n            return {\n              key: data.id,\n              title: data.title,\n              created_by: data.created_by,\n              created_at: moment.unix(data.created_at / 1000).format(\"YYYY-MM-DD\"),\n              action: (\n                <div>\n                  <Link to={`/admin/legal/edit/${data.id}`}>\n                    <Tag className=\"btn\" color=\"#2db7f5\">\n                      Edit\n                    </Tag>\n                  </Link>\n                  <Divider type=\"vertical\" />\n\n                  <Popconfirm\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this legal?\"\n                    onConfirm={(res) => {\n                      deleteLegal({ variables: { id: `${data.id}` } })\n                        .then(async (res) => {\n                          await message.success(res.data.delete_legal.message)\n                          await legalRefetch()\n                        })\n                        .catch((error) => {\n                          console.log(error)\n                          return null\n                        })\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n        />\n      )\n    }\n  }\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legals</h1>\n              <DisplayLegals />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Legals)\n","import React, { useState, useContext } from \"react\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nimport { UPDATE_LEGAL } from \"../../graphql/mutation\"\n// ===== Query Section =====\nimport { GET_LEGAL } from \"../../graphql/query\"\nimport { GET_LEGALS } from \"../../graphql/query\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditLegal(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchLegal } = useQuery(GET_LEGALS)\n\n  const { error: errorLegal, loading: dataLoading, data: legalData } = useQuery(\n    GET_LEGAL,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updateLegal({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.edit_legal.message, 3)\n            await refetchLegal()\n            await props.history.push(\"/admin/all-legals\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const [updateLegal] = useMutation(UPDATE_LEGAL)\n\n  if (errorLegal) console.log(errorLegal)\n  if (dataLoading) return \"Loading ...\"\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legal</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: legalData.legal.title\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          dataLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(legalData.legal.description)\n                        }\n                      />\n                    </FormItem>\n\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                      onClick={handleSubmit}\n                      // disabled=\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Update\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditLegal)\n","import React from \"react\"\nimport { Layout, message, Table, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\n// ===== Query and Mutation Section =====\nimport { GET_PAYMENTS } from \"../../graphql/query\"\nimport { DELETE_PAYMENT } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Payment() {\n  // ===== Mutation Varile Section =====\n  const [deletePayment] = useMutation(DELETE_PAYMENT)\n  const { refetch: paymentRefetch } = useQuery(GET_PAYMENTS)\n\n  const columns = [\n    {\n      title: \"First Name\",\n      dataIndex: \"fname\"\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"lname\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\"\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phoneNumber\"\n    },\n    {\n      title: \"Product\",\n      dataIndex: \"product\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\"\n    },\n    {\n      title: \"Cancle\",\n      dataIndex: \"cancle\"\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_PAYMENTS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      console.log(data)\n\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.payments.map((payment) => {\n              const {\n                id,\n                fname,\n                lname,\n                email,\n                created_at,\n                phoneNumber,\n                price,\n                product,\n                cancle\n              } = payment\n              return {\n                key: id,\n                fname,\n                lname,\n                email,\n                phoneNumber,\n                product: product.map((data) => {\n                  return <Tag color=\"blue\">{data}</Tag>\n                }),\n                price: `$${price}.00`,\n                cancle: cancle ? (\n                  <Tag color=\"red\">Yes</Tag>\n                ) : (\n                  <Tag color=\"green\">No</Tag>\n                ),\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this payment?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deletePayment({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_payment.message)\n                            await paymentRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={true}\n          />\n        )\n      }\n      return (\n        <div>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Payments</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Payment\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARES } from \"../../graphql/query\"\nimport { ADD_SOFTWARE } from \"../../graphql/mutation\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction AddSoftware(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [logo, setLogo] = useState(\"\")\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch } = useQuery(GET_SOFTWARES)\n  const [createSoftware] = useMutation(ADD_SOFTWARE)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const uploadLogo = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setLogo(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} logo uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} logo upload failed.`)\n      }\n    }\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createSoftware({\n          variables: {\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            refetch()\n            props.form.resetFields()\n            await message.success(res.data.create_software.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Software</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        placeholder=\"Let's write an awesome story!\"\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadLogo}>\n                        {logo ? (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              `${logo}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + logo\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(AddSoftware)\n","import React from \"react\"\nimport { Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARES } from \"../../graphql/query\"\nimport { DELETE_SOFTWARE } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllSoftwares() {\n  // ===== Mutation Varile Section =====\n  const [deleteSoftware] = useMutation(DELETE_SOFTWARE)\n\n  const { refetch: refetchSoftware } = useQuery(GET_SOFTWARES)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\"\n    },\n    {\n      title: \"Image\",\n      dataIndex: \"image\"\n    },\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_SOFTWARES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.softwares.map((software) => {\n              const { id, title, created_at, user } = software\n              return {\n                key: id,\n                logo: (\n                  <img\n                    src={\"https://admin.koompi.com\" + software.logo}\n                    alt=\"software\"\n                    height=\"50px\"\n                    width=\"50px\"\n                  />\n                ),\n                image: (\n                  <img\n                    src={\"https://admin.koompi.com\" + software.image}\n                    alt=\"software\"\n                    height=\"50px\"\n                    width=\"50px\"\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ),\n                title: title.length <= 25 ? title : title.substring(0, 25) + \" ...\",\n\n                created_by: user === null ? \"Null\" : user.fullname,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/software/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this software?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteSoftware({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_software.message)\n                            await refetchSoftware()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={true}\n          />\n        )\n      }\n      return (\n        <div>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All softwares</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllSoftwares\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARE, GET_SOFTWARES } from \"../../graphql/query\"\nimport { UPDATE_SOFTWARE } from \"../../graphql/mutation\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditSoftware(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: softwareLoading, data: softwareData } = useQuery(GET_SOFTWARE, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [logo, setLogo] = useState(null)\n  const [image, setImage] = useState(null)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n\n  const { refetch } = useQuery(GET_SOFTWARES)\n  const [updateSoftware] = useMutation(UPDATE_SOFTWARE)\n\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      console.log(slugify(values.title, { lower: true }))\n\n      if (!err) {\n        updateSoftware({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.edit_software.message, 3)\n            await refetch()\n            await props.history.push(\"/admin/all-softwares\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const uploadLogo = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setLogo(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} logo uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} logo upload failed.`)\n      }\n    }\n  }\n\n  if (softwareLoading) {\n    return \"Loading...\"\n  }\n\n  console.log(\"Result\", softwareData.software.description)\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Software</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: softwareData.software.title\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: new Date().toISOString()\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          softwareLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(softwareData.software.description)\n                        }\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadLogo}>\n                        {logo === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              softwareData.software.logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue:\n                            logo === null\n                              ? softwareData.software.logo\n                              : \"/public/uploads/\" + logo\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" +\n                              softwareData.software.image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? softwareData.software.image\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={handleSubmit}\n                        // disabled=\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditSoftware)\n","import React from \"react\"\nimport \"antd/dist/antd.css\"\nimport \"./App.css\"\n\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"\nimport LoginForm from \"./components/users/login\"\nimport SignupForm from \"./components/users/signup\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport PublicRoute from \"./PublicRoute\"\n\n// Call Component\nimport Admin from \"./components/admin\"\nimport NewPost from \"./components/posts/new-post\"\nimport AllPosts from \"./components/posts/all-post\"\nimport NewPage from \"./components/pages/new-page\"\nimport AllPages from \"./components/pages/all-pages\"\nimport Users from \"./components/users\"\nimport Logout from \"./components/users/logout\"\nimport { UserProvider } from \"./context/userContext\"\nimport Category from \"./components/categories/category\"\nimport \"nprogress/nprogress.css\"\nimport editCategory from \"./components/categories/edit-category\"\nimport editPost from \"./components/posts/edit-post\"\nimport editPage from \"./components/pages/edit-page\"\nimport newMember from \"./components/members/new-member\"\nimport Members from \"./components/members/members\"\nimport editMember from \"./components/members/edit-member\"\nimport newRetailer from \"./components/retailers/new-retailer\"\nimport Retailers from \"./components/retailers/retailers\"\nimport editRetailer from \"./components/retailers/edit-retailer\"\nimport newSocialMedia from \"./components/socialmedia/new-social-media\"\nimport SocialMedia from \"./components/socialmedia/social-media\"\nimport editSocialMedia from \"./components/socialmedia/edit-social-media\"\nimport Settings from \"./components/settings\"\nimport TelegramBot from \"./components/telegram-bot/telegram-bot\"\nimport Legal from \"./components/legals/legal\"\nimport allLegals from \"./components/legals/all-legals\"\nimport editLegal from \"./components/legals/edit-legal\"\nimport Payment from \"./components/payments/payment\"\nimport AddSoftware from \"./components/softwares/add-software\"\nimport AllSoftwares from \"./components/softwares/all-softwares\"\nimport EditSoftware from \"./components/softwares/edit-software\"\n\nfunction App() {\n  return (\n    <UserProvider>\n      <Router>\n        <Switch>\n          <PublicRoute restricted={true} exact path=\"/login\" component={LoginForm} />\n          <PublicRoute exact path=\"/\" restricted={true} component={LoginForm} />\n          <PublicRoute exact path=\"/logout\" component={Logout} />\n          <PublicRoute exact path=\"/register\" component={SignupForm} />\n          <PrivateRoute exact path=\"/admin/dashboard\" component={Admin} />\n          <PrivateRoute exact path=\"/admin/users\" component={Users} />\n          <PrivateRoute exact path=\"/admin/user/settings\" component={Settings} />\n          {/* ===== Post Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-post\" component={NewPost} />\n          <PrivateRoute exact path=\"/admin/all-posts\" component={AllPosts} />\n          <PrivateRoute exact path=\"/admin/post/edit/:id\" component={editPost} />\n          {/* ===== Page Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/add-software\" component={AddSoftware} />\n          <PrivateRoute exact path=\"/admin/all-softwares\" component={AllSoftwares} />\n          <PrivateRoute\n            exact\n            path=\"/admin/software/edit/:id\"\n            component={EditSoftware}\n          />\n          {/* ===== Page Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-page\" component={NewPage} />\n          <PrivateRoute exact path=\"/admin/all-pages\" component={AllPages} />\n          <PrivateRoute exact path=\"/admin/page/edit/:id\" component={editPage} />\n          {/* ===== Category Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/categories\" component={Category} />\n          <PrivateRoute\n            exact\n            path=\"/admin/category/edit/:id\"\n            component={editCategory}\n          />\n          {/* ===== Member Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-member\" component={newMember} />\n          <PrivateRoute exact path=\"/admin/members\" component={Members} />\n          <PrivateRoute exact path=\"/admin/member/edit/:id\" component={editMember} />\n          {/* ===== Retailer Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-retailer\" component={newRetailer} />\n          <PrivateRoute exact path=\"/admin/retailers\" component={Retailers} />\n          <PrivateRoute\n            exact\n            path=\"/admin/retailer/edit/:id\"\n            component={editRetailer}\n          />\n          {/* ===== Social Media Route Section ===== */}\n          <PrivateRoute\n            exact\n            path=\"/admin/add-social-media\"\n            component={newSocialMedia}\n          />\n          <PrivateRoute exact path=\"/admin/social-media\" component={SocialMedia} />\n          <PrivateRoute\n            exact\n            path=\"/admin/social-media/edit/:id\"\n            component={editSocialMedia}\n          />\n          {/* ===== Social Media Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/user/payments\" component={Payment} />\n          {/* ===== Telegram Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/telegram-bot\" component={TelegramBot} />\n          {/* ===== Legal Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-legal\" component={Legal} />\n          <PrivateRoute exact path=\"/admin/all-legals\" component={allLegals} />\n          <PrivateRoute exact path=\"/admin/legal/edit/:id\" component={editLegal} />\n        </Switch>\n      </Router>\n    </UserProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport ApolloClient from \"apollo-boost\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nconst cache = new InMemoryCache()\n\nconst client = new ApolloClient({\n  cache,\n  uri: \"https://admin.koompi.com/admin\"\n})\n\n// const client = new ApolloClient({\n//   cache,\n//   uri: \"http://localhost:8080/admin\"\n// })\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}