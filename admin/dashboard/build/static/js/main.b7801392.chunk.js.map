{"version":3,"sources":["assets/img/three-dots-black.svg","assets/img/three-dots.svg","components/users/login.js","graphql/mutation.js","components/users/signup.js","PrivateRoute.js","PublicRoute.js","context/userContext.js","components/navbar/left-navbar.js","graphql/query.js","components/navbar/top-navbar.js","components/footer.js","components/data/admin.js","components/admin.js","components/QuillTextEditor.js","components/posts/tools.js","components/posts/new-post.js","components/posts/all-post.js","components/pages/tools.js","components/pages/new-page.js","components/pages/all-pages.js","components/users.js","components/users/logout.js","components/categories/category.js","components/categories/edit-category.js","components/posts/edit-post.js","components/pages/edit-page.js","components/members/new-member.js","components/members/members.js","components/members/edit-member.js","components/retailers/new-retailer.js","components/retailers/retailers.js","components/retailers/edit-retailer.js","components/socialmedia/new-social-media.js","components/socialmedia/social-media.js","components/socialmedia/edit-social-media.js","components/settings.js","components/telegram-bot/handle-verify.js","components/telegram-bot/handle-message.js","components/telegram-bot/logout.js","components/telegram-bot/telegram-bot.js","components/legals/tools.js","components/legals/legal.js","components/legals/all-legals.js","components/legals/edit-legal.js","components/payments/payment.js","components/softwares/tools.js","components/softwares/add-software.js","components/softwares/all-softwares.js","components/softwares/edit-software.js","components/preorder/preorder.js","components/amas/new-ama.js","components/amas/amas.js","components/amas/edit-ama.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","create","props","useState","loading","setLoading","getFieldDecorator","form","className","params","particles","number","value","size","interactivity","events","onhover","enable","mode","onSubmit","e","preventDefault","validateFields","err","values","console","log","remember","axios","post","then","a","res","setTimeout","Cookie","set","data","token","expires","message","success","window","location","replace","catch","error","type","response","notification","description","closeIcon","duration","Item","rules","required","prefix","style","color","placeholder","valuePropName","initialValue","htmlType","disabled","src","three_dots","alt","height","to","CREATE_USER","gql","UPDATE_USER","APPROVE_USER","ISADMIN","DELETE_USER","CREATE_CATEGORY","DELETE_CATEGORY","UPDATE_CATEGORY","CREATE_POST","DELETE_POST","UPDATE_POST","CREATE_PAGE","DELETE_PAGE","UPDATE_PAGE","CREATE_MEMBER","DELETE_MEMBER","UPDATE_MEMBER","CREATE_RETAILER","DELETE_RETAILER","UPDATE_RETAILER","CREATE_SOCIAL_MEDIA","DELETE_SOCIAL_MEDIA","UPDATE_SOCIAL_MEDIA","CREATE_LEGAL","UPDATE_LEGAL","DELETE_LEGAL","ADD_SOFTWARE","UPDATE_SOFTWARE","DELETE_SOFTWARE","DELETE_CUSTOMER","ADD_AMA","DELETE_AMA","UPDATE_AMA","useMutation","createUser","fullname","email","password","variables","JSON","parse","stringify","graphQLErrors","get","user","jwt","decode","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","UserContext","createContext","UserProvider","avatar","setUser","useEffect","Provider","children","Sider","Layout","SubMenu","Menu","LeftNavbar","userData","useContext","isLight","setIsLight","pathname","isAdmin","sessionIsLight","localStorage","getItem","backgroundColor","onClick","setItem","theme","defaultSelectedKeys","defaultOpenKeys","key","ItemGroup","title","GET_USERS","GET_USER","GET_CATEGORIES","EDIT_CATEGORY","GET_POSTS","GET_POST","GET_PAGES","GET_PAGE","GET_MEMBERS","GET_MEMBER","GET_RETAILERS","GET_RETAILER","GET_SOCIAL_MEDIA","GET_ONE_SOCIAL_MEDIA","GET_LEGALS","GET_LEGAL","GET_CUSTOMERS","GET_SOFTWARES","GET_SOFTWARE","GET_AMAS","GET_AMA","Header","TopNavbar","content","href","DisplayUser","useQuery","placement","background","padding","Footer","PageFooter","textAlign","TotalPost","posts","created_at","length","TotalPage","pages","TotalRetailer","retailers","Content","Admin","options","chart","id","xaxis","categories","series","name","UserTotal","users","sort","o","moment","unix","minHeight","gutter","span","QuillTextEditor","formats","modules","toolbar","header","list","indent","onChange","handleDescChange","defaultValue","preserveWhitespace","Embed","Table","List","Warning","Code","LinkTool","Image","Raw","Quote","Marker","CheckList","Delimiter","InlineCode","SimpleImage","FormItem","TextArea","Input","Option","Select","image","setImage","desc","setDesc","categoryRefetch","refetch","postsRefetch","createPost","DisplayCategories","label","filtered_pages","_","filter","p","includes","slug","map","cate","uploadImage","multiple","action","defaultFileList","info","status","file","fileList","toLowerCase","React","useRef","margin","display","Dragger","width","rows","float","validateFieldsAndScroll","slugify","lower","resetFields","create_post","AllPosts","deletePost","postRefetch","columns","dataIndex","borderRadius","substring","category","format","index","okText","cancelText","onConfirm","delete_post","DisplayPost","DisplayTable","dataSource","pagination","defaultCurrent","total","showTotal","range","pageSize","createPage","pageRefetch","min","sectionNumber","toString","create_page","AllPages","deletePage","uuidv4","sorter","b","delete_page","rowKey","Users","approveUser","deleteUser","makeAsAdmin","adminColumns","DisplayUserAdmin","approved","admin","cursor","approve","Logout","createCategory","deleteCategory","onFilter","record","indexOf","created_by","DisplayCategory","updated_by","updated_at","marginTop","marginBottom","updateCategory","split","edit_category_loading","edit_category_data","history","push","Date","toISOString","postLoading","postData","updatePost","thumnail","tags","keywords","meta_desc","update_post","pageLoading","pageData","updatePage","page","subTitle","update_page","memberRefetch","createMember","add_member","Members","visible","setVisible","deleteMember","hideModal","members","member","phoneNumber","photo","department","delete_member","onOk","onCancel","footer","memberData","updateMember","update_member","position","refetchRetailer","createRetailer","add_retailer","Retailers","deleteRetailer","retailerRefetch","retailer","logo","delete_retailer","retailerData","refechRetailer","updateRetailer","update_retailer","addSocailMedia","add_social_media","SocialMedia","deleteSocialMedia","refetchSocialMedia","DisplaySocailMedia","socialMedia","link","delete_social_media","socialMediaLoading","socialMediaData","refechSocialMedia","updateSocialMedia","update_social_media","oneSocialMedia","userLoading","userQuery","updateUser","oldPassword","newPassword","phone","parseInt","code","channel","msg","setPhone","target","EDITOR_JS_TOOLS","embed","table","warning","linkTool","raw","quote","marker","checklist","delimiter","inlineCode","simpleImage","createLegal","refetchLegal","editorJsRef","handleSubmit","useCallback","current","save","savedData","create_legal","instanceRef","instance","tools","deleteLegal","legalRefetch","DisplayLegals","legals","delete_legal","errorLegal","dataLoading","legalData","updateLegal","edit_legal","legal","Column","ColumnGroup","currencyFormat","num","toFixed","Payment","deleteCustomer","paymentRefetch","text","firstname","lastname","products","qty","price","delete_customer","DisplayPayment","customers","bordered","setLogo","createSoftware","uploadLogo","create_software","AllSoftwares","deleteSoftware","refetchSoftware","softwares","software","delete_software","softwareLoading","softwareData","updateSoftware","edit_software","Preorder","createAMA","create_ama","AllAMA","deleteAMA","ellipsis","amas","amaLoading","amaData","updateAMA","ama","date","url","amaImage","App","exact","path","LoginForm","SignupForm","Settings","NewPost","editPost","AddSoftware","EditSoftware","NewPage","editPage","Category","editCategory","AddAMA","editAma","newMember","editMember","newRetailer","editRetailer","newSocialMedia","editSocialMedia","TelegramBot","Legal","allLegals","editLegal","Boolean","hostname","match","httpLink","createHttpLink","uri","authLink","setContext","headers","Cookies","authorization","client","ApolloClient","concat","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7801392.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/three-dots-black.9f3b0075.svg\";","module.exports = __webpack_public_path__ + \"static/media/three-dots.7627bc82.svg\";","import React, { useState } from \"react\"\nimport { Form, Icon, Input, Button, Checkbox, message, notification } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport Cookie from \"js-cookie\"\nimport Particles from \"react-particles-js\"\n\nfunction LoginForm(props) {\n  const [loading, setLoading] = useState(false)\n\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: `Hello there!`,\n      description:\n        \"You don't permission to access it yet. Please ask the admin to approve your user.\",\n      closeIcon: true,\n      duration: 10,\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(values.remember)\n\n        axios\n          .post(`https://admin.koompi.com/login`, { ...values })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            Cookie.set(\n              \"token\",\n              res.data.token,\n              values.remember ? { expires: 7 } : null\n            )\n            await message.success(\"Login successfully.\", 3)\n            window.location.replace(\"/admin/dashboard\")\n          })\n          .catch((error) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            if (\n              error.response.data.message ===\n              \"You don't have a permission to access it\"\n            ) {\n              openNotificationWithIcon(\"info\")\n            } else {\n              message.error(error.response.data.message, 10)\n            }\n          })\n      } else {\n        console.log(err)\n      }\n    })\n  }\n\n  const { getFieldDecorator } = props.form\n  return (\n    <div>\n      {/* <div className=\"loginBackground\"></div> */}\n      <Particles\n        className=\"loginBackground\"\n        params={{\n          particles: {\n            number: {\n              value: 50,\n            },\n            size: {\n              value: 3,\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"loginContainer\">\n        <h1 className=\"loginTitle\">Login</h1>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator(\"email\", {\n              rules: [{ required: true, message: \"Please input your Email!\" }],\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"Please input your Password!\" }],\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"remember\", {\n              valuePropName: \"checked\",\n              initialValue: true,\n            })(<Checkbox>Remember me</Checkbox>)}\n            {/* <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a> */}\n            <br />\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"koompi-steam-loading\" height=\"10\" />\n              ) : (\n                \"Login\"\n              )}\n            </Button>\n            <br />\n            Or <Link to=\"/register\">register now!</Link>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Form.create()(LoginForm)\n","import gql from \"graphql-tag\"\n\nconst CREATE_USER = gql`\n  mutation($fullname: String!, $email: String!, $password: String!) {\n    create_user(fullname: $fullname, email: $email, password: $password) {\n      fullname\n      email\n      password\n    }\n  }\n`\n\nconst UPDATE_USER = gql`\n  mutation(\n    $fullname: String!\n    $email: String!\n    $avatar: String!\n    $oldPassword: String\n    $newPassword: String\n  ) {\n    update_user(\n      fullname: $fullname\n      email: $email\n      avatar: $avatar\n      oldPassword: $oldPassword\n      newPassword: $newPassword\n    ) {\n      fullname\n      email\n    }\n  }\n`\n\nconst APPROVE_USER = gql`\n  mutation($id: String!, $approve: Boolean!) {\n    approve_user(id: $id, approve: $approve) {\n      fullname\n      email\n      approved\n    }\n  }\n`\n\nconst ISADMIN = gql`\n  mutation($id: String!, $isAdmin: Boolean!) {\n    isAdmin(id: $id, isAdmin: $isAdmin) {\n      fullname\n      email\n      isAdmin\n    }\n  }\n`\n\nconst DELETE_USER = gql`\n  mutation($id: String!) {\n    delete_user(id: $id) {\n      fullname\n    }\n  }\n`\n\nconst CREATE_CATEGORY = gql`\n  mutation($title: String!, $slug: String!, $created_by: String!) {\n    create_category(title: $title, slug: $slug, created_by: $created_by) {\n      id\n      title\n      slug\n      created_by\n      created_at\n    }\n  }\n`\n\nconst DELETE_CATEGORY = gql`\n  mutation($id: String!) {\n    delete_category(id: $id) {\n      title\n    }\n  }\n`\n\nconst UPDATE_CATEGORY = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $slug: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_category(\n      id: $id\n      title: $title\n      slug: $slug\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      id\n      title\n      slug\n    }\n  }\n`\n\nconst CREATE_POST = gql`\n  mutation(\n    $title: String!\n    $slug: String!\n    $category: String!\n    $created_by: String!\n    $description: String!\n    $thumnail: String\n    $tags: [String]!\n    $keywords: [String]!\n    $meta_desc: String!\n  ) {\n    create_post(\n      title: $title\n      slug: $slug\n      category: $category\n      created_by: $created_by\n      description: $description\n      thumnail: $thumnail\n      tags: $tags\n      keywords: $keywords\n      meta_desc: $meta_desc\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_POST = gql`\n  mutation($id: String!) {\n    delete_post(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_POST = gql`\n  mutation(\n    $id: String!\n    $slug: String!\n    $title: String!\n    $category: String!\n    $description: String!\n    $thumnail: String\n    $tags: [String]!\n    $keywords: [String]!\n    $meta_desc: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_post(\n      id: $id\n      title: $title\n      slug: $slug\n      category: $category\n      description: $description\n      thumnail: $thumnail\n      tags: $tags\n      keywords: $keywords\n      meta_desc: $meta_desc\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_PAGE = gql`\n  mutation(\n    $title: String!\n    $lang: String!\n    $subTitle: String\n    $created_by: String!\n    $description: String\n    $image: String\n    $category: String!\n    $sectionNumber: String\n    $keywords: [String]!\n    $meta_desc: String!\n  ) {\n    create_page(\n      title: $title\n      lang: $lang\n      subTitle: $subTitle\n      created_by: $created_by\n      description: $description\n      sectionNumber: $sectionNumber\n      image: $image\n      category: $category\n      keywords: $keywords\n      meta_desc: $meta_desc\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_PAGE = gql`\n  mutation($id: String!) {\n    delete_page(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_PAGE = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $subTitle: String\n    $description: String\n    $image: String\n    $category: String!\n    $sectionNumber: String!\n    $keywords: [String]!\n    $meta_desc: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_page(\n      id: $id\n      title: $title\n      subTitle: $subTitle\n      description: $description\n      image: $image\n      category: $category\n      sectionNumber: $sectionNumber\n      keywords: $keywords\n      meta_desc: $meta_desc\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_MEMBER = gql`\n  mutation(\n    $fullname: String!\n    $department: String!\n    $position: String!\n    $phoneNumber: String!\n    $email: String\n    $photo: String!\n    $created_by: String!\n  ) {\n    add_member(\n      fullname: $fullname\n      department: $department\n      position: $position\n      phoneNumber: $phoneNumber\n      email: $email\n      photo: $photo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_MEMBER = gql`\n  mutation($id: String!) {\n    delete_member(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_MEMBER = gql`\n  mutation(\n    $id: String!\n    $fullname: String!\n    $department: String!\n    $position: String!\n    $phoneNumber: String!\n    $email: String\n    $photo: String!\n    $created_by: String!\n  ) {\n    update_member(\n      id: $id\n      fullname: $fullname\n      department: $department\n      position: $position\n      phoneNumber: $phoneNumber\n      email: $email\n      photo: $photo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_RETAILER = gql`\n  mutation(\n    $name: String!\n    $location: String!\n    $logo: String!\n    $phoneNumber: String\n    $email: String\n    $created_by: String!\n  ) {\n    add_retailer(\n      name: $name\n      location: $location\n      logo: $logo\n      phoneNumber: $phoneNumber\n      email: $email\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_RETAILER = gql`\n  mutation($id: String!) {\n    delete_retailer(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_RETAILER = gql`\n  mutation(\n    $id: String!\n    $name: String!\n    $location: String!\n    $logo: String!\n    $phoneNumber: String\n    $email: String\n  ) {\n    update_retailer(\n      id: $id\n      name: $name\n      location: $location\n      logo: $logo\n      phoneNumber: $phoneNumber\n      email: $email\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_SOCIAL_MEDIA = gql`\n  mutation($name: String!, $link: String!, $logo: String!, $created_by: String!) {\n    add_social_media(\n      name: $name\n      link: $link\n      logo: $logo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_SOCIAL_MEDIA = gql`\n  mutation($id: String!) {\n    delete_social_media(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_SOCIAL_MEDIA = gql`\n  mutation($id: String!, $name: String!, $link: String!, $logo: String!) {\n    update_social_media(id: $id, name: $name, link: $link, logo: $logo) {\n      message\n    }\n  }\n`\n\nconst CREATE_LEGAL = gql`\n  mutation($title: String!, $description: String!, $created_by: String!) {\n    create_legal(title: $title, description: $description, created_by: $created_by) {\n      message\n    }\n  }\n`\n\nconst UPDATE_LEGAL = gql`\n  mutation($id: String!, $title: String!, $description: String!) {\n    edit_legal(id: $id, title: $title, description: $description) {\n      message\n    }\n  }\n`\n\nconst DELETE_LEGAL = gql`\n  mutation($id: String!) {\n    delete_legal(id: $id) {\n      message\n    }\n  }\n`\n\nconst ADD_SOFTWARE = gql`\n  mutation(\n    $title: String!\n    $description: String!\n    $logo: String!\n    $image: String!\n    $created_by: String!\n  ) {\n    create_software(\n      title: $title\n      description: $description\n      logo: $logo\n      image: $image\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst UPDATE_SOFTWARE = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $description: String!\n    $logo: String!\n    $image: String!\n  ) {\n    edit_software(\n      id: $id\n      title: $title\n      description: $description\n      logo: $logo\n      image: $image\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_SOFTWARE = gql`\n  mutation($id: String!) {\n    delete_software(id: $id) {\n      message\n    }\n  }\n`\n\nconst DELETE_CUSTOMER = gql`\n  mutation($id: String!) {\n    delete_customer(id: $id) {\n      message\n    }\n  }\n`\n\nconst ADD_AMA = gql`\n  mutation(\n    $name: String!\n    $title: String!\n    $image: String!\n    $desc: String!\n    $date: String!\n    $url: String!\n    $category: String!\n    $created_by: String!\n    $created_at: String!\n  ) {\n    create_ama(\n      name: $name\n      title: $title\n      image: $image\n      desc: $desc\n      date: $date\n      url: $url\n      category: $category\n      created_by: $created_by\n      created_at: $created_at\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_AMA = gql`\n  mutation($id: String!) {\n    delete_ama(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_AMA = gql`\n  mutation(\n    $id: String!\n    $name: String!\n    $title: String!\n    $image: String!\n    $desc: String!\n    $date: String!\n    $url: String!\n    $category: String!\n  ) {\n    update_ama(\n      id: $id\n      name: $name\n      title: $title\n      image: $image\n      desc: $desc\n      date: $date\n      url: $url\n      category: $category\n    ) {\n      message\n    }\n  }\n`\n\nexport {\n  CREATE_USER,\n  CREATE_CATEGORY,\n  DELETE_CATEGORY,\n  UPDATE_CATEGORY,\n  CREATE_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  APPROVE_USER,\n  DELETE_USER,\n  ISADMIN,\n  CREATE_PAGE,\n  DELETE_PAGE,\n  UPDATE_PAGE,\n  CREATE_MEMBER,\n  DELETE_MEMBER,\n  UPDATE_MEMBER,\n  CREATE_RETAILER,\n  DELETE_RETAILER,\n  UPDATE_RETAILER,\n  CREATE_SOCIAL_MEDIA,\n  DELETE_SOCIAL_MEDIA,\n  UPDATE_SOCIAL_MEDIA,\n  UPDATE_USER,\n  CREATE_LEGAL,\n  UPDATE_LEGAL,\n  DELETE_LEGAL,\n  ADD_SOFTWARE,\n  UPDATE_SOFTWARE,\n  DELETE_SOFTWARE,\n  DELETE_CUSTOMER,\n  ADD_AMA,\n  DELETE_AMA,\n  UPDATE_AMA,\n}\n","import React, { useState } from \"react\"\nimport { Form, Icon, Input, Button, message } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport Particles from \"react-particles-js\"\n\n// ===== Create User =====\nimport { CREATE_USER } from \"../../graphql/mutation\"\n\nfunction SignupForm(props) {\n  const [createUser] = useMutation(CREATE_USER)\n\n  // ===== State Section =====\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const { fullname, email, password } = values\n        await createUser({\n          variables: {\n            fullname,\n            email,\n            password\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            await message.success(\"Register Successfully.\", 3)\n            await window.location.replace(\"/login\")\n          })\n          .catch((error) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            let err = JSON.parse(JSON.stringify(error))\n            message.error(err.graphQLErrors[0].message)\n          })\n      } else {\n        console.log(err)\n      }\n    })\n  }\n\n  const { getFieldDecorator } = props.form\n  return (\n    <>\n      <Particles\n        className=\"loginBackground\"\n        params={{\n          particles: {\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"repulse\"\n              }\n            }\n          }\n        }}\n      />\n      <div className=\"loginContainer\">\n        <h1 className=\"loginTitle\">Register</h1>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          {/* Full Name */}\n          <Form.Item>\n            {getFieldDecorator(\"fullname\", {\n              rules: [{ required: true, message: \"Please input your Full Name!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Full Name\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Email */}\n          <Form.Item>\n            {getFieldDecorator(\"email\", {\n              rules: [{ required: true, message: \"Please input your Email!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Password */}\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"Please input your Password!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Remember Me */}\n          <Form.Item>\n            {/* Button Submit */}\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"koompi-steam-loading\" height=\"10\" />\n              ) : (\n                \"Sign Up\"\n              )}\n            </Button>\n            <br />\n            Have an account? <Link to=\"/login\">Login</Link>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default Form.create()(SignupForm)\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\n// Global varible\nlet token = Cookie.get(\"token\")\nlet user = jwt.decode(token)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLogin = () => {\n    if (user) {\n      return true\n    }\n    return false\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  let token = Cookie.get(\"token\")\n  let user = jwt.decode(token)\n\n  const isLogin = () => {\n    if (!user) {\n      return false\n    }\n    return true\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() && restricted ? (\n          <Redirect to=\"/admin/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n}\n\nexport default PublicRoute\n","import React, { createContext, useState, useEffect } from \"react\"\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\nexport const UserContext = createContext()\n\nexport const UserProvider = (props) => {\n  const [user, setUser] = useState({\n    fullname: \"\",\n    email: \"\",\n    avatar: \"\"\n  })\n\n  useEffect(() => {\n    let token = Cookie.get(\"token\")\n    let user = jwt.decode(token)\n    setUser(user)\n  }, [])\n\n  return (\n    <UserContext.Provider value={{ user }}>{props.children}</UserContext.Provider>\n  )\n}\n","import React, { useState, useContext } from \"react\"\nimport { Layout, Menu } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { UserContext } from \"../../context/userContext\"\nimport {\n  FiBarChart,\n  FiFileText,\n  FiFile,\n  FiList,\n  FiUsers,\n  FiMapPin,\n  FiShare2,\n  FiDollarSign,\n  FiSend,\n  FiUserCheck,\n  FiUser,\n  FiLayers,\n} from \"react-icons/fi\"\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nfunction LeftNavbar() {\n  const userData = useContext(UserContext)\n  const [isLight, setIsLight] = useState(true)\n\n  // const isDay = () => {\n  //   const hours = new Date().getHours();\n  //   return hours >= 6 && hours < 18;\n  // };\n\n  const pathname = window.location.pathname\n\n  const { fullname, isAdmin } = userData.user\n  if (fullname === \"\") {\n    return null\n  }\n\n  const handleIsLight = () => {\n    setIsLight(!isLight)\n    localStorage.setItem(\"isLight\", !isLight)\n  }\n\n  const sessionIsLight = JSON.parse(localStorage.getItem(\"isLight\"))\n\n  return (\n    <Sider\n      // collapsible\n      // collapsed={collapsed}\n      // onCollapse={onCollapse}\n      style={\n        sessionIsLight\n          ? { backgroundColor: \"rgb(30, 39, 46)\" }\n          : { backgroundColor: \"#fff\" }\n      }\n    >\n      <div>\n        <center>\n          <img\n            src={\n              sessionIsLight\n                ? \"/images/KOOMPI_Logo.svg\"\n                : \"/images/KOOMPI_Logo_dark.svg\"\n            }\n            alt=\"\"\n            className=\"KOOMPI_LOGO\"\n          />\n        </center>\n        <div className=\"themeChange\" onClick={handleIsLight}>\n          {sessionIsLight ? (\n            <img src=\"/images/day.svg\" alt=\"koompi day\" height=\"25px\" />\n          ) : (\n            <img src=\"/images/night.svg\" alt=\"koompi night\" height=\"25px\" />\n          )}\n        </div>\n      </div>\n      <Menu\n        theme={sessionIsLight ? \"dark\" : \"light\"}\n        defaultSelectedKeys={[pathname]}\n        defaultOpenKeys={[pathname]}\n        mode=\"inline\"\n      >\n        {/* ========= Dashboard Section ========= */}\n        <Menu.Item key=\"/admin/dashboard\">\n          <Link to=\"/admin/dashboard\" className=\"nav-text\">\n            <FiBarChart />\n            <span>Dashboard</span>\n          </Link>\n        </Menu.Item>\n        <Menu.ItemGroup key=\"site-management\" title=\"Site Management\">\n          {/* ========= AMA Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/add-ama\"\n                ? \"/admin/add-ama\"\n                : \"/admin/all-amas\"\n                ? \"/admin/all-amas\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiFileText />\n                <span>AMA</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/add-ama\">\n              <Link to=\"/admin/add-ama\">Add AMA</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-amas\">\n              <Link to=\"/admin/all-amas\">All AMA</Link>\n            </Menu.Item>\n          </SubMenu>\n          {/* ========= Posts Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/new-post\"\n                ? \"/admin/new-post\"\n                : \"/admin/all-posts\"\n                ? \"/admin/all-posts\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiFileText />\n                <span>Posts</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-post\">\n              <Link to=\"/admin/new-post\">New Post</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-posts\">\n              <Link to=\"/admin/all-posts\">All Posts</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= Pages Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/new-page\"\n                ? \"/admin/new-page\"\n                : \"/admin/all-pages\"\n                ? \"/admin/all-pages\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiFile />\n                <span>Pages</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-page\">\n              <Link to=\"/admin/new-page\">New Page</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-pages\">\n              <Link to=\"/admin/all-pages\">All Pages</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= Software Section ========= */}\n          {/* <SubMenu\n            key={\n              pathname === \"/admin/add-software\"\n                ? \"/admin/add-software\"\n                : \"/admin/all-softwares\"\n                ? \"/admin/all-softwares\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiLayers />\n                <span>Softwares</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/add-software\">\n              <Link to=\"/admin/add-software\">Add Software</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-softwares\">\n              <Link to=\"/admin/all-softwares\">All Software</Link>\n            </Menu.Item>\n          </SubMenu> */}\n\n          {/* ========= Categories Section ========= */}\n\n          <Menu.Item key=\"/admin/categories\">\n            <Link to=\"/admin/categories\" className=\"nav-text\">\n              <FiList />\n              <span>Categories</span>\n            </Link>\n          </Menu.Item>\n\n          {/* ========= Member Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/new-member\"\n                ? \"/admin/new-member\"\n                : \"/admin/members\"\n                ? \"/admin/members\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiUsers />\n                <span>Members</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-member\">\n              <Link to=\"/admin/new-member\">New Member</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/members\">\n              <Link to=\"/admin/members\">All Members</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= Retailer Section ========= */}\n          {/* <SubMenu\n            key={\n              pathname === \"/admin/new-retailer\"\n                ? \"/admin/new-retailer\"\n                : \"/admin/retailers\"\n                ? \"/admin/retailers\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiMapPin />\n                <span>Retailers</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-retailer\">\n              <Link to=\"/admin/new-retailer\">New Retailer</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/retailers\">\n              <Link to=\"/admin/retailers\">All Retailers</Link>\n            </Menu.Item>\n          </SubMenu> */}\n\n          {/* ========= Social Media Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/add-social-media\"\n                ? \"/admin/add-social-media\"\n                : \"/admin/social-media\"\n                ? \"/admin/social-media\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiShare2 />\n                <span>Socail media</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/add-social-media\">\n              <Link to=\"/admin/add-social-media\">Add Social Media</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/social-media\">\n              <Link to=\"/admin/social-media\">Social Media</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= PreOrder Section ========= */}\n          {/* {isAdmin && (\n          <Menu.Item key=\"/admin/user/pre-order\">\n            <Link to=\"/admin/user/pre-order\" className=\"nav-text\">\n              <FiDollarSign />\n              <span>Pre-Order</span>\n            </Link>\n          </Menu.Item>\n        )} */}\n\n          {/* ========= Mail Sender Section ========= */}\n          {/* {isAdmin && (\n          <Menu.Item key=\"/admin/send-mail\">\n            <Link to=\"/user/send-mail\" className=\"nav-text\">\n              <Icon type=\"mail\" />\n              <span>Mail Sender</span>\n            </Link>\n          </Menu.Item>\n        )} */}\n\n          {/* ========= Mail Sender Section ========= */}\n          {isAdmin && (\n            <SubMenu\n              key={\n                pathname === \"/admin/new-legal\"\n                  ? \"/admin/new-legal\"\n                  : \"/admin/all-legals\"\n                  ? \"/admin/all-legals\"\n                  : \"\"\n              }\n              title={\n                <div className=\"nav-text\">\n                  <FiUserCheck />\n                  <span>Legals</span>\n                </div>\n              }\n            >\n              <Menu.Item key=\"/admin/new-legal\">\n                <Link to=\"/admin/new-legal\">New Legal</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/all-legals\">\n                <Link to=\"/admin/all-legals\">All Legals</Link>\n              </Menu.Item>\n            </SubMenu>\n          )}\n\n          {/* ========= Users Section ========= */}\n          <Menu.Item key=\"/admin/users\">\n            <Link to=\"/admin/users\" className=\"nav-text\">\n              <FiUser />\n              <span>Users</span>\n            </Link>\n          </Menu.Item>\n        </Menu.ItemGroup>\n\n        <Menu.ItemGroup key=\"payment-management\" title=\"Payment Management\">\n          {/* ========= Payment Section ========= */}\n          {isAdmin && (\n            <Menu.Item key=\"/admin/user/payments\">\n              <Link to=\"/admin/user/payments\" className=\"nav-text\">\n                <FiDollarSign />\n                <span>User Payment</span>\n              </Link>\n            </Menu.Item>\n          )}\n        </Menu.ItemGroup>\n\n        <Menu.ItemGroup key=\"telegram-bot\" title=\"Bot System\">\n          {/* ========= Mail Sender Section ========= */}\n          {isAdmin && (\n            <Menu.Item key=\"/admin/telegram-bot\">\n              <Link to=\"/admin/telegram-bot\" className=\"nav-text\">\n                <FiSend />\n                <span>Telegram</span>\n              </Link>\n            </Menu.Item>\n          )}\n        </Menu.ItemGroup>\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default LeftNavbar\n","import gql from \"graphql-tag\"\n\nconst GET_USERS = gql`\n  query {\n    users {\n      fullname\n      email\n      avatar\n      isAdmin\n      id\n      approved\n      created_at\n    }\n  }\n`\n\nconst GET_USER = gql`\n  query($email: String!) {\n    user(email: $email) {\n      fullname\n      email\n      avatar\n      isAdmin\n      id\n      approved\n    }\n  }\n`\n\nconst GET_CATEGORIES = gql`\n  query {\n    categories {\n      id\n      title\n      slug\n      created_by\n      updated_by\n      created_at\n      updated_at\n    }\n  }\n`\n\nconst EDIT_CATEGORY = gql`\n  query($id: String!) {\n    category(id: $id) {\n      id\n      title\n      created_by\n    }\n  }\n`\n\nconst GET_POSTS = gql`\n  query {\n    posts {\n      id\n      title\n      slug\n      description\n      category {\n        title\n      }\n      user {\n        fullname\n      }\n      meta_desc\n      keywords\n      tags\n      updated_at\n      updated_by\n      created_at\n      thumnail\n    }\n  }\n`\n\nconst GET_POST = gql`\n  query($id: String!) {\n    post(id: $id) {\n      id\n      title\n      slug\n      created_by\n      description\n      category {\n        title\n      }\n      meta_desc\n      keywords\n      tags\n      updated_at\n      updated_by\n      created_at\n      thumnail\n    }\n  }\n`\n\nconst GET_PAGES = gql`\n  query {\n    pages {\n      id\n      title\n      subTitle\n      category {\n        title\n      }\n      lang {\n        lang\n      }\n      sectionNumber\n      created_by\n      description\n      meta_desc\n      keywords\n      image\n      updated_at\n      updated_by\n      created_at\n    }\n  }\n`\n\nconst GET_PAGE = gql`\n  query($id: String!) {\n    page(id: $id) {\n      id\n      title\n      subTitle\n      category {\n        title\n        slug\n      }\n      sectionNumber\n      created_by\n      description\n      meta_desc\n      keywords\n      image\n      updated_at\n      updated_by\n      created_at\n    }\n  }\n`\n\nconst GET_MEMBERS = gql`\n  query {\n    members {\n      id\n      fullname\n      phoneNumber\n      email\n      created_by\n      position\n      photo\n      department\n      created_at\n    }\n  }\n`\n\nconst GET_MEMBER = gql`\n  query($id: String!) {\n    member(id: $id) {\n      id\n      fullname\n      phoneNumber\n      email\n      created_by\n      position\n      photo\n      department\n      created_at\n    }\n  }\n`\n\nconst GET_RETAILERS = gql`\n  query {\n    retailers {\n      name\n      id\n      email\n      logo\n      location\n      created_by\n      phoneNumber\n      created_at\n    }\n  }\n`\n\nconst GET_RETAILER = gql`\n  query($id: String!) {\n    retailer(id: $id) {\n      name\n      id\n      email\n      logo\n      location\n      created_by\n      phoneNumber\n      created_at\n    }\n  }\n`\n\nconst GET_SOCIAL_MEDIA = gql`\n  query {\n    socialMedia {\n      id\n      name\n      logo\n      link\n      created_by\n      created_at\n    }\n  }\n`\nconst GET_ONE_SOCIAL_MEDIA = gql`\n  query($id: String!) {\n    oneSocialMedia(id: $id) {\n      id\n      name\n      logo\n      link\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_LEGALS = gql`\n  query {\n    legals {\n      id\n      title\n      description\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_LEGAL = gql`\n  query($id: String!) {\n    legal(id: $id) {\n      id\n      title\n      description\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_CUSTOMERS = gql`\n  query {\n    customers {\n      id\n      firstname\n      lastname\n      email\n      phone\n      payBy\n      products\n      created_at\n    }\n  }\n`\n\nconst GET_SOFTWARES = gql`\n  query {\n    softwares {\n      id\n      title\n      description\n      logo\n      image\n      created_at\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nconst GET_SOFTWARE = gql`\n  query($id: String!) {\n    software(id: $id) {\n      id\n      title\n      description\n      logo\n      image\n      created_at\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nconst GET_PRODUCT = gql`\n  query($id: String!) {\n    product(id: $id) {\n      id\n      name\n      price\n      purchasingType\n    }\n  }\n`\n\nconst GET_AMAS = gql`\n  query {\n    amas {\n      id\n      name\n      title\n      image\n      desc\n      date\n      category\n      created_at\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nconst GET_AMA = gql`\n  query($id: String!) {\n    ama(id: $id) {\n      id\n      name\n      title\n      image\n      desc\n      date\n      category\n      created_at\n      url\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nexport {\n  GET_USERS,\n  GET_USER,\n  GET_CATEGORIES,\n  EDIT_CATEGORY,\n  GET_POSTS,\n  GET_POST,\n  GET_PAGES,\n  GET_PAGE,\n  GET_MEMBERS,\n  GET_MEMBER,\n  GET_RETAILERS,\n  GET_RETAILER,\n  GET_SOCIAL_MEDIA,\n  GET_ONE_SOCIAL_MEDIA,\n  GET_LEGALS,\n  GET_LEGAL,\n  GET_CUSTOMERS,\n  GET_SOFTWARES,\n  GET_SOFTWARE,\n  GET_PRODUCT,\n  GET_AMAS,\n  GET_AMA,\n}\n","import React, { useContext } from \"react\"\nimport { Layout, Popover } from \"antd\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { UserContext } from \"../../context/userContext\"\nimport { Link } from \"react-router-dom\"\nimport { GET_USER } from \"../../graphql/query\"\n\nconst { Header } = Layout\n\nfunction TopNavbar() {\n  const userContext = useContext(UserContext)\n  const { email } = userContext.user\n  const content = (\n    <div>\n      <Link to=\"/admin/user/settings\">Settings</Link>\n      <p>\n        <a href=\"/logout\">Logout</a>\n      </p>\n    </div>\n  )\n\n  const DisplayUser = () => {\n    const { error, loading, data } = useQuery(GET_USER, {\n      variables: { email },\n    })\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data) {\n      const { fullname, avatar, email } = data.user\n      return (\n        <Popover\n          placement=\"bottomRight\"\n          title={\n            <div>\n              <div>\n                <b>{fullname}</b>\n              </div>\n              <p>{email}</p>\n            </div>\n          }\n          content={content}\n        >\n          <img\n            src={`https://admin.koompi.com` + avatar}\n            alt={fullname}\n            className=\"avatar\"\n          />\n        </Popover>\n      )\n    }\n  }\n\n  return (\n    <Header style={{ background: \"#fff\", padding: 0 }}>\n      <DisplayUser />\n    </Header>\n  )\n}\n\nexport default TopNavbar\n","import React from \"react\"\nimport { Layout } from \"antd\"\nconst { Footer } = Layout\n\nfunction PageFooter() {\n  return (\n    <Footer style={{ textAlign: \"center\" }}>\n      Copyright © 2020 Created by <b>KOOMPI</b>\n      <p>\n        A brainchild of <b>SmallWorld Venture</b>\n      </p>\n    </Footer>\n  )\n}\n\nexport default PageFooter\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport three_dots from \"../../assets/img/three-dots-black.svg\"\n\n// ===== Query Section =====\nimport { GET_USERS, GET_POSTS, GET_PAGES, GET_RETAILERS } from \"../../graphql/query\"\n\nconst UserTotal = () => {\n  const { error, loading, data } = useQuery(GET_USERS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.users.length}</b> users\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\nconst TotalPost = () => {\n  const { error, loading, data } = useQuery(GET_POSTS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    console.log(\"data\", data.posts.created_at)\n\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.posts.length}</b> posts\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\n\nconst TotalPage = () => {\n  const { error, loading, data } = useQuery(GET_PAGES)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.pages.length}</b> pages\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\n\nconst TotalRetailer = () => {\n  const { error, loading, data } = useQuery(GET_RETAILERS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.retailers.length}</b> retailers\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\nexport { UserTotal, TotalPost, TotalPage, TotalRetailer }\n","import React, { useState, useEffect } from \"react\"\nimport { Row, Col, Layout } from \"antd\"\n\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport PageFooter from \"./footer\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { UserTotal, TotalPost, TotalPage, TotalRetailer } from \"./data/admin\"\nimport { GET_USERS, GET_POSTS, GET_PAGES, GET_RETAILERS } from \"../graphql/query\"\nimport three_dots from \"../assets/img/three-dots-black.svg\"\n\nimport Chart from \"react-apexcharts\"\nimport moment from \"moment\"\n\nconst { Content } = Layout\n\nfunction Admin() {\n  const [chart, setChart] = useState({\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      xaxis: {\n        categories: [1580871334388, 1580799414274, 1580377941997],\n      },\n    },\n    series: [\n      {\n        name: \"series-1\",\n        data: [30, 40, 45],\n      },\n    ],\n  })\n\n  const UserTotal = () => {\n    const { error, loading, data } = useQuery(GET_USERS)\n    if (loading) {\n      return (\n        <center>\n          <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n        </center>\n      )\n    }\n    if (error) console.log(error)\n    if (data) {\n      console.log(\n        \"Data\",\n        data.users.sort(function (o) {\n          return moment(o.created_at).unix()\n        })\n      )\n\n      return (\n        <div>\n          <center>\n            <span className=\"adminFirstSectionFont\">\n              <b>{data.users.length}</b> users\n            </span>\n          </center>\n        </div>\n      )\n    }\n  }\n\n  // const { error, loading, data } = useQuery(GET_POSTS);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div style={{ padding: \"0px 50px \" }}>\n            {/* ======= Display content ====== */}\n            <Row gutter={[16, 16]}>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/User.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <UserTotal />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Post.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalPost />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Page.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalPage />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Retailers.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalRetailer />\n                </div>\n              </Col>\n            </Row>\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <div className=\"card_back_content\">\n                  <center>\n                    <img src=\"/images/coursenotfound.gif\" height=\"400px\" alt=\"\" />\n                  </center>\n                </div>\n              </Col>\n              {/* <Col span={8}>\n                <div className=\"card_back\">\n                  <Chart\n                    series={chart.series}\n                    options={chart.options}\n                    type=\"bar\"\n                  ></Chart>\n                </div>\n              </Col>\n              <Col span={8}>\n                <div className=\"card_back\">\n                  <Chart\n                    series={chart.series}\n                    options={chart.options}\n                    type=\"area\"\n                  ></Chart>\n                </div>\n              </Col> */}\n            </Row>\n          </div>\n\n          <div></div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Admin\n","import React from \"react\"\nimport ReactQuill from \"react-quill\" // ES6\nimport \"react-quill/dist/quill.snow.css\" // ES6\n\nfunction QuillTextEditor(props) {\n  const modules = {\n    toolbar: [\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n      [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }],\n      [\"link\"],\n      [\"clean\"],\n    ],\n  }\n\n  const formats = [\n    \"header\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n  ]\n  return (\n    <ReactQuill\n      formats={formats}\n      modules={modules}\n      onChange={props.handleDescChange}\n      defaultValue={props.defaultValue}\n      preserveWhitespace={true}\n    />\n  )\n}\n\nexport default QuillTextEditor\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport QuillTextEditor from \"../QuillTextEditor\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES, GET_POSTS } from \"../../graphql/query\"\nimport { CREATE_POST } from \"../../graphql/mutation\"\nimport _ from \"lodash\"\n\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction NewPost(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n  const [desc, setDesc] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: categoryRefetch } = useQuery(GET_CATEGORIES)\n  const { refetch: postsRefetch } = useQuery(GET_POSTS)\n  const [createPost] = useMutation(CREATE_POST)\n\n  const handleDescChange = (value) => {\n    setDesc(value)\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      const filtered_pages = _.filter(data.categories, function (p) {\n        return _.includes([\"news\", \"events\"], p.slug)\n      })\n\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n            initialValue: filtered_pages[0].title,\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {filtered_pages.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = () => {\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createPost({\n          variables: {\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: desc === \"\" ? null : desc,\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            setDesc(\"\")\n            categoryRefetch()\n            postsRefetch()\n            props.form.resetFields()\n            await message.success(res.data.create_post.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">New Post</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      {/* <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        placeholder=\"Let's write an awesome story!\"\n                      /> */}\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc}\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Thumnail\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"thumnail\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    {/* ======= Category Sections ======= */}\n                    <DisplayCategories />\n\n                    {/* ======= Tags ======= */}\n                    <FormItem label=\"Tags\">\n                      {getFieldDecorator(\"tags\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The tags is required\",\n                          },\n                        ],\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewPost)\n","import React from \"react\"\nimport { Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_POSTS } from \"../../graphql/query\"\nimport { DELETE_POST } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllPosts() {\n  // ===== Mutation Varile Section =====\n  const [deletePost] = useMutation(DELETE_POST)\n  const { refetch: postRefetch } = useQuery(GET_POSTS)\n\n  const columns = [\n    {\n      title: \"Image\",\n      dataIndex: \"thumnail\",\n      render: (data) => {\n        return (\n          <img\n            src={\"https://admin.koompi.com\" + data}\n            alt=\"post\"\n            height=\"40px\"\n            width=\"40px\"\n            style={{ borderRadius: \"8px\" }}\n          />\n        )\n      },\n    },\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      render: (data) => {\n        return data.length <= 25 ? data : data.substring(0, 25) + \" ...\"\n      },\n      key: \"title\",\n    },\n    {\n      title: \"Slug\",\n      dataIndex: \"slug\",\n      key: \"slug\",\n      render: (slug) => {\n        return slug.length <= 25 ? slug : slug.substring(0, 25) + \" ...\"\n      },\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\",\n      render: (category) => {\n        return (\n          <Tag color=\"green\">\n            {category === null ? \"No category\" : category.title}\n          </Tag>\n        )\n      },\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"user\",\n      key: \"created_by\",\n      render: (user) => {\n        return user === null ? \"Null\" : user.fullname\n      },\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      render: (created_at) => {\n        return moment.unix(created_at / 1000).format(\"YYYY-MM-DD\")\n      },\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n      render: (index, data) => {\n        const { id } = data\n        return (\n          <div>\n            <Link to={`/admin/post/edit/${id}`}>\n              <Tag className=\"btn\" color=\"#2db7f5\">\n                Edit\n              </Tag>\n            </Link>\n            <Divider type=\"vertical\" />\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this Post?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              onConfirm={() => {\n                deletePost({ variables: { id: `${id}` } })\n                  .then(async (res) => {\n                    await message.success(res.data.delete_post.message)\n                    await postRefetch()\n                  })\n                  .catch((error) => {\n                    console.log(error)\n                    return null\n                  })\n              }}\n            >\n              <Tag color=\"#f50\" className=\"btn\">\n                Delete\n              </Tag>\n            </Popconfirm>\n          </div>\n        )\n      },\n    },\n  ]\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_POSTS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.posts}\n            pagination={{\n              defaultCurrent: 1,\n              total: data.posts.length,\n              showTotal: (total, range) =>\n                `${range[0]}-${range[1]} of ${total} items`,\n              pageSize: 20,\n            }}\n          />\n        )\n      }\n      return (\n        <div>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All Posts</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllPosts\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport QuillTextEditor from \"../QuillTextEditor\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { GET_PAGES, GET_CATEGORIES } from \"../../graphql/query\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Upload,\n  Select,\n  Layout,\n  message,\n  InputNumber,\n} from \"antd\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_PAGE } from \"../../graphql/mutation\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction NewPage(props) {\n  const { getFieldDecorator } = props.form\n\n  const [createPage] = useMutation(CREATE_PAGE)\n\n  // ===== state management =====\n  const [image, setImage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [desc, setDesc] = useState(\"\")\n\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const handleDescChange = (value) => {\n    setDesc(value)\n  }\n  const handleSubmit = () => {\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n        createPage({\n          variables: {\n            ...values,\n            description: desc === \"\" ? null : desc,\n            sectionNumber: values.sectionNumber.toString(),\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            handleDescChange(\"\")\n            props.form.resetFields()\n            pageRefetch()\n            await message.success(res.data.create_page.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      return (\n        <Form.Item label=\"Page\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n            initialValue: data.categories[0].title,\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {data.categories.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              {/* <h1 className=\"koompi-title-brand\">KOOMPI</h1> */}\n              <h1 className=\"title_new_post\">New Page</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <Row gutter={[24]}>\n                      <Col span={8}>\n                        <FormItem label=\"Language: \">\n                          {getFieldDecorator(\"lang\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Langauge is required\",\n                              },\n                            ],\n                            initialValue: \"en\",\n                          })(\n                            <Select\n                              placeholder=\"Please select the category\"\n                              size=\"large\"\n                            >\n                              <Option value=\"en\" key=\"en\">\n                                English\n                              </Option>\n                              <Option value=\"kh\" key=\"en\">\n                                Khmer\n                              </Option>\n                            </Select>\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={8}>\n                        <FormItem label=\"Title: \">\n                          {getFieldDecorator(\"title\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The title is required\",\n                              },\n                            ],\n                          })(<Input size=\"large\" />)}\n                        </FormItem>\n                      </Col>\n                      <Col span={8}>\n                        <FormItem label=\"SubTitle: \">\n                          {getFieldDecorator(\"subTitle\")(<Input size=\"large\" />)}\n                        </FormItem>\n                      </Col>\n                    </Row>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc}\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        {/* ======= Section Number ======= */}\n                        <FormItem label=\"Section Number: \">\n                          {getFieldDecorator(\"sectionNumber\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Section Number is required\",\n                              },\n                            ],\n                            initialValue: 1,\n                          })(\n                            <InputNumber\n                              min={1}\n                              size=\"large\"\n                              style={{ width: \"100%\" }}\n                            />\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={12}>\n                        {/* ======= Category Sections ======= */}\n                        <DisplayCategories />\n                      </Col>\n                    </Row>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewPage)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\nimport { v4 as uuidv4 } from \"uuid\"\n\n// ===== Query and Mutation Section =====\nimport { GET_PAGES } from \"../../graphql/query\"\nimport { DELETE_PAGE } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllPages() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deletePage] = useMutation(DELETE_PAGE)\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n\n  const columns = [\n    {\n      key: `${uuidv4()}`,\n      title: \"Image\",\n      dataIndex: \"image\",\n      render: (data) => {\n        return (\n          <img\n            src={\n              data === \"/public/uploads/\"\n                ? \"/images/Error-01.png\"\n                : \"https://admin.koompi.com\" + data\n            }\n            alt=\"post\"\n            width=\"50px\"\n          />\n        )\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Title\",\n      dataIndex: \"title\",\n      render: (data) => {\n        return data.length <= 25 ? data : data.substring(0, 25) + \" ...\"\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"SubTitle\",\n      dataIndex: \"subTitle\",\n      render: (data) => {\n        return data === null ? (\n          <Tag color=\"red\">N/A</Tag>\n        ) : (\n          <Tag color=\"green\">{data}</Tag>\n        )\n      },\n    },\n    // {\n    //   key: `${uuidv4()}`,\n    //   title: \"Lang\",\n    //   dataIndex: \"lang\",\n    //   sorter: (a, b) => {\n    //     return a.lang.lang.localeCompare(b.lang.lang)\n    //   },\n    //   render: (data) => {\n    //     return data.lang\n    //   },\n    // },\n    {\n      key: `${uuidv4()}`,\n      title: \"Page\",\n      dataIndex: \"category\",\n      sorter: (a, b) => a.category.title.length - b.category.title.length,\n      render: (data) => {\n        return data === null ? \"No category\" : data.title\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      render: (data) => {\n        return data\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      render: (data) => {\n        return moment.unix(data / 1000).format(\"DD, MMM YYYY\")\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Updated By\",\n      dataIndex: \"updated_by\",\n      render: (data) => {\n        return data === null ? \"No Update\" : data\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Actions\",\n      dataIndex: \"action\",\n      render: (index, data) => {\n        // console.log(data)\n        const { id } = data\n        return (\n          <div>\n            <Link to={`/admin/page/edit/${id}`}>\n              <Tag className=\"btn\" color=\"#2db7f5\">\n                Edit\n              </Tag>\n            </Link>\n            <Divider type=\"vertical\" />\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this Page?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              onConfirm={() => {\n                deletePage({ variables: { id: `${id}` } })\n                  .then(async (res) => {\n                    await message.success(res.data.delete_page.message)\n                    await pageRefetch()\n                  })\n                  .catch((error) => {\n                    console.log(error)\n                    return null\n                  })\n              }}\n            >\n              <Tag color=\"#f50\" className=\"btn\">\n                Delete\n              </Tag>\n            </Popconfirm>\n          </div>\n        )\n      },\n    },\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_PAGES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <div>\n          <Table\n            rowKey={() => uuidv4()}\n            columns={columns}\n            dataSource={data.pages}\n            pagination={{\n              defaultCurrent: 1,\n              total: data.pages.length,\n              showTotal: (total, range) =>\n                `${range[0]}-${range[1]} of ${total} items`,\n              pageSize: 20,\n            }}\n          />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All Pages</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllPages\n","import React, { useContext } from \"react\"\nimport { Table, Tag, Layout, Popconfirm, message } from \"antd\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport PageFooter from \"./footer\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { UserContext } from \"../context/userContext\"\nimport { GET_USERS } from \"../graphql/query\"\nimport { APPROVE_USER, DELETE_USER, ISADMIN } from \"../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Users() {\n  const [approveUser] = useMutation(APPROVE_USER)\n  const [deleteUser] = useMutation(DELETE_USER)\n  const [makeAsAdmin] = useMutation(ISADMIN)\n  const userContext = useContext(UserContext)\n  const { isAdmin } = userContext.user\n\n  const columns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Admin\",\n      key: \"admin\",\n      dataIndex: \"admin\"\n    },\n    {\n      title: \"Approved\",\n      key: \"approved\",\n      dataIndex: \"approved\"\n    }\n  ]\n\n  const adminColumns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Admin\",\n      key: \"admin\",\n      dataIndex: \"admin\"\n    },\n    {\n      title: \"Approved\",\n      key: \"approved\",\n      dataIndex: \"approved\"\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const DisplayUserAdmin = () => {\n    const { error, loading, data, refetch } = useQuery(GET_USERS)\n    if (loading) {\n      return \"Loading ...\"\n    }\n    if (error) console.log(error)\n\n    if (data) {\n      refetch()\n      return (\n        <Table\n          dataSource={data.users.map((user, index) => {\n            const { id, fullname, email, isAdmin, approved } = user\n\n            return {\n              key: index,\n              fullname,\n              email,\n              admin: isAdmin ? (\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"Are you sure to make this user a normal user?\"\n                  onConfirm={() => {\n                    makeAsAdmin({\n                      variables: { id: `${id}`, isAdmin: false }\n                    })\n                    message.success(`${fullname} updated successfully `)\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"green\" key={id} style={{ cursor: \"pointer\" }}>\n                    Yes\n                  </Tag>\n                </Popconfirm>\n              ) : (\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"Are you sure to approve this user as Admin?\"\n                  onConfirm={() => {\n                    makeAsAdmin({\n                      variables: { id: `${id}`, isAdmin: true }\n                    })\n\n                    message.success(\n                      `${fullname} has been aprroved as admin successfully `\n                    )\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"red\" key={id} style={{ cursor: \"pointer\" }}>\n                    No\n                  </Tag>\n                </Popconfirm>\n              ),\n              approved: approved ? (\n                <Popconfirm\n                  disabled={isAdmin ? true : false}\n                  placement=\"topRight\"\n                  title=\"Are you sure disable this user?\"\n                  onConfirm={() => {\n                    approveUser({\n                      variables: { id: `${id}`, approve: false }\n                    })\n                    message.success(`${fullname} is disable `)\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"green\" key={id} style={{ cursor: \"pointer\" }}>\n                    Approved\n                  </Tag>\n                </Popconfirm>\n              ) : (\n                <Popconfirm\n                  disabled={isAdmin ? true : false}\n                  placement=\"topRight\"\n                  title=\"Are you sure to approve this user?\"\n                  onConfirm={() => {\n                    approveUser({\n                      variables: { id: `${id}`, approve: true }\n                    })\n                    message.success(`${fullname} has been aprroved successfully `)\n                    refetch()\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"orange\" key={id} style={{ cursor: \"pointer\" }}>\n                    Pending\n                  </Tag>\n                </Popconfirm>\n              ),\n              action: (\n                <div>\n                  <Popconfirm\n                    disabled={isAdmin ? true : false}\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this user?\"\n                    onConfirm={() => {\n                      deleteUser({ variables: { id: id } })\n                      message.success(`${fullname} Has been deleted `)\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n          columns={adminColumns}\n        />\n      )\n    }\n  }\n\n  const DisplayUser = () => {\n    const { error, loading, data } = useQuery(GET_USERS)\n    if (loading) {\n      return \"Loading ...\"\n    }\n    if (error) console.log(error)\n\n    if (data) {\n      return (\n        <Table\n          dataSource={data.users.map((user, index) => {\n            const { id, fullname, email, isAdmin, approved } = user\n\n            return {\n              key: index,\n              fullname,\n              email,\n              admin: isAdmin ? (\n                <Tag color=\"green\" key={id}>\n                  Yes\n                </Tag>\n              ) : (\n                <Tag color=\"red\" key={id}>\n                  No\n                </Tag>\n              ),\n              approved: approved ? (\n                <Tag color=\"green\" key={id}>\n                  Approved\n                </Tag>\n              ) : (\n                <Tag color=\"orange\" key={id}>\n                  Pending\n                </Tag>\n              )\n            }\n          })}\n          columns={columns}\n        />\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Users</h1>\n              {isAdmin ? <DisplayUserAdmin /> : <DisplayUser />}\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Users\n","import { useEffect } from \"react\"\nimport Cookie from \"js-cookie\"\nconst Logout = () => {\n  useEffect(() => {\n    Cookie.set(\"token\", \"\")\n    window.location.replace(\"/login\")\n  })\n  return null\n}\n\nexport default Logout\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\nimport slugify from \"slugify\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES } from \"../../graphql/query\"\nimport { CREATE_CATEGORY, DELETE_CATEGORY } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport {\n  Form,\n  Icon,\n  Input,\n  Button,\n  Row,\n  Col,\n  Layout,\n  message,\n  Table,\n  Divider,\n  Tag,\n  Popconfirm\n} from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Category(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== Mutation Varile Section =====\n  const [createCategory] = useMutation(CREATE_CATEGORY)\n  const [deleteCategory] = useMutation(DELETE_CATEGORY)\n  const { refetch: categoryRefetch } = useQuery(GET_CATEGORIES)\n\n  // ===== Display Column in the Table Section =====\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Slug\",\n      dataIndex: \"slug\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      sorter: (a, b) => a.created_by.length - b.created_by.length\n    },\n\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"Updated By\",\n      dataIndex: \"updated_by\"\n    },\n    {\n      title: \"Updated At\",\n      dataIndex: \"updated_at\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  // ===== Display Category Section =====\n  const DisplayCategory = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <Table\n          columns={columns}\n          dataSource={data.categories.map((cate) => {\n            return {\n              key: cate.id,\n              title: cate.title,\n              slug: cate.slug,\n              created_by: cate.created_by,\n              updated_by: cate.updated_by === \"\" ? \"No Update\" : cate.updated_by,\n              created_at: moment.unix(cate.created_at / 1000).format(\"YYYY-MM-DD\"),\n              updated_at:\n                cate.updated_at === null\n                  ? \"No Update\"\n                  : moment.unix(cate.updated_at / 1000).format(\"YYYY-MM-DD\"),\n              action: (\n                <div>\n                  <Link to={`/admin/category/edit/${cate.id}`}>\n                    <Tag className=\"btn\" color=\"#2db7f5\">\n                      Edit\n                    </Tag>\n                  </Link>\n                  <Divider type=\"vertical\" />\n\n                  <Popconfirm\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this category?\"\n                    onConfirm={() => {\n                      deleteCategory({ variables: { id: `${cate.id}` } })\n                      message.success(\"The Category has been Deleted\")\n                      categoryRefetch()\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n        />\n      )\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createCategory({\n          variables: { ...values, slug: slugify(values.title, { lower: true }) }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            categoryRefetch()\n            props.form.resetFields()\n            await message.success(\"The Category created successfully.\", 3)\n          })\n          .catch((error) => {\n            message.error(error.graphQLErrors[0].message, 5)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Category</h1>\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col span={4} style={{ display: \"none\" }}>\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col\n                    span={24}\n                    style={{ marginTop: \"-10px\", marginBottom: \"10px\" }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"btnSubmit\"\n                      disabled={loading ? true : false}\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n              <br />\n              <h1 className=\"title_new_post\">Categories</h1>\n              <DisplayCategory />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Category)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport slugify from \"slugify\"\n\n// ===== Query Section =====\nimport { EDIT_CATEGORY } from \"../../graphql/query\"\n\n// ===== Mutation Section =====\nimport { UPDATE_CATEGORY } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport { Form, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditCategory(props) {\n  const { getFieldDecorator } = props.form\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const userData = useContext(UserContext)\n  const [updateCategory] = useMutation(UPDATE_CATEGORY)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updateCategory({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true })\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(\"The Category update successfully.\", 3)\n            await props.history.push(\"/admin/categories\")\n          })\n          .catch((error) => {\n            message.error(error)\n          })\n      }\n    })\n  }\n\n  const { loading: edit_category_loading, data: edit_category_data } = useQuery(\n    EDIT_CATEGORY,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">\n                {edit_category_loading\n                  ? \"loading ...\"\n                  : `Update ${edit_category_data.category.title}`}\n              </h1>\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[16, 16]}>\n                  <Col span={16}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        initialValue: edit_category_loading\n                          ? \"loading ...\"\n                          : edit_category_data.category.title\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: new Date().toISOString()\n                      })(<Input style={{ display: \"none\" }} size=\"large\" />)}\n                    </FormItem>\n                  </Col>\n                  <Col span={4}>\n                    <FormItem>\n                      {getFieldDecorator(\"updated_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" disabled />)}\n                    </FormItem>\n                  </Col>\n                  <Col span={4}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"btnSubmit\"\n                      disabled={loading ? true : false}\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Update\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditCategory)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES, GET_POST, GET_POSTS } from \"../../graphql/query\"\nimport { UPDATE_POST } from \"../../graphql/mutation\"\nimport _ from \"lodash\"\nimport QuillTextEditor from \"../QuillTextEditor\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction EditPost(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: postLoading, data: postData } = useQuery(GET_POST, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n  const [desc, setDesc] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n\n  const handleDescChange = (value) => {\n    console.log(value)\n    setDesc(value)\n  }\n\n  const { refetch: postRefetch } = useQuery(GET_POSTS)\n  const [updatePost] = useMutation(UPDATE_POST)\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n\n    const filtered_pages = _.filter(data.categories, function (p) {\n      return _.includes([\"news\", \"events\"], p.slug)\n    })\n    return (\n      <Form.Item label=\"Categories\">\n        {getFieldDecorator(\"category\", {\n          rules: [\n            {\n              required: true,\n              message: \"Please select your category!\",\n            },\n          ],\n          initialValue: postData.post.category.title,\n        })(\n          <Select placeholder=\"Please select the category\" size=\"large\">\n            {filtered_pages.map((cate) => {\n              return (\n                <Option value={cate.title} key={cate.id}>\n                  {cate.title}\n                </Option>\n              )\n            })}\n          </Select>\n        )}\n      </Form.Item>\n    )\n  }\n\n  const handleSubmit = () => {\n    props.form.validateFieldsAndScroll((err, values) => {\n      console.log(slugify(values.title, { lower: true }))\n\n      if (!err) {\n        updatePost({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: desc === \"\" ? postData.post.description : desc,\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            postRefetch()\n            await message.success(res.data.update_post.message, 3)\n            await props.history.push(\"/admin/all-posts\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  // const handleSubmit = async e => {\n  //   e.preventDefault();\n  //   props.form.validateFieldsAndScroll((err, values) => {\n  //     if (!err) {\n  //       console.log(values);\n\n  //       updatePost({\n  //         variables: {\n  //           id: window.location.pathname.split(\"/\")[4],\n  //           ...values\n  //         }\n  //       })\n  //         .then(async () => {\n  //           setLoading(true);\n  //           setTimeout(() => {\n  //             setLoading(false);\n  //           }, 3000);\n  //           postRefetch();\n  //           await message.success(\"Post updated successfully.\", 3);\n  //           await props.history.push(\"/admin/all-posts\");\n  //         })\n  //         .catch(error => {\n  //           console.log(error);\n  //         });\n  //     }\n  //   });\n  // };\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  console.log(\"Result\", postData.post.description)\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Post</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                        initialValue: postData.post.title,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: new Date().toISOString(),\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc === \"\" ? postData.post.description : desc}\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Thumnail\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" + postData.post.thumnail\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"thumnail\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? postData.post.thumnail\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    {/* ======= Category Sections ======= */}\n                    <DisplayCategories />\n\n                    {/* ======= Tags ======= */}\n                    <FormItem label=\"Tags\">\n                      {getFieldDecorator(\"tags\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The tags is required\",\n                          },\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.tags,\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.keywords,\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.meta_desc,\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={handleSubmit}\n                        // disabled=\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditPost)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_PAGE, GET_PAGES, GET_CATEGORIES } from \"../../graphql/query\"\nimport { UPDATE_PAGE } from \"../../graphql/mutation\"\nimport QuillTextEditor from \"../QuillTextEditor\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Upload,\n  Select,\n  Layout,\n  message,\n  InputNumber,\n} from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction EditPage(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: pageLoading, data: pageData } = useQuery(GET_PAGE, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n  const [desc, setDesc] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n  const [updatePage] = useMutation(UPDATE_PAGE)\n\n  const handleDescChange = (value) => {\n    console.log(value)\n    setDesc(value)\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = () =>\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updatePage({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            description: desc === \"\" ? pageData.page.description : desc,\n            sectionNumber: values.sectionNumber.toString(),\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.update_page.message, 3)\n            await pageRefetch()\n            await props.history.push(\"/admin/all-pages\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n\n  // ===== Handle Image Upload =====\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n            initialValue: pageData.page.category.title,\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {data.categories.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  if (pageLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Page</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                        initialValue: pageData.page.title,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"SubTitle\">\n                      {getFieldDecorator(\"subTitle\", {\n                        initialValue: pageData.page.subTitle,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: new Date().toISOString(),\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc === \"\" ? pageData.page.description : desc}\n                      />\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        // disabled=\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" + pageData.page.image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Imae is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? pageData.page.image\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        {/* ======= Section Number ======= */}\n                        <FormItem label=\"Section Number: \">\n                          {getFieldDecorator(\"sectionNumber\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Section Number is required\",\n                              },\n                            ],\n                            initialValue: pageData.page.sectionNumber,\n                          })(\n                            <InputNumber\n                              min={1}\n                              size=\"large\"\n                              style={{ width: \"100%\" }}\n                            />\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={12}>\n                        {/* ======= Category Sections ======= */}\n                        <DisplayCategories />\n                      </Col>\n                    </Row>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                        initialValue: pageLoading ? \"\" : pageData.page.keywords,\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                        initialValue: pageLoading ? \"\" : pageData.page.meta_desc,\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditPage)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_MEMBER } from \"../../graphql/mutation\"\nimport { GET_MEMBERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\n\nfunction NewMember(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n  const [createMember] = useMutation(CREATE_MEMBER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createMember({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            memberRefetch()\n            props.form.resetFields()\n            await message.success(res.data.add_member.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The fullname is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Department\">\n                      {getFieldDecorator(\"department\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Please select member department!\",\n                          },\n                        ],\n                        initialValue: \"software-team\",\n                      })(\n                        <Select size=\"large\">\n                          <Option value=\"business-development\">\n                            Business Development\n                          </Option>\n                          <Option value=\"hardware-team\">KOOMPI Hardware Team</Option>\n                          <Option value=\"academy\">KOOMPI ACADEMY</Option>\n                          <Option value=\"sales-and-supplier-relation\">\n                            Sales and Supplier Relation\n                          </Option>\n                          <Option value=\"communication-and-marketing\">\n                            Communication and Marketing\n                          </Option>\n                          <Option value=\"software-team\">Software Teams</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Postion: \">\n                      {getFieldDecorator(\"position\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Position is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number: \">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Phone Number is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email: \">\n                      {getFieldDecorator(\"email\", {\n                        rules: [\n                          {\n                            type: \"email\",\n                            message: \"The input is not valid E-mail!\",\n                          },\n                          {\n                            required: true,\n                            message: \"Email is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"photo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Photo is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewMember)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_MEMBERS } from \"../../graphql/query\"\nimport { DELETE_MEMBER } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Members() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteMember] = useMutation(DELETE_MEMBER)\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n\n  const columns = [\n    {\n      title: \"Photo\",\n      dataIndex: \"photo\",\n    },\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n    },\n    {\n      title: \"Department\",\n      dataIndex: \"department\",\n      key: \"department\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\",\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n    },\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_MEMBERS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.members.map((member) => {\n              const {\n                id,\n                fullname,\n                phoneNumber,\n                email,\n                created_by,\n                photo,\n                department,\n                created_at,\n              } = member\n              return {\n                key: id,\n                photo: (\n                  <img\n                    src={`https://admin.koompi.com${photo}`}\n                    alt=\"post\"\n                    height=\"50px\"\n                    width=\"50px\"\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ),\n                fullname,\n                department,\n                email,\n                phoneNumber,\n\n                created_by: created_by,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/member/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this member?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteMember({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_member.message)\n                            await memberRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                ),\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Members</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Members\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_MEMBERS, GET_MEMBER } from \"../../graphql/query\"\nimport { UPDATE_MEMBER } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\n\nfunction EditMember(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: postLoading, data: memberData } = useQuery(GET_MEMBER, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n  const [updateMember] = useMutation(UPDATE_MEMBER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateMember({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            memberRefetch()\n            await message.success(res.data.update_member.message)\n            await props.history.push(\"/admin/members\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The fullname is required\",\n                          },\n                        ],\n                        initialValue: memberData.member.fullname,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Department\">\n                      {getFieldDecorator(\"department\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Please select member department!\",\n                          },\n                        ],\n                        initialValue: memberData.member.department,\n                      })(\n                        <Select>\n                          <Option value=\"business-development\">\n                            Business Development\n                          </Option>\n                          <Option value=\"hardware-team\">KOOMPI Hardware Team</Option>\n                          <Option value=\"academy\">KOOMPI ACADEMY</Option>\n                          <Option value=\"sales-and-supplier-relation\">\n                            Sales and Supplier Relation\n                          </Option>\n                          <Option value=\"communication-and-marketing\">\n                            Communication and Marketing\n                          </Option>\n                          <Option value=\"software-team\">Software Teams</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Postion: \">\n                      {getFieldDecorator(\"position\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Position is required\",\n                          },\n                        ],\n                        initialValue: memberData.member.position,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number: \">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Phone Number is required\",\n                          },\n                        ],\n                        initialValue: memberData.member.phoneNumber,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email: \">\n                      {getFieldDecorator(\"email\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Email is required\",\n                          },\n                        ],\n                        initialValue: memberData.member.email,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" + memberData.member.photo\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"photo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? memberData.member.photo\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditMember)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_RETAILER } from \"../../graphql/mutation\"\nimport { GET_RETAILERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction NewRetailer(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchRetailer } = useQuery(GET_RETAILERS)\n  const [createRetailer] = useMutation(CREATE_RETAILER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        createRetailer({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            refetchRetailer()\n            props.form.resetFields()\n            await message.success(res.data.add_retailer.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">New Retailer</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email\">\n                      {getFieldDecorator(\"email\", {})(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number\">\n                      {getFieldDecorator(\"phoneNumber\", {})(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link Location: \">\n                      {getFieldDecorator(\"location\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link Location is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"logo is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewRetailer)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_RETAILERS } from \"../../graphql/query\"\nimport { DELETE_RETAILER } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Retailers() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteRetailer] = useMutation(DELETE_RETAILER)\n  const { refetch: retailerRefetch } = useQuery(GET_RETAILERS)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\",\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n    },\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_RETAILERS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.retailers.map((retailer) => {\n              const {\n                id,\n                name,\n                phoneNumber,\n                email,\n                created_by,\n                logo,\n                created_at,\n              } = retailer\n              return {\n                key: parse(name),\n                logo: (\n                  <img\n                    src={`https://admin.koompi.com${logo}`}\n                    alt={name}\n                    height=\"30px\"\n                    width=\"auto\"\n                  />\n                ),\n                name,\n                email: email === null ? \"Null\" : email,\n                phoneNumber: phoneNumber === null ? \"Null\" : phoneNumber,\n\n                created_by: created_by,\n                created_at: moment\n                  .unix(created_at / 1000)\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/retailer/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this retailer?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteRetailer({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_retailer.message)\n                            await retailerRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                ),\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Retailers</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Retailers\n","import React, { useState } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_RETAILERS, GET_RETAILER } from \"../../graphql/query\"\nimport { UPDATE_RETAILER } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditRetailer(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: postLoading, data: retailerData } = useQuery(GET_RETAILER, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  const { refetch: refechRetailer } = useQuery(GET_RETAILERS)\n  const [updateRetailer] = useMutation(UPDATE_RETAILER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateRetailer({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            await message.success(res.data.update_retailer.message, 3)\n            refechRetailer()\n            await props.history.push(\"/admin/retailers\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Retailer</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\",\n                          },\n                        ],\n                        initialValue: retailerData.retailer.name,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Email\">\n                      {getFieldDecorator(\"email\", {\n                        initialValue: retailerData.retailer.email,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number\">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        initialValue: retailerData.retailer.phoneNumber,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link Location: \">\n                      {getFieldDecorator(\"location\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link Location is required\",\n                          },\n                        ],\n                        initialValue: retailerData.retailer.location,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" + retailerData.retailer.logo\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? retailerData.retailer.logo\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditRetailer)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\nimport { GET_RETAILERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction NewSocialMedia(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchRetailer } = useQuery(GET_RETAILERS)\n  const [addSocailMedia] = useMutation(CREATE_SOCIAL_MEDIA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        addSocailMedia({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.add_social_media.message, 3)\n            await refetchRetailer()\n            await props.form.resetFields()\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Social Media</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link: \">\n                      {getFieldDecorator(\"link\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"logo is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewSocialMedia)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOCIAL_MEDIA } from \"../../graphql/query\"\nimport { DELETE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction SocialMedia() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteSocialMedia] = useMutation(DELETE_SOCIAL_MEDIA)\n  const { refetch: refetchSocialMedia } = useQuery(GET_SOCIAL_MEDIA)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\",\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Link\",\n      dataIndex: \"link\",\n      key: \"link\",\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n    },\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplaySocailMedia = () => {\n    const { error, loading, data, refetch } = useQuery(GET_SOCIAL_MEDIA)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      refetch()\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.socialMedia.map((socialMedia) => {\n              const { id, name, created_by, link, logo, created_at } = socialMedia\n              return {\n                key: parse(name),\n                logo: (\n                  <img\n                    src={`https://admin.koompi.com${logo}`}\n                    alt={name}\n                    height=\"40px\"\n                    width=\"40px\"\n                  />\n                ),\n                name,\n                link,\n                created_by,\n                created_at: moment\n                  .unix(created_at / 1000)\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/social-media/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title={`Are you sure to delete ${name}?`}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteSocialMedia({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(\n                              res.data.delete_social_media.message\n                            )\n                            await refetchSocialMedia()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                ),\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Social Media</h1>\n              <DisplaySocailMedia />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default SocialMedia\n","import React, { useState } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_SOCIAL_MEDIA, GET_ONE_SOCIAL_MEDIA } from \"../../graphql/query\"\nimport { UPDATE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditSocialMedia(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: socialMediaLoading, data: socialMediaData } = useQuery(\n    GET_ONE_SOCIAL_MEDIA,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] },\n    }\n  )\n\n  const { refetch: refechSocialMedia } = useQuery(GET_SOCIAL_MEDIA)\n  const [updateSocialMedia] = useMutation(UPDATE_SOCIAL_MEDIA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateSocialMedia({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n\n            await message.success(res.data.update_social_media.message, 3)\n            await props.form.resetFields()\n            await refechSocialMedia()\n            await props.history.push(\"/admin/social-media\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (socialMediaLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\",\n                          },\n                        ],\n                        initialValue: socialMediaData.oneSocialMedia.name,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link: \">\n                      {getFieldDecorator(\"link\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link is required\",\n                          },\n                        ],\n                        initialValue: socialMediaData.oneSocialMedia.link,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" +\n                              socialMediaData.oneSocialMedia.logo\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? socialMediaData.oneSocialMedia.logo\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditSocialMedia)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport PageFooter from \"./footer\"\nimport { UserContext } from \"../context/userContext\"\nimport three_dots from \"../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { UPDATE_USER } from \"../graphql/mutation\"\nimport { GET_USER } from \"../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Settings(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  //   ===== Global Data =====\n  const { loading: userLoading, data: userQuery, refetch } = useQuery(GET_USER, {\n    variables: { email: userData.user.email },\n  })\n\n  const [updateUser] = useMutation(UPDATE_USER)\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const { fullname, avatar, oldPassword, newPassword } = values\n\n        updateUser({\n          variables: {\n            email: userQuery.user.email,\n            fullname,\n            avatar,\n            oldPassword,\n            newPassword,\n          },\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            refetch()\n            await message.success(\"User updated successfully.\", 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (userLoading) {\n    return \"Loading ...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">User Settings</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" + userQuery.user.avatar\n                            }`}\n                            alt=\"avatar\"\n                            style={{ height: \"133.5px\", width: \"133.5px\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ height: \"133.5px\", width: \"133.5px\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"avatar\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Avatar is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? userQuery.user.avatar\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"FullName is required\",\n                          },\n                        ],\n                        initialValue: userQuery.user.fullname,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={16}>\n                    <FormItem label=\"Old Password\">\n                      {getFieldDecorator(\"oldPassword\")(\n                        <Input size=\"large\" type=\"password\" />\n                      )}\n                    </FormItem>\n\n                    <FormItem label=\"New Password\">\n                      {getFieldDecorator(\"newPassword\")(\n                        <Input size=\"large\" type=\"password\" />\n                      )}\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Settings)\n","import React, { useState } from \"react\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\n\nfunction HandleVerify(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleVerify = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post(\n            `https://bot.koompi.com/telegramlogin?phone=${\n              values.phone\n            }&code=${parseInt(values.code)}`\n          )\n          .then(async (res) => {\n            message.success(res.data.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Form className=\"login-form\" onSubmit={handleVerify}>\n      <h4>Verify Code telegram</h4>\n      <Row gutter={12}>\n        <Col span={18}>\n          <FormItem>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Phone Number is required\",\n                },\n              ],\n              initialValue: props.phone,\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Phone Number\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={6}>\n          <FormItem>\n            {getFieldDecorator(\"code\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Code is required\",\n                },\n              ],\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Code\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            className=\"btnSubmit\"\n            disabled={loading ? true : false}\n          >\n            {loading ? (\n              <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default Form.create()(HandleVerify)\n","import React, { useState } from \"react\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport TextArea from \"antd/lib/input/TextArea\"\nimport axios from \"axios\"\nimport \"react-mde/lib/styles/css/react-mde-all.css\"\n\nconst FormItem = Form.Item\n\nfunction HandleMessage(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleMessage = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      console.log(err)\n\n      if (!err) {\n        console.log(values)\n\n        axios\n          .post(\n            `https://bot.koompi.com/telegrammsg?phone=${values.phone}&channel=${values.channel}&msg=${values.msg}`\n          )\n          .then(async (res) => {\n            message.success(res.data.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <div style={{ marginBottom: \"24px\" }}>\n      <h4>Send a telegram</h4>\n      <Form className=\"login-form\" onSubmit={handleMessage}>\n        <Row gutter={12}>\n          <Col span={12}>\n            <FormItem>\n              {getFieldDecorator(\"phone\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The Phone Number is required\",\n                  },\n                ],\n                initialValue: props.phone,\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                  placeholder=\"Phone Number\"\n                />\n              )}\n            </FormItem>\n          </Col>\n\n          <Col span={12}>\n            <FormItem>\n              {getFieldDecorator(\"channel\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The Channel is required\",\n                  },\n                ],\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                  placeholder=\"Channel\"\n                />\n              )}\n            </FormItem>\n          </Col>\n          <Col span={24}>\n            <FormItem>\n              {getFieldDecorator(\"msg\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The message is required\",\n                  },\n                ],\n              })(<TextArea rows={5}></TextArea>)}\n            </FormItem>\n          </Col>\n\n          <Col span={24}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              size=\"large\"\n              className=\"btnSubmit\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n              ) : (\n                \"Submit\"\n              )}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  )\n}\n\nexport default Form.create()(HandleMessage)\n","import React, { useState } from \"react\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\n\nfunction TelegramLogout(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleVerify = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post(`https://bot.koompi.com/telegramlogout?phone=${values.phone}`)\n          .then(async (res) => {\n            message.success(res.data.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Form className=\"login-form\" onSubmit={handleVerify}>\n      <h4>Logout</h4>\n      <Row gutter={12}>\n        <Col span={18}>\n          <FormItem>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Phone Number is required\",\n                },\n              ],\n              initialValue: props.phone,\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Phone Number\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            className=\"btnSubmit\"\n            disabled={loading ? true : false}\n          >\n            {loading ? (\n              <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default Form.create()(TelegramLogout)\n","import React, { useState } from \"react\"\n\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\nimport HandleVerify from \"./handle-verify\"\nimport HandleMessage from \"./handle-message\"\nimport TelegramLogout from \"./logout\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction TelegramBot(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n  const [phone, setPhone] = useState(\"\")\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    axios\n      .post(`https://bot.koompi.com/sendrequest?phone=${phone}`)\n      .then(async (res) => {\n        message.success(res.data.message)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const handleChange = (e) => {\n    setPhone(e.target.value)\n  }\n\n  console.log(phone)\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\" style={{ width: \"60%\" }}>\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Telegram Bot</h1>\n              <div style={{ marginBottom: \"24px\" }}>\n                <h4>Login telegram</h4>\n                <Form className=\"login-form\" onSubmit={handleSubmit}>\n                  <Row gutter={24}>\n                    <Col span={24}>\n                      <FormItem>\n                        {getFieldDecorator(\"phone\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"The Phone Number is required\",\n                            },\n                          ],\n                        })(\n                          <Input\n                            prefix={\n                              <Icon\n                                type=\"font-size\"\n                                style={{ color: \"rgba(0,0,0,.25)\" }}\n                              />\n                            }\n                            size=\"large\"\n                            placeholder=\"Phone Number\"\n                            onChange={handleChange}\n                          />\n                        )}\n                      </FormItem>\n                    </Col>\n                    <Col span={24}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </div>\n              <div style={{ marginBottom: \"24px\" }}>\n                <HandleVerify phone={phone} />\n              </div>\n              <div style={{ marginBottom: \"24px\" }}>\n                <HandleMessage phone={phone} />\n              </div>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(TelegramBot)\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nimport { CREATE_LEGAL } from \"../../graphql/mutation\"\nimport { GET_LEGALS } from \"../../graphql/query\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Legal(props) {\n  const { getFieldDecorator } = props.form\n  const [createLegal] = useMutation(CREATE_LEGAL)\n  const { refetch: refetchLegal } = useQuery(GET_LEGALS)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [description] = useState(\"\")\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createLegal({\n          variables: {\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            await message.success(res.data.create_legal.message, 3)\n            await refetchLegal()\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legal</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      {getFieldDecorator(\"description\", {\n                        initialValue: description\n                      })(\n                        <div>\n                          <EditorJs\n                            instanceRef={(instance) =>\n                              (editorJsRef.current = instance)\n                            }\n                            tools={EDITOR_JS_TOOLS}\n                            placeholder=\"Let's write an awesome story!\"\n                          />\n                        </div>\n                      )}\n                    </FormItem>\n\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                      onClick={handleSubmit}\n                      // disabled=\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Legal)\n","import React from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_LEGALS } from \"../../graphql/query\"\nimport { DELETE_LEGAL } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport { Form, Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\n\nconst { Content } = Layout\n\nfunction Legals() {\n  // ===== Mutation Varile Section =====\n  const [deleteLegal] = useMutation(DELETE_LEGAL)\n  const { refetch: legalRefetch } = useQuery(GET_LEGALS)\n\n  // ===== Display Column in the Table Section =====\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      sorter: (a, b) => a.created_by.length - b.created_by.length\n    },\n\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  // ===== Display Category Section =====\n  const DisplayLegals = () => {\n    const { error, loading, data } = useQuery(GET_LEGALS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <Table\n          columns={columns}\n          dataSource={data.legals.map((data) => {\n            return {\n              key: data.id,\n              title: data.title,\n              created_by: data.created_by,\n              created_at: moment.unix(data.created_at / 1000).format(\"YYYY-MM-DD\"),\n              action: (\n                <div>\n                  <Link to={`/admin/legal/edit/${data.id}`}>\n                    <Tag className=\"btn\" color=\"#2db7f5\">\n                      Edit\n                    </Tag>\n                  </Link>\n                  <Divider type=\"vertical\" />\n\n                  <Popconfirm\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this legal?\"\n                    onConfirm={(res) => {\n                      deleteLegal({ variables: { id: `${data.id}` } })\n                        .then(async (res) => {\n                          await message.success(res.data.delete_legal.message)\n                          await legalRefetch()\n                        })\n                        .catch((error) => {\n                          console.log(error)\n                          return null\n                        })\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n        />\n      )\n    }\n  }\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legals</h1>\n              <DisplayLegals />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Legals)\n","import React, { useState, useContext } from \"react\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nimport { UPDATE_LEGAL } from \"../../graphql/mutation\"\n// ===== Query Section =====\nimport { GET_LEGAL } from \"../../graphql/query\"\nimport { GET_LEGALS } from \"../../graphql/query\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditLegal(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchLegal } = useQuery(GET_LEGALS)\n\n  const { error: errorLegal, loading: dataLoading, data: legalData } = useQuery(\n    GET_LEGAL,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updateLegal({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.edit_legal.message, 3)\n            await refetchLegal()\n            await props.history.push(\"/admin/all-legals\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const [updateLegal] = useMutation(UPDATE_LEGAL)\n\n  if (errorLegal) console.log(errorLegal)\n  if (dataLoading) return \"Loading ...\"\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legal</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: legalData.legal.title\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          dataLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(legalData.legal.description)\n                        }\n                      />\n                    </FormItem>\n\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                      onClick={handleSubmit}\n                      // disabled=\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Update\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditLegal)\n","import React, { Fragment, useState } from \"react\"\nimport { Layout, message, Table, Tag, Popconfirm, Badge, Modal } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CUSTOMERS, GET_PRODUCT } from \"../../graphql/query\"\nimport { DELETE_CUSTOMER } from \"../../graphql/mutation\"\nimport { CSVLink, CSVDownload } from \"react-csv\"\n\nconst { Content } = Layout\nconst { Column, ColumnGroup } = Table\n\nfunction currencyFormat(num) {\n  return \"$\" + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n}\n\nfunction Payment() {\n  const [productData, setProductData] = React.useState(null)\n  // ===== Mutation Varile Section =====\n  const [deleteCustomer] = useMutation(DELETE_CUSTOMER)\n  const { refetch: paymentRefetch } = useQuery(GET_CUSTOMERS)\n  const [state, setState] = useState({ visible: false })\n  const { error, loading, data } = useQuery(GET_CUSTOMERS)\n\n  const showModal = () => {\n    setState({\n      visible: true,\n    })\n  }\n\n  const handleOk = (e) => {\n    console.log(e)\n    setState({\n      visible: false,\n    })\n  }\n\n  const handleCancel = (e) => {\n    console.log(e)\n    setState({\n      visible: false,\n    })\n  }\n\n  const columns = [\n    {\n      title: \"No\",\n      key: \"index\",\n      render: (text, record, index) => index + 1,\n    },\n    {\n      title: \"User Info\",\n      children: [\n        {\n          title: \"Full Name\",\n          render: (data) => {\n            const { firstname, lastname } = data\n            return `${firstname} ${lastname}`\n          },\n        },\n        {\n          title: \"Email\",\n          dataIndex: \"email\",\n        },\n        {\n          title: \"Phone\",\n          dataIndex: \"phone\",\n        },\n      ],\n    },\n    {\n      title: \"Product\",\n      children: [\n        {\n          title: \"Items\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => <div>{res.name}</div>)\n          },\n        },\n        {\n          title: \"Qty\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => <div>{res.qty}</div>)\n          },\n        },\n        {\n          title: \"Unit Price\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => <div>{currencyFormat(res.price)}</div>)\n          },\n        },\n        {\n          title: \"Total\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => (\n              <div>{currencyFormat(res.price * res.qty)}</div>\n            ))\n          },\n        },\n        {\n          title: \"Pay by\",\n          dataIndex: \"payBy\",\n          key: \"payBy\",\n        },\n      ],\n    },\n    {\n      title: \"Purchase At\",\n      dataIndex: \"created_at\",\n      render: (data) => {\n        return moment.unix(data / 1000).format(\"YYYY-MM-DD\")\n      },\n    },\n    {\n      title: \"Action\",\n      render: (data) => {\n        return (\n          <Fragment>\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this payment?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              onConfirm={() => {\n                deleteCustomer({ variables: { id: `${data.id}` } })\n                  .then(async (res) => {\n                    await message.success(res.data.delete_customer.message)\n                    await paymentRefetch()\n                  })\n                  .catch((error) => {\n                    console.log(error)\n                    return null\n                  })\n              }}\n            >\n              <Tag color=\"red\" style={{ cursor: \"pointer\" }}>\n                Delete\n              </Tag>\n            </Popconfirm>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const DisplayPayment = () => {\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <div>\n          <CSVLink data={data.customers}> Download CSV</CSVLink>\n          <Table\n            bordered\n            columns={columns}\n            dataSource={data.customers}\n            pagination={{ pageSize: 20 }}\n          />\n\n          {/* {JSON.stringify(JSON.parse(data.customers[0].products), 0, 2)} */}\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Payments</h1>\n              <DisplayPayment />\n\n              {/* <ProductInfo /> */}\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Payment\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARES } from \"../../graphql/query\"\nimport { ADD_SOFTWARE } from \"../../graphql/mutation\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction AddSoftware(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [logo, setLogo] = useState(\"\")\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch } = useQuery(GET_SOFTWARES)\n  const [createSoftware] = useMutation(ADD_SOFTWARE)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const uploadLogo = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setLogo(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} logo uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} logo upload failed.`)\n      }\n    },\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createSoftware({\n          variables: {\n            ...values,\n            description: JSON.stringify(savedData),\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            refetch()\n            props.form.resetFields()\n            await message.success(res.data.create_software.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Software</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        placeholder=\"Let's write an awesome story!\"\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadLogo}>\n                        {logo ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${logo}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + logo,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(AddSoftware)\n","import React from \"react\"\nimport { Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARES } from \"../../graphql/query\"\nimport { DELETE_SOFTWARE } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllSoftwares() {\n  // ===== Mutation Varile Section =====\n  const [deleteSoftware] = useMutation(DELETE_SOFTWARE)\n\n  const { refetch: refetchSoftware } = useQuery(GET_SOFTWARES)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\",\n    },\n    {\n      title: \"Image\",\n      dataIndex: \"image\",\n    },\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\",\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n    },\n  ]\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_SOFTWARES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.softwares.map((software) => {\n              const { id, title, created_at, user } = software\n              return {\n                key: id,\n                logo: (\n                  <img\n                    src={\"https://admin.koompi.com\" + software.logo}\n                    alt=\"software\"\n                    height=\"50px\"\n                    width=\"50px\"\n                  />\n                ),\n                image: (\n                  <img\n                    src={\"https://admin.koompi.com\" + software.image}\n                    alt=\"software\"\n                    height=\"50px\"\n                    width=\"50px\"\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ),\n                title: title.length <= 25 ? title : title.substring(0, 25) + \" ...\",\n\n                created_by: user === null ? \"Null\" : user.fullname,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/software/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this software?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteSoftware({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_software.message)\n                            await refetchSoftware()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                ),\n              }\n            })}\n            pagination={true}\n          />\n        )\n      }\n      return (\n        <div>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All softwares</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllSoftwares\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARE, GET_SOFTWARES } from \"../../graphql/query\"\nimport { UPDATE_SOFTWARE } from \"../../graphql/mutation\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditSoftware(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: softwareLoading, data: softwareData } = useQuery(GET_SOFTWARE, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [logo, setLogo] = useState(null)\n  const [image, setImage] = useState(null)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n\n  const { refetch } = useQuery(GET_SOFTWARES)\n  const [updateSoftware] = useMutation(UPDATE_SOFTWARE)\n\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      console.log(slugify(values.title, { lower: true }))\n\n      if (!err) {\n        updateSoftware({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: JSON.stringify(savedData),\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.edit_software.message, 3)\n            await refetch()\n            await props.history.push(\"/admin/all-softwares\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const uploadLogo = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setLogo(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} logo uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} logo upload failed.`)\n      }\n    },\n  }\n\n  if (softwareLoading) {\n    return \"Loading...\"\n  }\n\n  console.log(\"Result\", softwareData.software.description)\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Software</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                        initialValue: softwareData.software.title,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: new Date().toISOString(),\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          softwareLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(softwareData.software.description)\n                        }\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadLogo}>\n                        {logo === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" + softwareData.software.logo\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + logo\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\",\n                            },\n                          ],\n                          initialValue:\n                            logo === null\n                              ? softwareData.software.logo\n                              : \"/public/uploads/\" + logo,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com\" +\n                              softwareData.software.image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? softwareData.software.image\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={handleSubmit}\n                        // disabled=\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditSoftware)\n","import React from \"react\"\nimport { Layout, message, Table, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\n// ===== Query and Mutation Section =====\n// import { GET_CUSTOMERS } from \"../../graphql/query\"\nimport { DELETE_PAYMENT } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Preorder() {\n  // ===== Mutation Varile Section =====\n  // const [deletePayment] = useMutation(DELETE_PAYMENT)\n  // const { refetch: paymentRefetch } = useQuery(GET_CUSTOMERS)\n\n  const columns = [\n    {\n      title: \"First Name\",\n      dataIndex: \"firstname\",\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"lastname\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phone\",\n    },\n    {\n      title: \"Message\",\n      dataIndex: \"message\",\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n    },\n  ]\n\n  // const DisplayPayment = () => {\n  //   const { error, loading, data } = useQuery(GET_CUSTOMERS)\n  //   if (error) console.log(error)\n  //   if (loading) return <Table loading={true}></Table>\n  //   if (data) {\n  //     console.log(data)\n\n  //     const DisplayTable = () => {\n  //       return (\n  //         <Table\n  //           columns={columns}\n  //           dataSource={data.payments.map((payment) => {\n  //             const { id, firstname, lastname, email, created_at } = payment\n  //             return {\n  //               key: id,\n  //               firstname,\n  //               lastname,\n  //               email,\n  //               created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n  //               action: <div></div>,\n  //             }\n  //           })}\n  //           pagination={true}\n  //         />\n  //       )\n  //     }\n  //     return (\n  //       <div>\n  //         <DisplayTable />\n  //       </div>\n  //     )\n  //   }\n  // }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Pre-Order</h1>\n              {/* <DisplayPayment /> */}\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Preorder\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { ADD_AMA } from \"../../graphql/mutation\"\nimport { GET_AMAS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\nconst { TextArea } = Input\n\nfunction AddAMA(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch } = useQuery(GET_AMAS)\n  const [createAMA] = useMutation(ADD_AMA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      console.log(values)\n      if (!err) {\n        createAMA({ variables: { ...values, created_at: new Date() } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            refetch()\n            props.form.resetFields()\n            await message.success(res.data.create_ama.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add AMA</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Speaker\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Date\">\n                      {getFieldDecorator(\"date\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The date is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"URL\">\n                      {getFieldDecorator(\"url\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The url is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Category\">\n                      {getFieldDecorator(\"category\", {\n                        initialValue: \"koompi-ama\",\n                      })(\n                        <Select size=\"large\">\n                          <Option value=\"koompi-ama\">KOOMPI AMA</Option>\n                          <Option value=\"user-ama\">USER AMA</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n                    <FormItem label=\"Description\">\n                      {getFieldDecorator(\"desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The description is required\",\n                          },\n                        ],\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Photo is required\",\n                            },\n                          ],\n                          initialValue: `/public/uploads/${image}`,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(AddAMA)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_AMAS } from \"../../graphql/query\"\nimport { DELETE_AMA } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllAMA() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteAMA] = useMutation(DELETE_AMA)\n\n  const { error, loading, data, refetch } = useQuery(GET_AMAS)\n  if (error) console.log(error)\n  if (loading) return <Table loading={true}></Table>\n  const columns = [\n    {\n      title: \"Photo\",\n      dataIndex: \"image\",\n      key: \"image\",\n      render: (data) => {\n        return <img src={`https://admin.koompi.com${data}`} height=\"30px\" alt=\"\" />\n      },\n    },\n    {\n      title: \"Speaker\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n\n    {\n      title: \"Topic\",\n      dataIndex: \"title\",\n      ellipsis: true,\n      key: \"title\",\n      render: (data) => {\n        return data\n      },\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      render: (data) => {\n        return moment.unix(data / 1000).format(\"YYYY-MM-DD\")\n      },\n    },\n\n    {\n      title: \"Actions\",\n      render: (data) => {\n        return (\n          <div>\n            <Link to={`/admin/ama/edit/${data.id}`}>\n              <Tag className=\"btn\" color=\"#2db7f5\">\n                Edit\n              </Tag>\n            </Link>\n            <Divider type=\"vertical\" />\n\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this AMA?\"\n              onConfirm={() => {\n                deleteAMA({ variables: { id: `${data.id}` } })\n                message.success(\"The AMA deleted with successful.\")\n                refetch()\n              }}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Tag color=\"#f50\" className=\"btn\">\n                Delete\n              </Tag>\n            </Popconfirm>\n          </div>\n        )\n      },\n    },\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">AMA</h1>\n              <Table\n                columns={columns}\n                dataSource={data.amas}\n                pagination={visible ? false : true}\n              />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllAMA\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_AMAS, GET_AMA } from \"../../graphql/query\"\nimport { UPDATE_AMA } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\nconst { TextArea } = Input\n\nfunction EditAMA(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: amaLoading, data: amaData } = useQuery(GET_AMA, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch } = useQuery(GET_AMAS)\n  const [updateAMA] = useMutation(UPDATE_AMA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateAMA({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            refetch()\n            await message.success(\"The AMA updated with successfully\")\n            await props.history.push(\"/admin/all-amas\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (amaLoading) {\n    return \"Loading...\"\n  }\n\n  const { title, name, date, url, category, desc, image: amaImage } = amaData.ama\n\n  console.log(amaData.ama)\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Edit AMA</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Speaker\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\",\n                          },\n                        ],\n                        initialValue: name,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                        initialValue: title,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Date\">\n                      {getFieldDecorator(\"date\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The date is required\",\n                          },\n                        ],\n                        initialValue: date,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"URL\">\n                      {getFieldDecorator(\"url\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The url is required\",\n                          },\n                        ],\n                        initialValue: url,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Category\">\n                      {getFieldDecorator(\"category\", {\n                        initialValue: category,\n                      })(\n                        <Select size=\"large\">\n                          <Option value=\"koompi-ama\">KOOMPI AMA</Option>\n                          <Option value=\"user-ama\">USER AMA</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n                    <FormItem label=\"Description\">\n                      {getFieldDecorator(\"desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The description is required\",\n                          },\n                        ],\n                        initialValue: desc,\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin.koompi.com\" + amaImage}`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null ? amaImage : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditAMA)\n","import React from \"react\"\nimport \"antd/dist/antd.css\"\nimport \"./App.css\"\n\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"\nimport LoginForm from \"./components/users/login\"\nimport SignupForm from \"./components/users/signup\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport PublicRoute from \"./PublicRoute\"\nimport { UserProvider } from \"./context/userContext\"\n\n// Call Component\nimport Admin from \"./components/admin\"\nimport NewPost from \"./components/posts/new-post\"\nimport AllPosts from \"./components/posts/all-post\"\nimport NewPage from \"./components/pages/new-page\"\nimport AllPages from \"./components/pages/all-pages\"\nimport Users from \"./components/users\"\nimport Logout from \"./components/users/logout\"\nimport Category from \"./components/categories/category\"\nimport \"nprogress/nprogress.css\"\nimport editCategory from \"./components/categories/edit-category\"\nimport editPost from \"./components/posts/edit-post\"\nimport editPage from \"./components/pages/edit-page\"\nimport newMember from \"./components/members/new-member\"\nimport Members from \"./components/members/members\"\nimport editMember from \"./components/members/edit-member\"\nimport newRetailer from \"./components/retailers/new-retailer\"\nimport Retailers from \"./components/retailers/retailers\"\nimport editRetailer from \"./components/retailers/edit-retailer\"\nimport newSocialMedia from \"./components/socialmedia/new-social-media\"\nimport SocialMedia from \"./components/socialmedia/social-media\"\nimport editSocialMedia from \"./components/socialmedia/edit-social-media\"\nimport Settings from \"./components/settings\"\nimport TelegramBot from \"./components/telegram-bot/telegram-bot\"\nimport Legal from \"./components/legals/legal\"\nimport allLegals from \"./components/legals/all-legals\"\nimport editLegal from \"./components/legals/edit-legal\"\nimport Payment from \"./components/payments/payment\"\nimport AddSoftware from \"./components/softwares/add-software\"\nimport AllSoftwares from \"./components/softwares/all-softwares\"\nimport EditSoftware from \"./components/softwares/edit-software\"\nimport Preorder from \"./components/preorder/preorder\"\nimport AddAMA from \"./components/amas/new-ama\"\nimport AllAMA from \"./components/amas/amas\"\nimport editAma from \"./components/amas/edit-ama\"\n\nfunction App() {\n  return (\n    <UserProvider>\n      <Router>\n        <Switch>\n          <PublicRoute restricted={true} exact path=\"/login\" component={LoginForm} />\n          <PublicRoute exact path=\"/\" restricted={true} component={LoginForm} />\n          <PublicRoute exact path=\"/logout\" component={Logout} />\n          <PublicRoute exact path=\"/register\" component={SignupForm} />\n          <PrivateRoute exact path=\"/admin/dashboard\" component={Admin} />\n          <PrivateRoute exact path=\"/admin/users\" component={Users} />\n          <PrivateRoute exact path=\"/admin/user/settings\" component={Settings} />\n          {/* ===== Post Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-post\" component={NewPost} />\n          <PrivateRoute exact path=\"/admin/all-posts\" component={AllPosts} />\n          <PrivateRoute exact path=\"/admin/post/edit/:id\" component={editPost} />\n          {/* ===== Page Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/add-software\" component={AddSoftware} />\n          <PrivateRoute exact path=\"/admin/all-softwares\" component={AllSoftwares} />\n          <PrivateRoute\n            exact\n            path=\"/admin/software/edit/:id\"\n            component={EditSoftware}\n          />\n          {/* ===== Page Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-page\" component={NewPage} />\n          <PrivateRoute exact path=\"/admin/all-pages\" component={AllPages} />\n          <PrivateRoute exact path=\"/admin/page/edit/:id\" component={editPage} />\n          {/* ===== Category Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/categories\" component={Category} />\n          <PrivateRoute\n            exact\n            path=\"/admin/category/edit/:id\"\n            component={editCategory}\n          />\n          {/* ===== AMA Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/add-ama\" component={AddAMA} />\n          <PrivateRoute exact path=\"/admin/all-amas\" component={AllAMA} />\n          <PrivateRoute exact path=\"/admin/ama/edit/:id\" component={editAma} />\n          {/* ===== Member Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-member\" component={newMember} />\n          <PrivateRoute exact path=\"/admin/members\" component={Members} />\n          <PrivateRoute exact path=\"/admin/member/edit/:id\" component={editMember} />\n          {/* ===== Retailer Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-retailer\" component={newRetailer} />\n          <PrivateRoute exact path=\"/admin/retailers\" component={Retailers} />\n          <PrivateRoute\n            exact\n            path=\"/admin/retailer/edit/:id\"\n            component={editRetailer}\n          />\n          {/* ===== Social Media Route Section ===== */}\n          <PrivateRoute\n            exact\n            path=\"/admin/add-social-media\"\n            component={newSocialMedia}\n          />\n          <PrivateRoute exact path=\"/admin/social-media\" component={SocialMedia} />\n          <PrivateRoute\n            exact\n            path=\"/admin/social-media/edit/:id\"\n            component={editSocialMedia}\n          />\n          {/* ===== Payment Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/user/payments\" component={Payment} />\n\n          {/* ===== PreOrder Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/user/pre-order\" component={Preorder} />\n          {/* ===== Telegram Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/telegram-bot\" component={TelegramBot} />\n          {/* ===== Legal Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-legal\" component={Legal} />\n          <PrivateRoute exact path=\"/admin/all-legals\" component={allLegals} />\n          <PrivateRoute exact path=\"/admin/legal/edit/:id\" component={editLegal} />\n        </Switch>\n      </Router>\n    </UserProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport Cookies from \"js-cookie\"\n\nimport { ApolloClient } from \"apollo-client\"\nimport { createHttpLink } from \"apollo-link-http\"\nimport { setContext } from \"apollo-link-context\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\n// const httpLink = createHttpLink({\n//   uri: \"http://localhost:7006/admin\",\n// })\n\nconst httpLink = createHttpLink({\n  uri: \"https://admin.koompi.com/admin\",\n})\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = Cookies.get(\"token\")\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : \"\",\n    },\n  }\n})\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n})\n\n// const client = new ApolloClient({\n//   cache,\n//   uri: \"http://localhost:8080/admin\",\n//   credentials: \"same-origin\",\n//   headers: {\n//     authorization: token\n//   }\n// })\n\n// const client = new ApolloClient({\n//   cache,\n//   uri: \"http://localhost:8080/admin\"\n// })\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}