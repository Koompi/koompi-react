{"version":3,"sources":["assets/img/three-dots-black.svg","assets/img/three-dots.svg","components/users/login.js","graphql/mutation.js","components/users/signup.js","PrivateRoute.js","PublicRoute.js","context/userContext.js","components/navbar/left-navbar.js","graphql/query.js","components/navbar/top-navbar.js","components/footer.js","components/data/admin.js","components/admin.js","components/QuillTextEditor.js","components/posts/tools.js","components/posts/new-post.js","components/posts/all-post.js","components/pages/tools.js","components/pages/new-page.js","components/pages/all-pages.js","components/users.js","components/users/logout.js","components/categories/category.js","components/categories/edit-category.js","components/posts/edit-post.js","components/pages/edit-page.js","components/members/new-member.js","components/members/members.js","components/members/edit-member.js","components/retailers/new-retailer.js","components/retailers/retailers.js","components/retailers/edit-retailer.js","components/socialmedia/new-social-media.js","components/socialmedia/social-media.js","components/socialmedia/edit-social-media.js","components/settings.js","components/telegram-bot/handle-verify.js","components/telegram-bot/handle-message.js","components/telegram-bot/logout.js","components/telegram-bot/telegram-bot.js","components/legals/tools.js","components/legals/legal.js","components/legals/all-legals.js","components/legals/edit-legal.js","components/payments/payment.js","components/softwares/tools.js","components/softwares/add-software.js","components/softwares/all-softwares.js","components/softwares/edit-software.js","components/preorder/preorder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","create","props","useState","loading","setLoading","getFieldDecorator","form","className","params","particles","number","value","size","interactivity","events","onhover","enable","mode","onSubmit","e","preventDefault","validateFields","err","values","console","log","remember","axios","post","then","a","res","setTimeout","Cookie","set","data","token","expires","message","success","window","location","replace","catch","error","type","response","notification","description","closeIcon","duration","Item","rules","required","prefix","style","color","placeholder","valuePropName","initialValue","htmlType","disabled","src","three_dots","alt","height","to","CREATE_USER","gql","UPDATE_USER","APPROVE_USER","ISADMIN","DELETE_USER","CREATE_CATEGORY","DELETE_CATEGORY","UPDATE_CATEGORY","CREATE_POST","DELETE_POST","UPDATE_POST","CREATE_PAGE","DELETE_PAGE","UPDATE_PAGE","CREATE_MEMBER","DELETE_MEMBER","UPDATE_MEMBER","CREATE_RETAILER","DELETE_RETAILER","UPDATE_RETAILER","CREATE_SOCIAL_MEDIA","DELETE_SOCIAL_MEDIA","UPDATE_SOCIAL_MEDIA","CREATE_LEGAL","UPDATE_LEGAL","DELETE_LEGAL","ADD_SOFTWARE","UPDATE_SOFTWARE","DELETE_SOFTWARE","DELETE_CUSTOMER","useMutation","createUser","fullname","email","password","variables","JSON","parse","stringify","graphQLErrors","get","user","jwt","decode","PrivateRoute","Component","component","rest","render","PublicRoute","restricted","UserContext","createContext","UserProvider","avatar","setUser","useEffect","Provider","children","Sider","Layout","SubMenu","Menu","LeftNavbar","userData","useContext","isLight","setIsLight","pathname","isAdmin","sessionIsLight","localStorage","getItem","backgroundColor","onClick","setItem","theme","defaultSelectedKeys","defaultOpenKeys","key","ItemGroup","title","GET_USERS","GET_USER","GET_CATEGORIES","EDIT_CATEGORY","GET_POSTS","GET_POST","GET_PAGES","GET_PAGE","GET_MEMBERS","GET_MEMBER","GET_RETAILERS","GET_RETAILER","GET_SOCIAL_MEDIA","GET_ONE_SOCIAL_MEDIA","GET_LEGALS","GET_LEGAL","GET_CUSTOMERS","GET_SOFTWARES","GET_SOFTWARE","GET_PRODUCT","Header","TopNavbar","content","href","background","padding","useQuery","placement","Footer","PageFooter","textAlign","TotalPost","posts","created_at","length","TotalPage","pages","TotalRetailer","retailers","Content","Admin","options","chart","id","xaxis","categories","series","name","minHeight","gutter","span","users","sort","o","moment","unix","QuillTextEditor","formats","modules","toolbar","header","list","indent","onChange","handleDescChange","defaultValue","preserveWhitespace","Embed","Table","List","Warning","Code","LinkTool","Image","Raw","Quote","Marker","CheckList","Delimiter","InlineCode","SimpleImage","FormItem","TextArea","Input","Option","Select","image","setImage","desc","setDesc","categoryRefetch","refetch","postsRefetch","createPost","uploadImage","multiple","action","defaultFileList","info","status","file","fileList","toLowerCase","React","useRef","margin","label","display","Dragger","width","filtered_pages","_","filter","p","includes","slug","map","cate","rows","float","validateFieldsAndScroll","slugify","lower","resetFields","create_post","AllPosts","deletePost","postRefetch","columns","dataIndex","borderRadius","substring","category","format","index","okText","cancelText","onConfirm","delete_post","dataSource","pagination","defaultCurrent","total","showTotal","range","pageSize","createPage","pageRefetch","min","sectionNumber","toString","create_page","AllPages","deletePage","uuidv4","sorter","b","lang","localeCompare","delete_page","rowKey","Users","approveUser","deleteUser","makeAsAdmin","adminColumns","approved","admin","cursor","approve","Logout","createCategory","deleteCategory","onFilter","record","indexOf","created_by","marginTop","marginBottom","updated_by","updated_at","updateCategory","split","edit_category_loading","edit_category_data","history","push","Date","toISOString","postLoading","postData","updatePost","thumnail","tags","keywords","meta_desc","update_post","pageLoading","pageData","updatePage","page","subTitle","update_page","memberRefetch","createMember","add_member","Members","visible","setVisible","deleteMember","hideModal","DisplayTable","members","member","phoneNumber","photo","department","delete_member","onOk","onCancel","footer","memberData","updateMember","update_member","position","refetchRetailer","createRetailer","add_retailer","Retailers","deleteRetailer","retailerRefetch","retailer","logo","delete_retailer","retailerData","refechRetailer","updateRetailer","update_retailer","addSocailMedia","add_social_media","SocialMedia","deleteSocialMedia","refetchSocialMedia","socialMedia","link","delete_social_media","socialMediaLoading","socialMediaData","refechSocialMedia","updateSocialMedia","update_social_media","oneSocialMedia","userLoading","userQuery","updateUser","oldPassword","newPassword","phone","parseInt","code","channel","msg","setPhone","target","EDITOR_JS_TOOLS","embed","table","warning","linkTool","raw","quote","marker","checklist","delimiter","inlineCode","simpleImage","createLegal","refetchLegal","editorJsRef","handleSubmit","useCallback","current","save","savedData","create_legal","instanceRef","instance","tools","deleteLegal","legalRefetch","legals","delete_legal","errorLegal","dataLoading","legalData","updateLegal","edit_legal","legal","Column","ColumnGroup","currencyFormat","num","toFixed","Payment","setProductData","deleteCustomer","paymentRefetch","firstname","lastname","products","qty","price","deposit","delete_customer","bordered","customers","setLogo","createSoftware","uploadLogo","create_software","AllSoftwares","deleteSoftware","refetchSoftware","softwares","software","delete_software","softwareLoading","softwareData","updateSoftware","edit_software","Preorder","App","exact","path","LoginForm","SignupForm","Settings","NewPost","editPost","AddSoftware","EditSoftware","NewPage","editPage","Category","editCategory","newMember","editMember","newRetailer","editRetailer","newSocialMedia","editSocialMedia","TelegramBot","Legal","allLegals","editLegal","Boolean","hostname","match","httpLink","createHttpLink","uri","authLink","setContext","headers","Cookies","authorization","client","ApolloClient","concat","cache","InMemoryCache","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18183854.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/three-dots-black.9f3b0075.svg\";","module.exports = __webpack_public_path__ + \"static/media/three-dots.7627bc82.svg\";","import React, { useState } from \"react\"\nimport { Form, Icon, Input, Button, Checkbox, message, notification } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport Cookie from \"js-cookie\"\nimport Particles from \"react-particles-js\"\n\nfunction LoginForm(props) {\n  const [loading, setLoading] = useState(false)\n\n  const openNotificationWithIcon = (type) => {\n    notification[type]({\n      message: `Hello there!`,\n      description:\n        \"You don't permission to access it yet. Please ask the admin to approve your user.\",\n      closeIcon: true,\n      duration: 10\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(values.remember)\n\n        axios\n          .post(`https://admin-demo.koompi.com/login`, { ...values })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            Cookie.set(\n              \"token\",\n              res.data.token,\n              values.remember ? { expires: 7 } : null\n            )\n            await message.success(\"Login successfully.\", 3)\n            window.location.replace(\"/admin/dashboard\")\n          })\n          .catch((error) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            if (\n              error.response.data.message ===\n              \"You don't have a permission to access it\"\n            ) {\n              openNotificationWithIcon(\"info\")\n            } else {\n              message.error(error.response.data.message, 10)\n            }\n          })\n      } else {\n        console.log(err)\n      }\n    })\n  }\n\n  const { getFieldDecorator } = props.form\n  return (\n    <div>\n      {/* <div className=\"loginBackground\"></div> */}\n      <Particles\n        className=\"loginBackground\"\n        params={{\n          particles: {\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"repulse\"\n              }\n            }\n          }\n        }}\n      />\n      <div className=\"loginContainer\">\n        <h1 className=\"loginTitle\">Login</h1>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator(\"email\", {\n              rules: [{ required: true, message: \"Please input your Email!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"Please input your Password!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"remember\", {\n              valuePropName: \"checked\",\n              initialValue: true\n            })(<Checkbox>Remember me</Checkbox>)}\n            {/* <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a> */}\n            <br />\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"koompi-steam-loading\" height=\"10\" />\n              ) : (\n                \"Login\"\n              )}\n            </Button>\n            <br />\n            Or <Link to=\"/register\">register now!</Link>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default Form.create()(LoginForm)\n","import gql from \"graphql-tag\"\n\nconst CREATE_USER = gql`\n  mutation($fullname: String!, $email: String!, $password: String!) {\n    create_user(fullname: $fullname, email: $email, password: $password) {\n      fullname\n      email\n      password\n    }\n  }\n`\n\nconst UPDATE_USER = gql`\n  mutation(\n    $fullname: String!\n    $email: String!\n    $avatar: String!\n    $oldPassword: String\n    $newPassword: String\n  ) {\n    update_user(\n      fullname: $fullname\n      email: $email\n      avatar: $avatar\n      oldPassword: $oldPassword\n      newPassword: $newPassword\n    ) {\n      fullname\n      email\n    }\n  }\n`\n\nconst APPROVE_USER = gql`\n  mutation($id: String!, $approve: Boolean!) {\n    approve_user(id: $id, approve: $approve) {\n      fullname\n      email\n      approved\n    }\n  }\n`\n\nconst ISADMIN = gql`\n  mutation($id: String!, $isAdmin: Boolean!) {\n    isAdmin(id: $id, isAdmin: $isAdmin) {\n      fullname\n      email\n      isAdmin\n    }\n  }\n`\n\nconst DELETE_USER = gql`\n  mutation($id: String!) {\n    delete_user(id: $id) {\n      fullname\n    }\n  }\n`\n\nconst CREATE_CATEGORY = gql`\n  mutation($title: String!, $slug: String!, $created_by: String!) {\n    create_category(title: $title, slug: $slug, created_by: $created_by) {\n      id\n      title\n      slug\n      created_by\n      created_at\n    }\n  }\n`\n\nconst DELETE_CATEGORY = gql`\n  mutation($id: String!) {\n    delete_category(id: $id) {\n      title\n    }\n  }\n`\n\nconst UPDATE_CATEGORY = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $slug: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_category(\n      id: $id\n      title: $title\n      slug: $slug\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      id\n      title\n      slug\n    }\n  }\n`\n\nconst CREATE_POST = gql`\n  mutation(\n    $title: String!\n    $slug: String!\n    $category: String!\n    $created_by: String!\n    $description: String!\n    $thumnail: String\n    $tags: [String]!\n    $keywords: [String]!\n    $meta_desc: String!\n  ) {\n    create_post(\n      title: $title\n      slug: $slug\n      category: $category\n      created_by: $created_by\n      description: $description\n      thumnail: $thumnail\n      tags: $tags\n      keywords: $keywords\n      meta_desc: $meta_desc\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_POST = gql`\n  mutation($id: String!) {\n    delete_post(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_POST = gql`\n  mutation(\n    $id: String!\n    $slug: String!\n    $title: String!\n    $category: String!\n    $description: String!\n    $thumnail: String\n    $tags: [String]!\n    $keywords: [String]!\n    $meta_desc: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_post(\n      id: $id\n      title: $title\n      slug: $slug\n      category: $category\n      description: $description\n      thumnail: $thumnail\n      tags: $tags\n      keywords: $keywords\n      meta_desc: $meta_desc\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_PAGE = gql`\n  mutation(\n    $title: String!\n    $lang: String!\n    $subTitle: String\n    $created_by: String!\n    $description: String\n    $image: String\n    $category: String!\n    $sectionNumber: String\n    $keywords: [String]!\n    $meta_desc: String!\n  ) {\n    create_page(\n      title: $title\n      lang: $lang\n      subTitle: $subTitle\n      created_by: $created_by\n      description: $description\n      sectionNumber: $sectionNumber\n      image: $image\n      category: $category\n      keywords: $keywords\n      meta_desc: $meta_desc\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_PAGE = gql`\n  mutation($id: String!) {\n    delete_page(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_PAGE = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $subTitle: String\n    $description: String\n    $image: String\n    $category: String!\n    $sectionNumber: String!\n    $keywords: [String]!\n    $meta_desc: String!\n    $updated_by: String!\n    $updated_at: String!\n  ) {\n    update_page(\n      id: $id\n      title: $title\n      subTitle: $subTitle\n      description: $description\n      image: $image\n      category: $category\n      sectionNumber: $sectionNumber\n      keywords: $keywords\n      meta_desc: $meta_desc\n      updated_by: $updated_by\n      updated_at: $updated_at\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_MEMBER = gql`\n  mutation(\n    $fullname: String!\n    $department: String!\n    $position: String!\n    $phoneNumber: String!\n    $email: String\n    $photo: String!\n    $created_by: String!\n  ) {\n    add_member(\n      fullname: $fullname\n      department: $department\n      position: $position\n      phoneNumber: $phoneNumber\n      email: $email\n      photo: $photo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_MEMBER = gql`\n  mutation($id: String!) {\n    delete_member(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_MEMBER = gql`\n  mutation(\n    $id: String!\n    $fullname: String!\n    $department: String!\n    $position: String!\n    $phoneNumber: String!\n    $email: String\n    $photo: String!\n    $created_by: String!\n  ) {\n    update_member(\n      id: $id\n      fullname: $fullname\n      department: $department\n      position: $position\n      phoneNumber: $phoneNumber\n      email: $email\n      photo: $photo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_RETAILER = gql`\n  mutation(\n    $name: String!\n    $location: String!\n    $logo: String!\n    $phoneNumber: String\n    $email: String\n    $created_by: String!\n  ) {\n    add_retailer(\n      name: $name\n      location: $location\n      logo: $logo\n      phoneNumber: $phoneNumber\n      email: $email\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_RETAILER = gql`\n  mutation($id: String!) {\n    delete_retailer(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_RETAILER = gql`\n  mutation(\n    $id: String!\n    $name: String!\n    $location: String!\n    $logo: String!\n    $phoneNumber: String\n    $email: String\n  ) {\n    update_retailer(\n      id: $id\n      name: $name\n      location: $location\n      logo: $logo\n      phoneNumber: $phoneNumber\n      email: $email\n    ) {\n      message\n    }\n  }\n`\n\nconst CREATE_SOCIAL_MEDIA = gql`\n  mutation($name: String!, $link: String!, $logo: String!, $created_by: String!) {\n    add_social_media(\n      name: $name\n      link: $link\n      logo: $logo\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_SOCIAL_MEDIA = gql`\n  mutation($id: String!) {\n    delete_social_media(id: $id) {\n      message\n    }\n  }\n`\n\nconst UPDATE_SOCIAL_MEDIA = gql`\n  mutation($id: String!, $name: String!, $link: String!, $logo: String!) {\n    update_social_media(id: $id, name: $name, link: $link, logo: $logo) {\n      message\n    }\n  }\n`\n\nconst CREATE_LEGAL = gql`\n  mutation($title: String!, $description: String!, $created_by: String!) {\n    create_legal(title: $title, description: $description, created_by: $created_by) {\n      message\n    }\n  }\n`\n\nconst UPDATE_LEGAL = gql`\n  mutation($id: String!, $title: String!, $description: String!) {\n    edit_legal(id: $id, title: $title, description: $description) {\n      message\n    }\n  }\n`\n\nconst DELETE_LEGAL = gql`\n  mutation($id: String!) {\n    delete_legal(id: $id) {\n      message\n    }\n  }\n`\n\nconst ADD_SOFTWARE = gql`\n  mutation(\n    $title: String!\n    $description: String!\n    $logo: String!\n    $image: String!\n    $created_by: String!\n  ) {\n    create_software(\n      title: $title\n      description: $description\n      logo: $logo\n      image: $image\n      created_by: $created_by\n    ) {\n      message\n    }\n  }\n`\n\nconst UPDATE_SOFTWARE = gql`\n  mutation(\n    $id: String!\n    $title: String!\n    $description: String!\n    $logo: String!\n    $image: String!\n  ) {\n    edit_software(\n      id: $id\n      title: $title\n      description: $description\n      logo: $logo\n      image: $image\n    ) {\n      message\n    }\n  }\n`\n\nconst DELETE_SOFTWARE = gql`\n  mutation($id: String!) {\n    delete_software(id: $id) {\n      message\n    }\n  }\n`\n\nconst DELETE_CUSTOMER = gql`\n  mutation($id: String!) {\n    delete_customer(id: $id) {\n      message\n    }\n  }\n`\n\nexport {\n  CREATE_USER,\n  CREATE_CATEGORY,\n  DELETE_CATEGORY,\n  UPDATE_CATEGORY,\n  CREATE_POST,\n  DELETE_POST,\n  UPDATE_POST,\n  APPROVE_USER,\n  DELETE_USER,\n  ISADMIN,\n  CREATE_PAGE,\n  DELETE_PAGE,\n  UPDATE_PAGE,\n  CREATE_MEMBER,\n  DELETE_MEMBER,\n  UPDATE_MEMBER,\n  CREATE_RETAILER,\n  DELETE_RETAILER,\n  UPDATE_RETAILER,\n  CREATE_SOCIAL_MEDIA,\n  DELETE_SOCIAL_MEDIA,\n  UPDATE_SOCIAL_MEDIA,\n  UPDATE_USER,\n  CREATE_LEGAL,\n  UPDATE_LEGAL,\n  DELETE_LEGAL,\n  ADD_SOFTWARE,\n  UPDATE_SOFTWARE,\n  DELETE_SOFTWARE,\n  DELETE_CUSTOMER,\n}\n","import React, { useState } from \"react\"\nimport { Form, Icon, Input, Button, message } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { useMutation } from \"@apollo/react-hooks\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport Particles from \"react-particles-js\"\n\n// ===== Create User =====\nimport { CREATE_USER } from \"../../graphql/mutation\"\n\nfunction SignupForm(props) {\n  const [createUser] = useMutation(CREATE_USER)\n\n  // ===== State Section =====\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const { fullname, email, password } = values\n        await createUser({\n          variables: {\n            fullname,\n            email,\n            password\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            await message.success(\"Register Successfully.\", 3)\n            await window.location.replace(\"/login\")\n          })\n          .catch((error) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            let err = JSON.parse(JSON.stringify(error))\n            message.error(err.graphQLErrors[0].message)\n          })\n      } else {\n        console.log(err)\n      }\n    })\n  }\n\n  const { getFieldDecorator } = props.form\n  return (\n    <>\n      <Particles\n        className=\"loginBackground\"\n        params={{\n          particles: {\n            number: {\n              value: 50\n            },\n            size: {\n              value: 3\n            }\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"repulse\"\n              }\n            }\n          }\n        }}\n      />\n      <div className=\"loginContainer\">\n        <h1 className=\"loginTitle\">Register</h1>\n        <Form onSubmit={handleSubmit} className=\"login-form\">\n          {/* Full Name */}\n          <Form.Item>\n            {getFieldDecorator(\"fullname\", {\n              rules: [{ required: true, message: \"Please input your Full Name!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Full Name\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Email */}\n          <Form.Item>\n            {getFieldDecorator(\"email\", {\n              rules: [{ required: true, message: \"Please input your Email!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Password */}\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"Please input your Password!\" }]\n            })(\n              <Input\n                size=\"large\"\n                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n\n          {/* Remember Me */}\n          <Form.Item>\n            {/* Button Submit */}\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"koompi-steam-loading\" height=\"10\" />\n              ) : (\n                \"Sign Up\"\n              )}\n            </Button>\n            <br />\n            Have an account? <Link to=\"/login\">Login</Link>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default Form.create()(SignupForm)\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\n// Global varible\nlet token = Cookie.get(\"token\")\nlet user = jwt.decode(token)\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLogin = () => {\n    if (user) {\n      return true\n    }\n    return false\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  let token = Cookie.get(\"token\")\n  let user = jwt.decode(token)\n\n  const isLogin = () => {\n    if (!user) {\n      return false\n    }\n    return true\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() && restricted ? (\n          <Redirect to=\"/admin/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n}\n\nexport default PublicRoute\n","import React, { createContext, useState, useEffect } from \"react\"\nimport jwt from \"jsonwebtoken\"\nimport Cookie from \"js-cookie\"\n\nexport const UserContext = createContext()\n\nexport const UserProvider = (props) => {\n  const [user, setUser] = useState({\n    fullname: \"\",\n    email: \"\",\n    avatar: \"\"\n  })\n\n  useEffect(() => {\n    let token = Cookie.get(\"token\")\n    let user = jwt.decode(token)\n    setUser(user)\n  }, [])\n\n  return (\n    <UserContext.Provider value={{ user }}>{props.children}</UserContext.Provider>\n  )\n}\n","import React, { useState, useContext } from \"react\"\nimport { Layout, Menu } from \"antd\"\nimport { Link } from \"react-router-dom\"\nimport { UserContext } from \"../../context/userContext\"\nimport {\n  FiBarChart,\n  FiFileText,\n  FiFile,\n  FiList,\n  FiUsers,\n  FiMapPin,\n  FiShare2,\n  FiDollarSign,\n  FiSend,\n  FiUserCheck,\n  FiUser,\n  FiLayers,\n} from \"react-icons/fi\"\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nfunction LeftNavbar() {\n  const userData = useContext(UserContext)\n  const [isLight, setIsLight] = useState(true)\n\n  // const isDay = () => {\n  //   const hours = new Date().getHours();\n  //   return hours >= 6 && hours < 18;\n  // };\n\n  const pathname = window.location.pathname\n\n  const { fullname, isAdmin } = userData.user\n  if (fullname === \"\") {\n    return null\n  }\n\n  const handleIsLight = () => {\n    setIsLight(!isLight)\n    localStorage.setItem(\"isLight\", !isLight)\n  }\n\n  const sessionIsLight = JSON.parse(localStorage.getItem(\"isLight\"))\n\n  return (\n    <Sider\n      // collapsible\n      // collapsed={collapsed}\n      // onCollapse={onCollapse}\n      style={\n        sessionIsLight\n          ? { backgroundColor: \"rgb(30, 39, 46)\" }\n          : { backgroundColor: \"#fff\" }\n      }\n    >\n      <div>\n        <center>\n          <img\n            src={\n              sessionIsLight\n                ? \"/images/KOOMPI_Logo.svg\"\n                : \"/images/KOOMPI_Logo_dark.svg\"\n            }\n            alt=\"\"\n            className=\"KOOMPI_LOGO\"\n          />\n        </center>\n        <div className=\"themeChange\" onClick={handleIsLight}>\n          {sessionIsLight ? (\n            <img src=\"/images/day.svg\" alt=\"koompi day\" height=\"25px\" />\n          ) : (\n            <img src=\"/images/night.svg\" alt=\"koompi night\" height=\"25px\" />\n          )}\n        </div>\n      </div>\n      <Menu\n        theme={sessionIsLight ? \"dark\" : \"light\"}\n        defaultSelectedKeys={[pathname]}\n        defaultOpenKeys={[pathname]}\n        mode=\"inline\"\n      >\n        {/* ========= Dashboard Section ========= */}\n        <Menu.Item key=\"/admin/dashboard\">\n          <Link to=\"/admin/dashboard\" className=\"nav-text\">\n            <FiBarChart />\n            <span>Dashboard</span>\n          </Link>\n        </Menu.Item>\n        <Menu.ItemGroup key=\"site-management\" title=\"Site Management\">\n          {/* ========= Posts Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/new-post\"\n                ? \"/admin/new-post\"\n                : \"/admin/all-posts\"\n                ? \"/admin/all-posts\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiFileText />\n                <span>Posts</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-post\">\n              <Link to=\"/admin/new-post\">New Post</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-posts\">\n              <Link to=\"/admin/all-posts\">All Posts</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= Pages Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/new-page\"\n                ? \"/admin/new-page\"\n                : \"/admin/all-pages\"\n                ? \"/admin/all-pages\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiFile />\n                <span>Pages</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-page\">\n              <Link to=\"/admin/new-page\">New Page</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-pages\">\n              <Link to=\"/admin/all-pages\">All Pages</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= Software Section ========= */}\n          {/* <SubMenu\n            key={\n              pathname === \"/admin/add-software\"\n                ? \"/admin/add-software\"\n                : \"/admin/all-softwares\"\n                ? \"/admin/all-softwares\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiLayers />\n                <span>Softwares</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/add-software\">\n              <Link to=\"/admin/add-software\">Add Software</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/all-softwares\">\n              <Link to=\"/admin/all-softwares\">All Software</Link>\n            </Menu.Item>\n          </SubMenu> */}\n\n          {/* ========= Categories Section ========= */}\n\n          <Menu.Item key=\"/admin/categories\">\n            <Link to=\"/admin/categories\" className=\"nav-text\">\n              <FiList />\n              <span>Categories</span>\n            </Link>\n          </Menu.Item>\n\n          {/* ========= Member Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/new-member\"\n                ? \"/admin/new-member\"\n                : \"/admin/members\"\n                ? \"/admin/members\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiUsers />\n                <span>Members</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-member\">\n              <Link to=\"/admin/new-member\">New Member</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/members\">\n              <Link to=\"/admin/members\">All Members</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= Retailer Section ========= */}\n          {/* <SubMenu\n            key={\n              pathname === \"/admin/new-retailer\"\n                ? \"/admin/new-retailer\"\n                : \"/admin/retailers\"\n                ? \"/admin/retailers\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiMapPin />\n                <span>Retailers</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/new-retailer\">\n              <Link to=\"/admin/new-retailer\">New Retailer</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/retailers\">\n              <Link to=\"/admin/retailers\">All Retailers</Link>\n            </Menu.Item>\n          </SubMenu> */}\n\n          {/* ========= Social Media Section ========= */}\n          <SubMenu\n            key={\n              pathname === \"/admin/add-social-media\"\n                ? \"/admin/add-social-media\"\n                : \"/admin/social-media\"\n                ? \"/admin/social-media\"\n                : \"\"\n            }\n            title={\n              <div className=\"nav-text\">\n                <FiShare2 />\n                <span>Socail media</span>\n              </div>\n            }\n          >\n            <Menu.Item key=\"/admin/add-social-media\">\n              <Link to=\"/admin/add-social-media\">Add Social Media</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/social-media\">\n              <Link to=\"/admin/social-media\">Social Media</Link>\n            </Menu.Item>\n          </SubMenu>\n\n          {/* ========= PreOrder Section ========= */}\n          {/* {isAdmin && (\n          <Menu.Item key=\"/admin/user/pre-order\">\n            <Link to=\"/admin/user/pre-order\" className=\"nav-text\">\n              <FiDollarSign />\n              <span>Pre-Order</span>\n            </Link>\n          </Menu.Item>\n        )} */}\n\n          {/* ========= Mail Sender Section ========= */}\n          {/* {isAdmin && (\n          <Menu.Item key=\"/admin/send-mail\">\n            <Link to=\"/user/send-mail\" className=\"nav-text\">\n              <Icon type=\"mail\" />\n              <span>Mail Sender</span>\n            </Link>\n          </Menu.Item>\n        )} */}\n\n          {/* ========= Mail Sender Section ========= */}\n          {isAdmin && (\n            <SubMenu\n              key={\n                pathname === \"/admin/new-legal\"\n                  ? \"/admin/new-legal\"\n                  : \"/admin/all-legals\"\n                  ? \"/admin/all-legals\"\n                  : \"\"\n              }\n              title={\n                <div className=\"nav-text\">\n                  <FiUserCheck />\n                  <span>Legals</span>\n                </div>\n              }\n            >\n              <Menu.Item key=\"/admin/new-legal\">\n                <Link to=\"/admin/new-legal\">New Legal</Link>\n              </Menu.Item>\n              <Menu.Item key=\"/admin/all-legals\">\n                <Link to=\"/admin/all-legals\">All Legals</Link>\n              </Menu.Item>\n            </SubMenu>\n          )}\n\n          {/* ========= Users Section ========= */}\n          <Menu.Item key=\"/admin/users\">\n            <Link to=\"/admin/users\" className=\"nav-text\">\n              <FiUser />\n              <span>Users</span>\n            </Link>\n          </Menu.Item>\n        </Menu.ItemGroup>\n\n        <Menu.ItemGroup key=\"payment-management\" title=\"Payment Management\">\n          {/* ========= Payment Section ========= */}\n          {isAdmin && (\n            <Menu.Item key=\"/admin/user/payments\">\n              <Link to=\"/admin/user/payments\" className=\"nav-text\">\n                <FiDollarSign />\n                <span>User Payment</span>\n              </Link>\n            </Menu.Item>\n          )}\n        </Menu.ItemGroup>\n\n        <Menu.ItemGroup key=\"telegram-bot\" title=\"Bot System\">\n          {/* ========= Mail Sender Section ========= */}\n          {isAdmin && (\n            <Menu.Item key=\"/admin/telegram-bot\">\n              <Link to=\"/admin/telegram-bot\" className=\"nav-text\">\n                <FiSend />\n                <span>Telegram</span>\n              </Link>\n            </Menu.Item>\n          )}\n        </Menu.ItemGroup>\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default LeftNavbar\n","import gql from \"graphql-tag\"\n\nconst GET_USERS = gql`\n  query {\n    users {\n      fullname\n      email\n      avatar\n      isAdmin\n      id\n      approved\n      created_at\n    }\n  }\n`\n\nconst GET_USER = gql`\n  query($email: String!) {\n    user(email: $email) {\n      fullname\n      email\n      avatar\n      isAdmin\n      id\n      approved\n    }\n  }\n`\n\nconst GET_CATEGORIES = gql`\n  query {\n    categories {\n      id\n      title\n      slug\n      created_by\n      updated_by\n      created_at\n      updated_at\n    }\n  }\n`\n\nconst EDIT_CATEGORY = gql`\n  query($id: String!) {\n    category(id: $id) {\n      id\n      title\n      created_by\n    }\n  }\n`\n\nconst GET_POSTS = gql`\n  query {\n    posts {\n      id\n      title\n      slug\n      description\n      category {\n        title\n      }\n      user {\n        fullname\n      }\n      meta_desc\n      keywords\n      tags\n      updated_at\n      updated_by\n      created_at\n      thumnail\n    }\n  }\n`\n\nconst GET_POST = gql`\n  query($id: String!) {\n    post(id: $id) {\n      id\n      title\n      slug\n      created_by\n      description\n      category {\n        title\n      }\n      meta_desc\n      keywords\n      tags\n      updated_at\n      updated_by\n      created_at\n      thumnail\n    }\n  }\n`\n\nconst GET_PAGES = gql`\n  query {\n    pages {\n      id\n      title\n      subTitle\n      category {\n        title\n      }\n      lang {\n        lang\n      }\n      sectionNumber\n      created_by\n      description\n      meta_desc\n      keywords\n      image\n      updated_at\n      updated_by\n      created_at\n    }\n  }\n`\n\nconst GET_PAGE = gql`\n  query($id: String!) {\n    page(id: $id) {\n      id\n      title\n      subTitle\n      category {\n        title\n        slug\n      }\n      sectionNumber\n      created_by\n      description\n      meta_desc\n      keywords\n      image\n      updated_at\n      updated_by\n      created_at\n    }\n  }\n`\n\nconst GET_MEMBERS = gql`\n  query {\n    members {\n      id\n      fullname\n      phoneNumber\n      email\n      created_by\n      position\n      photo\n      department\n      created_at\n    }\n  }\n`\n\nconst GET_MEMBER = gql`\n  query($id: String!) {\n    member(id: $id) {\n      id\n      fullname\n      phoneNumber\n      email\n      created_by\n      position\n      photo\n      department\n      created_at\n    }\n  }\n`\n\nconst GET_RETAILERS = gql`\n  query {\n    retailers {\n      name\n      id\n      email\n      logo\n      location\n      created_by\n      phoneNumber\n      created_at\n    }\n  }\n`\n\nconst GET_RETAILER = gql`\n  query($id: String!) {\n    retailer(id: $id) {\n      name\n      id\n      email\n      logo\n      location\n      created_by\n      phoneNumber\n      created_at\n    }\n  }\n`\n\nconst GET_SOCIAL_MEDIA = gql`\n  query {\n    socialMedia {\n      id\n      name\n      logo\n      link\n      created_by\n      created_at\n    }\n  }\n`\nconst GET_ONE_SOCIAL_MEDIA = gql`\n  query($id: String!) {\n    oneSocialMedia(id: $id) {\n      id\n      name\n      logo\n      link\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_LEGALS = gql`\n  query {\n    legals {\n      id\n      title\n      description\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_LEGAL = gql`\n  query($id: String!) {\n    legal(id: $id) {\n      id\n      title\n      description\n      created_by\n      created_at\n    }\n  }\n`\n\nconst GET_CUSTOMERS = gql`\n  query {\n    customers {\n      id\n      firstname\n      lastname\n      email\n      phone\n      products\n      created_at\n    }\n  }\n`\n\nconst GET_SOFTWARES = gql`\n  query {\n    softwares {\n      id\n      title\n      description\n      logo\n      image\n      created_at\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nconst GET_SOFTWARE = gql`\n  query($id: String!) {\n    software(id: $id) {\n      id\n      title\n      description\n      logo\n      image\n      created_at\n      user {\n        fullname\n      }\n    }\n  }\n`\n\nconst GET_PRODUCT = gql`\n  query($id: String!) {\n    product(id: $id) {\n      id\n      name\n      price\n      purchasingType\n    }\n  }\n`\n\nexport {\n  GET_USERS,\n  GET_USER,\n  GET_CATEGORIES,\n  EDIT_CATEGORY,\n  GET_POSTS,\n  GET_POST,\n  GET_PAGES,\n  GET_PAGE,\n  GET_MEMBERS,\n  GET_MEMBER,\n  GET_RETAILERS,\n  GET_RETAILER,\n  GET_SOCIAL_MEDIA,\n  GET_ONE_SOCIAL_MEDIA,\n  GET_LEGALS,\n  GET_LEGAL,\n  GET_CUSTOMERS,\n  GET_SOFTWARES,\n  GET_SOFTWARE,\n  GET_PRODUCT,\n}\n","import React, { useContext } from \"react\"\nimport { Layout, Popover } from \"antd\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { UserContext } from \"../../context/userContext\"\nimport { Link } from \"react-router-dom\"\nimport { GET_USER } from \"../../graphql/query\"\n\nconst { Header } = Layout\n\nfunction TopNavbar() {\n  const userContext = useContext(UserContext)\n  const { email } = userContext.user\n  const content = (\n    <div>\n      <Link to=\"/admin/user/settings\">Settings</Link>\n      <p>\n        <a href=\"/logout\">Logout</a>\n      </p>\n    </div>\n  )\n\n  const DisplayUser = () => {\n    const { error, loading, data } = useQuery(GET_USER, {\n      variables: { email }\n    })\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data) {\n      const { fullname, avatar, email } = data.user\n      return (\n        <Popover\n          placement=\"bottomRight\"\n          title={\n            <div>\n              <div>\n                <b>{fullname}</b>\n              </div>\n              <p>{email}</p>\n            </div>\n          }\n          content={content}\n        >\n          <img\n            src={`https://admin-demo.koompi.com` + avatar}\n            alt={fullname}\n            className=\"avatar\"\n          />\n        </Popover>\n      )\n    }\n  }\n\n  return (\n    <Header style={{ background: \"#fff\", padding: 0 }}>\n      <DisplayUser />\n    </Header>\n  )\n}\n\nexport default TopNavbar\n","import React from \"react\"\nimport { Layout } from \"antd\"\nconst { Footer } = Layout\n\nfunction PageFooter() {\n  return (\n    <Footer style={{ textAlign: \"center\" }}>\n      Copyright © 2020 Created by <b>KOOMPI</b>\n      <p>\n        A brainchild of <b>SmallWorld Venture</b>\n      </p>\n    </Footer>\n  )\n}\n\nexport default PageFooter\n","import React from \"react\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport three_dots from \"../../assets/img/three-dots-black.svg\"\n\n// ===== Query Section =====\nimport { GET_USERS, GET_POSTS, GET_PAGES, GET_RETAILERS } from \"../../graphql/query\"\n\nconst UserTotal = () => {\n  const { error, loading, data } = useQuery(GET_USERS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.users.length}</b> users\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\nconst TotalPost = () => {\n  const { error, loading, data } = useQuery(GET_POSTS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    console.log(\"data\", data.posts.created_at)\n\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.posts.length}</b> posts\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\n\nconst TotalPage = () => {\n  const { error, loading, data } = useQuery(GET_PAGES)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.pages.length}</b> pages\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\n\nconst TotalRetailer = () => {\n  const { error, loading, data } = useQuery(GET_RETAILERS)\n  if (loading) {\n    return (\n      <center>\n        <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n      </center>\n    )\n  }\n  if (error) console.log(error)\n  if (data) {\n    return (\n      <div>\n        <center>\n          <span className=\"adminFirstSectionFont\">\n            <b>{data.retailers.length}</b> retailers\n          </span>\n        </center>\n      </div>\n    )\n  }\n}\nexport { UserTotal, TotalPost, TotalPage, TotalRetailer }\n","import React, { useState, useEffect } from \"react\"\nimport { Row, Col, Layout } from \"antd\"\n\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport PageFooter from \"./footer\"\nimport { useQuery } from \"@apollo/react-hooks\"\nimport { UserTotal, TotalPost, TotalPage, TotalRetailer } from \"./data/admin\"\nimport { GET_USERS, GET_POSTS, GET_PAGES, GET_RETAILERS } from \"../graphql/query\"\nimport three_dots from \"../assets/img/three-dots-black.svg\"\n\nimport Chart from \"react-apexcharts\"\nimport moment from \"moment\"\n\nconst { Content } = Layout\n\nfunction Admin() {\n  const [chart, setChart] = useState({\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      xaxis: {\n        categories: [1580871334388, 1580799414274, 1580377941997],\n      },\n    },\n    series: [\n      {\n        name: \"series-1\",\n        data: [30, 40, 45],\n      },\n    ],\n  })\n\n  const UserTotal = () => {\n    const { error, loading, data } = useQuery(GET_USERS)\n    if (loading) {\n      return (\n        <center>\n          <img src={three_dots} alt=\"btn-loading\" height=\"12\" />\n        </center>\n      )\n    }\n    if (error) console.log(error)\n    if (data) {\n      console.log(\n        \"Data\",\n        data.users.sort(function (o) {\n          return moment(o.created_at).unix()\n        })\n      )\n\n      return (\n        <div>\n          <center>\n            <span className=\"adminFirstSectionFont\">\n              <b>{data.users.length}</b> users\n            </span>\n          </center>\n        </div>\n      )\n    }\n  }\n\n  // const { error, loading, data } = useQuery(GET_POSTS);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div style={{ padding: \"0px 50px \" }}>\n            {/* ======= Display content ====== */}\n            <Row gutter={[16, 16]}>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/User.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <UserTotal />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Post.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalPost />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Page.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalPage />\n                </div>\n              </Col>\n              <Col span={6}>\n                <div className=\"card_back\">\n                  <div className=\"icons_back\">\n                    <img\n                      src=\"/images/icons/Retailers.svg\"\n                      alt=\"user\"\n                      className=\"card_icon\"\n                    />\n                  </div>\n                  <TotalRetailer />\n                </div>\n              </Col>\n            </Row>\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <div className=\"card_back_content\">\n                  <center>\n                    <img src=\"/images/coursenotfound.gif\" height=\"400px\" alt=\"\" />\n                  </center>\n                </div>\n              </Col>\n              {/* <Col span={8}>\n                <div className=\"card_back\">\n                  <Chart\n                    series={chart.series}\n                    options={chart.options}\n                    type=\"bar\"\n                  ></Chart>\n                </div>\n              </Col>\n              <Col span={8}>\n                <div className=\"card_back\">\n                  <Chart\n                    series={chart.series}\n                    options={chart.options}\n                    type=\"area\"\n                  ></Chart>\n                </div>\n              </Col> */}\n            </Row>\n          </div>\n\n          <div></div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Admin\n","import React from \"react\"\nimport ReactQuill from \"react-quill\" // ES6\nimport \"react-quill/dist/quill.snow.css\" // ES6\n\nfunction QuillTextEditor(props) {\n  const modules = {\n    toolbar: [\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n      [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n      [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }],\n      [\"link\"],\n      [\"clean\"],\n    ],\n  }\n\n  const formats = [\n    \"header\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n  ]\n  return (\n    <ReactQuill\n      formats={formats}\n      modules={modules}\n      onChange={props.handleDescChange}\n      defaultValue={props.defaultValue}\n      preserveWhitespace={true}\n    />\n  )\n}\n\nexport default QuillTextEditor\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport QuillTextEditor from \"../QuillTextEditor\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES, GET_POSTS } from \"../../graphql/query\"\nimport { CREATE_POST } from \"../../graphql/mutation\"\nimport _ from \"lodash\"\n\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction NewPost(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n  const [desc, setDesc] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: categoryRefetch } = useQuery(GET_CATEGORIES)\n  const { refetch: postsRefetch } = useQuery(GET_POSTS)\n  const [createPost] = useMutation(CREATE_POST)\n\n  const handleDescChange = (value) => {\n    setDesc(value)\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      const filtered_pages = _.filter(data.categories, function (p) {\n        return _.includes([\"news\", \"events\"], p.slug)\n      })\n\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n            initialValue: filtered_pages[0].title,\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {filtered_pages.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = () => {\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createPost({\n          variables: {\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: desc === \"\" ? null : desc,\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            setDesc(\"\")\n            categoryRefetch()\n            postsRefetch()\n            props.form.resetFields()\n            await message.success(res.data.create_post.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">New Post</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      {/* <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        placeholder=\"Let's write an awesome story!\"\n                      /> */}\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc}\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Thumnail\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin-demo.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"thumnail\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    {/* ======= Category Sections ======= */}\n                    <DisplayCategories />\n\n                    {/* ======= Tags ======= */}\n                    <FormItem label=\"Tags\">\n                      {getFieldDecorator(\"tags\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The tags is required\",\n                          },\n                        ],\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewPost)\n","import React from \"react\"\nimport { Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_POSTS } from \"../../graphql/query\"\nimport { DELETE_POST } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllPosts() {\n  // ===== Mutation Varile Section =====\n  const [deletePost] = useMutation(DELETE_POST)\n  const { refetch: postRefetch } = useQuery(GET_POSTS)\n\n  const columns = [\n    {\n      title: \"Image\",\n      dataIndex: \"thumnail\",\n      render: (data) => {\n        return (\n          <img\n            src={\"https://admin-demo.koompi.com\" + data}\n            alt=\"post\"\n            height=\"40px\"\n            width=\"40px\"\n            style={{ borderRadius: \"8px\" }}\n          />\n        )\n      },\n    },\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      render: (data) => {\n        return data.length <= 25 ? data : data.substring(0, 25) + \" ...\"\n      },\n      key: \"title\",\n    },\n    {\n      title: \"Slug\",\n      dataIndex: \"slug\",\n      key: \"slug\",\n      render: (slug) => {\n        return slug.length <= 25 ? slug : slug.substring(0, 25) + \" ...\"\n      },\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"category\",\n      key: \"category\",\n      render: (category) => {\n        return (\n          <Tag color=\"green\">\n            {category === null ? \"No category\" : category.title}\n          </Tag>\n        )\n      },\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"user\",\n      key: \"created_by\",\n      render: (user) => {\n        return user === null ? \"Null\" : user.fullname\n      },\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      render: (created_at) => {\n        return moment.unix(created_at / 1000).format(\"YYYY-MM-DD\")\n      },\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n      render: (index, data) => {\n        const { id } = data\n        return (\n          <div>\n            <Link to={`/admin/post/edit/${id}`}>\n              <Tag className=\"btn\" color=\"#2db7f5\">\n                Edit\n              </Tag>\n            </Link>\n            <Divider type=\"vertical\" />\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this Post?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              onConfirm={() => {\n                deletePost({ variables: { id: `${id}` } })\n                  .then(async (res) => {\n                    await message.success(res.data.delete_post.message)\n                    await postRefetch()\n                  })\n                  .catch((error) => {\n                    console.log(error)\n                    return null\n                  })\n              }}\n            >\n              <Tag color=\"#f50\" className=\"btn\">\n                Delete\n              </Tag>\n            </Popconfirm>\n          </div>\n        )\n      },\n    },\n  ]\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_POSTS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.posts}\n            pagination={{\n              defaultCurrent: 1,\n              total: data.posts.length,\n              showTotal: (total, range) =>\n                `${range[0]}-${range[1]} of ${total} items`,\n              pageSize: 20,\n            }}\n          />\n        )\n      }\n      return (\n        <div>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All Posts</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllPosts\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport QuillTextEditor from \"../QuillTextEditor\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { GET_PAGES, GET_CATEGORIES } from \"../../graphql/query\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Upload,\n  Select,\n  Layout,\n  message,\n  InputNumber,\n} from \"antd\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_PAGE } from \"../../graphql/mutation\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction NewPage(props) {\n  const { getFieldDecorator } = props.form\n\n  const [createPage] = useMutation(CREATE_PAGE)\n\n  // ===== state management =====\n  const [image, setImage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const [desc, setDesc] = useState(\"\")\n\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const handleDescChange = (value) => {\n    setDesc(value)\n  }\n  const handleSubmit = () => {\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n        createPage({\n          variables: {\n            ...values,\n            description: desc === \"\" ? null : desc,\n            sectionNumber: values.sectionNumber.toString(),\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            handleDescChange(\"\")\n            props.form.resetFields()\n            pageRefetch()\n            await message.success(res.data.create_page.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      return (\n        <Form.Item label=\"Page\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n            initialValue: data.categories[0].title,\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {data.categories.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              {/* <h1 className=\"koompi-title-brand\">KOOMPI</h1> */}\n              <h1 className=\"title_new_post\">New Page</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <Row gutter={[24]}>\n                      <Col span={8}>\n                        <FormItem label=\"Language: \">\n                          {getFieldDecorator(\"lang\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Langauge is required\",\n                              },\n                            ],\n                            initialValue: \"en\",\n                          })(\n                            <Select\n                              placeholder=\"Please select the category\"\n                              size=\"large\"\n                            >\n                              <Option value=\"en\" key=\"en\">\n                                English\n                              </Option>\n                              <Option value=\"kh\" key=\"en\">\n                                Khmer\n                              </Option>\n                            </Select>\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={8}>\n                        <FormItem label=\"Title: \">\n                          {getFieldDecorator(\"title\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The title is required\",\n                              },\n                            ],\n                          })(<Input size=\"large\" />)}\n                        </FormItem>\n                      </Col>\n                      <Col span={8}>\n                        <FormItem label=\"SubTitle: \">\n                          {getFieldDecorator(\"subTitle\")(<Input size=\"large\" />)}\n                        </FormItem>\n                      </Col>\n                    </Row>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc}\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\n                              \"https://admin-demo.koompi.com/public/uploads/\" + `${image}`\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\",\n                            },\n                          ],\n                          initialValue: \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        {/* ======= Section Number ======= */}\n                        <FormItem label=\"Section Number: \">\n                          {getFieldDecorator(\"sectionNumber\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Section Number is required\",\n                              },\n                            ],\n                            initialValue: 1,\n                          })(\n                            <InputNumber\n                              min={1}\n                              size=\"large\"\n                              style={{ width: \"100%\" }}\n                            />\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={12}>\n                        {/* ======= Category Sections ======= */}\n                        <DisplayCategories />\n                      </Col>\n                    </Row>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewPage)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\nimport { v4 as uuidv4 } from \"uuid\"\n\n// ===== Query and Mutation Section =====\nimport { GET_PAGES } from \"../../graphql/query\"\nimport { DELETE_PAGE } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllPages() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deletePage] = useMutation(DELETE_PAGE)\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n\n  const columns = [\n    {\n      key: `${uuidv4()}`,\n      title: \"Image\",\n      dataIndex: \"image\",\n      render: (data) => {\n        return (\n          <img\n            src={\n              data === \"/public/uploads/\"\n                ? \"/images/Error-01.png\"\n                : \"https://admin-demo.koompi.com\" + data\n            }\n            alt=\"post\"\n            width=\"60px\"\n          />\n        )\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Title\",\n      dataIndex: \"title\",\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"SubTitle\",\n      dataIndex: \"subTitle\",\n      render: (data) => {\n        return data === null ? (\n          <Tag color=\"red\">N/A</Tag>\n        ) : (\n          <Tag color=\"green\">{data}</Tag>\n        )\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Lang\",\n      dataIndex: \"lang\",\n      sorter: (a, b) => {\n        return a.lang.lang.localeCompare(b.lang.lang)\n      },\n      render: (data) => {\n        return data.lang\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Page\",\n      dataIndex: \"category\",\n      sorter: (a, b) => a.category.title.length - b.category.title.length,\n      render: (data) => {\n        return data === null ? \"No category\" : data.title\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      render: (data) => {\n        return data\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      render: (data) => {\n        return moment.unix(data / 1000).format(\"DD, MMM YYYY\")\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Updated By\",\n      dataIndex: \"updated_by\",\n      render: (data) => {\n        return data === null ? \"No Update\" : data\n      },\n    },\n    {\n      key: `${uuidv4()}`,\n      title: \"Actions\",\n      dataIndex: \"action\",\n      render: (index, data) => {\n        // console.log(data)\n        const { id } = data\n        return (\n          <div>\n            <Link to={`/admin/page/edit/${id}`}>\n              <Tag className=\"btn\" color=\"#2db7f5\">\n                Edit\n              </Tag>\n            </Link>\n            <Divider type=\"vertical\" />\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this Page?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              onConfirm={() => {\n                deletePage({ variables: { id: `${id}` } })\n                  .then(async (res) => {\n                    await message.success(res.data.delete_page.message)\n                    await pageRefetch()\n                  })\n                  .catch((error) => {\n                    console.log(error)\n                    return null\n                  })\n              }}\n            >\n              <Tag color=\"#f50\" className=\"btn\">\n                Delete\n              </Tag>\n            </Popconfirm>\n          </div>\n        )\n      },\n    },\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_PAGES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <div>\n          <Table\n            rowKey={() => uuidv4()}\n            columns={columns}\n            dataSource={data.pages}\n            pagination={{\n              defaultCurrent: 1,\n              total: data.pages.length,\n              showTotal: (total, range) =>\n                `${range[0]}-${range[1]} of ${total} items`,\n              pageSize: 20,\n            }}\n          />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All Pages</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllPages\n","import React, { useContext } from \"react\"\nimport { Table, Tag, Layout, Popconfirm, message } from \"antd\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport PageFooter from \"./footer\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { UserContext } from \"../context/userContext\"\nimport { GET_USERS } from \"../graphql/query\"\nimport { APPROVE_USER, DELETE_USER, ISADMIN } from \"../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Users() {\n  const [approveUser] = useMutation(APPROVE_USER)\n  const [deleteUser] = useMutation(DELETE_USER)\n  const [makeAsAdmin] = useMutation(ISADMIN)\n  const userContext = useContext(UserContext)\n  const { isAdmin } = userContext.user\n\n  const columns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Admin\",\n      key: \"admin\",\n      dataIndex: \"admin\"\n    },\n    {\n      title: \"Approved\",\n      key: \"approved\",\n      dataIndex: \"approved\"\n    }\n  ]\n\n  const adminColumns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Admin\",\n      key: \"admin\",\n      dataIndex: \"admin\"\n    },\n    {\n      title: \"Approved\",\n      key: \"approved\",\n      dataIndex: \"approved\"\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const DisplayUserAdmin = () => {\n    const { error, loading, data, refetch } = useQuery(GET_USERS)\n    if (loading) {\n      return \"Loading ...\"\n    }\n    if (error) console.log(error)\n\n    if (data) {\n      refetch()\n      return (\n        <Table\n          dataSource={data.users.map((user, index) => {\n            const { id, fullname, email, isAdmin, approved } = user\n\n            return {\n              key: index,\n              fullname,\n              email,\n              admin: isAdmin ? (\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"Are you sure to make this user a normal user?\"\n                  onConfirm={() => {\n                    makeAsAdmin({\n                      variables: { id: `${id}`, isAdmin: false }\n                    })\n                    message.success(`${fullname} updated successfully `)\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"green\" key={id} style={{ cursor: \"pointer\" }}>\n                    Yes\n                  </Tag>\n                </Popconfirm>\n              ) : (\n                <Popconfirm\n                  placement=\"topRight\"\n                  title=\"Are you sure to approve this user as Admin?\"\n                  onConfirm={() => {\n                    makeAsAdmin({\n                      variables: { id: `${id}`, isAdmin: true }\n                    })\n\n                    message.success(\n                      `${fullname} has been aprroved as admin successfully `\n                    )\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"red\" key={id} style={{ cursor: \"pointer\" }}>\n                    No\n                  </Tag>\n                </Popconfirm>\n              ),\n              approved: approved ? (\n                <Popconfirm\n                  disabled={isAdmin ? true : false}\n                  placement=\"topRight\"\n                  title=\"Are you sure disable this user?\"\n                  onConfirm={() => {\n                    approveUser({\n                      variables: { id: `${id}`, approve: false }\n                    })\n                    message.success(`${fullname} is disable `)\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"green\" key={id} style={{ cursor: \"pointer\" }}>\n                    Approved\n                  </Tag>\n                </Popconfirm>\n              ) : (\n                <Popconfirm\n                  disabled={isAdmin ? true : false}\n                  placement=\"topRight\"\n                  title=\"Are you sure to approve this user?\"\n                  onConfirm={() => {\n                    approveUser({\n                      variables: { id: `${id}`, approve: true }\n                    })\n                    message.success(`${fullname} has been aprroved successfully `)\n                    refetch()\n                  }}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Tag color=\"orange\" key={id} style={{ cursor: \"pointer\" }}>\n                    Pending\n                  </Tag>\n                </Popconfirm>\n              ),\n              action: (\n                <div>\n                  <Popconfirm\n                    disabled={isAdmin ? true : false}\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this user?\"\n                    onConfirm={() => {\n                      deleteUser({ variables: { id: id } })\n                      message.success(`${fullname} Has been deleted `)\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n          columns={adminColumns}\n        />\n      )\n    }\n  }\n\n  const DisplayUser = () => {\n    const { error, loading, data } = useQuery(GET_USERS)\n    if (loading) {\n      return \"Loading ...\"\n    }\n    if (error) console.log(error)\n\n    if (data) {\n      return (\n        <Table\n          dataSource={data.users.map((user, index) => {\n            const { id, fullname, email, isAdmin, approved } = user\n\n            return {\n              key: index,\n              fullname,\n              email,\n              admin: isAdmin ? (\n                <Tag color=\"green\" key={id}>\n                  Yes\n                </Tag>\n              ) : (\n                <Tag color=\"red\" key={id}>\n                  No\n                </Tag>\n              ),\n              approved: approved ? (\n                <Tag color=\"green\" key={id}>\n                  Approved\n                </Tag>\n              ) : (\n                <Tag color=\"orange\" key={id}>\n                  Pending\n                </Tag>\n              )\n            }\n          })}\n          columns={columns}\n        />\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Users</h1>\n              {isAdmin ? <DisplayUserAdmin /> : <DisplayUser />}\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Users\n","import { useEffect } from \"react\"\nimport Cookie from \"js-cookie\"\nconst Logout = () => {\n  useEffect(() => {\n    Cookie.set(\"token\", \"\")\n    window.location.replace(\"/login\")\n  })\n  return null\n}\n\nexport default Logout\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\nimport slugify from \"slugify\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES } from \"../../graphql/query\"\nimport { CREATE_CATEGORY, DELETE_CATEGORY } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport {\n  Form,\n  Icon,\n  Input,\n  Button,\n  Row,\n  Col,\n  Layout,\n  message,\n  Table,\n  Divider,\n  Tag,\n  Popconfirm\n} from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Category(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== Mutation Varile Section =====\n  const [createCategory] = useMutation(CREATE_CATEGORY)\n  const [deleteCategory] = useMutation(DELETE_CATEGORY)\n  const { refetch: categoryRefetch } = useQuery(GET_CATEGORIES)\n\n  // ===== Display Column in the Table Section =====\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Slug\",\n      dataIndex: \"slug\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      sorter: (a, b) => a.created_by.length - b.created_by.length\n    },\n\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"Updated By\",\n      dataIndex: \"updated_by\"\n    },\n    {\n      title: \"Updated At\",\n      dataIndex: \"updated_at\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  // ===== Display Category Section =====\n  const DisplayCategory = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <Table\n          columns={columns}\n          dataSource={data.categories.map((cate) => {\n            return {\n              key: cate.id,\n              title: cate.title,\n              slug: cate.slug,\n              created_by: cate.created_by,\n              updated_by: cate.updated_by === \"\" ? \"No Update\" : cate.updated_by,\n              created_at: moment.unix(cate.created_at / 1000).format(\"YYYY-MM-DD\"),\n              updated_at:\n                cate.updated_at === null\n                  ? \"No Update\"\n                  : moment.unix(cate.updated_at / 1000).format(\"YYYY-MM-DD\"),\n              action: (\n                <div>\n                  <Link to={`/admin/category/edit/${cate.id}`}>\n                    <Tag className=\"btn\" color=\"#2db7f5\">\n                      Edit\n                    </Tag>\n                  </Link>\n                  <Divider type=\"vertical\" />\n\n                  <Popconfirm\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this category?\"\n                    onConfirm={() => {\n                      deleteCategory({ variables: { id: `${cate.id}` } })\n                      message.success(\"The Category has been Deleted\")\n                      categoryRefetch()\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n        />\n      )\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createCategory({\n          variables: { ...values, slug: slugify(values.title, { lower: true }) }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            categoryRefetch()\n            props.form.resetFields()\n            await message.success(\"The Category created successfully.\", 3)\n          })\n          .catch((error) => {\n            message.error(error.graphQLErrors[0].message, 5)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Category</h1>\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col span={4} style={{ display: \"none\" }}>\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n                  <Col\n                    span={24}\n                    style={{ marginTop: \"-10px\", marginBottom: \"10px\" }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"btnSubmit\"\n                      disabled={loading ? true : false}\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n              <br />\n              <h1 className=\"title_new_post\">Categories</h1>\n              <DisplayCategory />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Category)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\nimport slugify from \"slugify\"\n\n// ===== Query Section =====\nimport { EDIT_CATEGORY } from \"../../graphql/query\"\n\n// ===== Mutation Section =====\nimport { UPDATE_CATEGORY } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport { Form, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditCategory(props) {\n  const { getFieldDecorator } = props.form\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const userData = useContext(UserContext)\n  const [updateCategory] = useMutation(UPDATE_CATEGORY)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updateCategory({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true })\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(\"The Category update successfully.\", 3)\n            await props.history.push(\"/admin/categories\")\n          })\n          .catch((error) => {\n            message.error(error)\n          })\n      }\n    })\n  }\n\n  const { loading: edit_category_loading, data: edit_category_data } = useQuery(\n    EDIT_CATEGORY,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">\n                {edit_category_loading\n                  ? \"loading ...\"\n                  : `Update ${edit_category_data.category.title}`}\n              </h1>\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[16, 16]}>\n                  <Col span={16}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        initialValue: edit_category_loading\n                          ? \"loading ...\"\n                          : edit_category_data.category.title\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: new Date().toISOString()\n                      })(<Input style={{ display: \"none\" }} size=\"large\" />)}\n                    </FormItem>\n                  </Col>\n                  <Col span={4}>\n                    <FormItem>\n                      {getFieldDecorator(\"updated_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" disabled />)}\n                    </FormItem>\n                  </Col>\n                  <Col span={4}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      size=\"large\"\n                      className=\"btnSubmit\"\n                      disabled={loading ? true : false}\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Update\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditCategory)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_CATEGORIES, GET_POST, GET_POSTS } from \"../../graphql/query\"\nimport { UPDATE_POST } from \"../../graphql/mutation\"\nimport _ from \"lodash\"\nimport QuillTextEditor from \"../QuillTextEditor\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction EditPost(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: postLoading, data: postData } = useQuery(GET_POST, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n  const [desc, setDesc] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n\n  const handleDescChange = (value) => {\n    console.log(value)\n    setDesc(value)\n  }\n\n  const { refetch: postRefetch } = useQuery(GET_POSTS)\n  const [updatePost] = useMutation(UPDATE_POST)\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n\n    const filtered_pages = _.filter(data.categories, function (p) {\n      return _.includes([\"news\", \"events\"], p.slug)\n    })\n    return (\n      <Form.Item label=\"Categories\">\n        {getFieldDecorator(\"category\", {\n          rules: [\n            {\n              required: true,\n              message: \"Please select your category!\",\n            },\n          ],\n          initialValue: postData.post.category.title,\n        })(\n          <Select placeholder=\"Please select the category\" size=\"large\">\n            {filtered_pages.map((cate) => {\n              return (\n                <Option value={cate.title} key={cate.id}>\n                  {cate.title}\n                </Option>\n              )\n            })}\n          </Select>\n        )}\n      </Form.Item>\n    )\n  }\n\n  const handleSubmit = () => {\n    props.form.validateFieldsAndScroll((err, values) => {\n      console.log(slugify(values.title, { lower: true }))\n\n      if (!err) {\n        updatePost({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: desc === \"\" ? postData.post.description : desc,\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            postRefetch()\n            await message.success(res.data.update_post.message, 3)\n            await props.history.push(\"/admin/all-posts\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  // const handleSubmit = async e => {\n  //   e.preventDefault();\n  //   props.form.validateFieldsAndScroll((err, values) => {\n  //     if (!err) {\n  //       console.log(values);\n\n  //       updatePost({\n  //         variables: {\n  //           id: window.location.pathname.split(\"/\")[4],\n  //           ...values\n  //         }\n  //       })\n  //         .then(async () => {\n  //           setLoading(true);\n  //           setTimeout(() => {\n  //             setLoading(false);\n  //           }, 3000);\n  //           postRefetch();\n  //           await message.success(\"Post updated successfully.\", 3);\n  //           await props.history.push(\"/admin/all-posts\");\n  //         })\n  //         .catch(error => {\n  //           console.log(error);\n  //         });\n  //     }\n  //   });\n  // };\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  console.log(\"Result\", postData.post.description)\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Post</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                        initialValue: postData.post.title,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: new Date().toISOString(),\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc === \"\" ? postData.post.description : desc}\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Thumnail\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin-demo.koompi.com\" + postData.post.thumnail\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin-demo.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"thumnail\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? postData.post.thumnail\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    {/* ======= Category Sections ======= */}\n                    <DisplayCategories />\n\n                    {/* ======= Tags ======= */}\n                    <FormItem label=\"Tags\">\n                      {getFieldDecorator(\"tags\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The tags is required\",\n                          },\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.tags,\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.keywords,\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                        initialValue: postLoading ? \"\" : postData.post.meta_desc,\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={handleSubmit}\n                        // disabled=\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditPost)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_PAGE, GET_PAGES, GET_CATEGORIES } from \"../../graphql/query\"\nimport { UPDATE_PAGE } from \"../../graphql/mutation\"\nimport QuillTextEditor from \"../QuillTextEditor\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Upload,\n  Select,\n  Layout,\n  message,\n  InputNumber,\n} from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { TextArea } = Input\nconst { Option } = Select\n\nconst children = []\n\nfunction EditPage(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: pageLoading, data: pageData } = useQuery(GET_PAGE, {\n    variables: { id: window.location.pathname.split(\"/\")[4] },\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n  const [desc, setDesc] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: pageRefetch } = useQuery(GET_PAGES)\n  const [updatePage] = useMutation(UPDATE_PAGE)\n\n  const handleDescChange = (value) => {\n    console.log(value)\n    setDesc(value)\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = () =>\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updatePage({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            description: desc === \"\" ? pageData.page.description : desc,\n            sectionNumber: values.sectionNumber.toString(),\n          },\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.update_page.message, 3)\n            await pageRefetch()\n            await props.history.push(\"/admin/all-pages\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n\n  // ===== Handle Image Upload =====\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n  }\n\n  const DisplayCategories = () => {\n    const { error, loading, data } = useQuery(GET_CATEGORIES)\n    if (error) console.log(error)\n    if (loading) return \"Loading ...\"\n    if (data.categories.length === 0) {\n      message.error(\"Please create a category.\", 5)\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n          })(<Select placeholder=\"No Category\"></Select>)}\n        </Form.Item>\n      )\n    } else {\n      return (\n        <Form.Item label=\"Categories\">\n          {getFieldDecorator(\"category\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please select your category!\",\n              },\n            ],\n            initialValue: pageData.page.category.title,\n          })(\n            <Select placeholder=\"Please select the category\" size=\"large\">\n              {data.categories.map((cate) => {\n                return (\n                  <Option value={cate.title} key={cate.id}>\n                    {cate.title}\n                  </Option>\n                )\n              })}\n            </Select>\n          )}\n        </Form.Item>\n      )\n    }\n  }\n\n  if (pageLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Page</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\",\n                          },\n                        ],\n                        initialValue: pageData.page.title,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"SubTitle\">\n                      {getFieldDecorator(\"subTitle\", {\n                        initialValue: pageData.page.subTitle,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: userData.user.fullname,\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\",\n                          },\n                        ],\n                        initialValue: new Date().toISOString(),\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      <QuillTextEditor\n                        handleDescChange={handleDescChange}\n                        defaultValue={desc === \"\" ? pageData.page.description : desc}\n                      />\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        // disabled=\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\n                              \"https://admin-demo.koompi.com\" + pageData.page.image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\n                              \"https://admin-demo.koompi.com/public/uploads/\" + image\n                            }`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Imae is required\",\n                            },\n                          ],\n                          initialValue:\n                            image === null\n                              ? pageData.page.image\n                              : \"/public/uploads/\" + image,\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        {/* ======= Section Number ======= */}\n                        <FormItem label=\"Section Number: \">\n                          {getFieldDecorator(\"sectionNumber\", {\n                            rules: [\n                              {\n                                required: true,\n                                message: \"The Section Number is required\",\n                              },\n                            ],\n                            initialValue: pageData.page.sectionNumber,\n                          })(\n                            <InputNumber\n                              min={1}\n                              size=\"large\"\n                              style={{ width: \"100%\" }}\n                            />\n                          )}\n                        </FormItem>\n                      </Col>\n                      <Col span={12}>\n                        {/* ======= Category Sections ======= */}\n                        <DisplayCategories />\n                      </Col>\n                    </Row>\n\n                    {/* ======= SEO and Keywords ======= */}\n                    <FormItem label=\"SEO or Keywords\">\n                      {getFieldDecorator(\"keywords\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The keywords is required\",\n                          },\n                        ],\n                        initialValue: pageLoading ? \"\" : pageData.page.keywords,\n                      })(\n                        <Select mode=\"tags\" style={{ width: \"100%\" }} size=\"large\">\n                          {children}\n                        </Select>\n                      )}\n                    </FormItem>\n\n                    {/* ======= Post Description ======= */}\n                    <FormItem label=\"Meta Description: \">\n                      {getFieldDecorator(\"meta_desc\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The Meta Description is required\",\n                          },\n                        ],\n                        initialValue: pageLoading ? \"\" : pageData.page.meta_desc,\n                      })(<TextArea rows={4} />)}\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditPage)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_MEMBER } from \"../../graphql/mutation\"\nimport { GET_MEMBERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\n\nfunction NewMember(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n  const [createMember] = useMutation(CREATE_MEMBER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createMember({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            memberRefetch()\n            props.form.resetFields()\n            await message.success(res.data.add_member.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The fullname is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Department\">\n                      {getFieldDecorator(\"department\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Please select member department!\"\n                          }\n                        ],\n                        initialValue: \"software-team\"\n                      })(\n                        <Select size=\"large\">\n                          <Option value=\"business-development\">\n                            Business Development\n                          </Option>\n                          <Option value=\"hardware-team\">KOOMPI Hardware Team</Option>\n                          <Option value=\"academy\">KOOMPI ACADEMY</Option>\n                          <Option value=\"sales-and-supplier-relation\">\n                            Sales and Supplier Relation\n                          </Option>\n                          <Option value=\"communication-and-marketing\">\n                            Communication and Marketing\n                          </Option>\n                          <Option value=\"software-team\">Software Teams</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Postion: \">\n                      {getFieldDecorator(\"position\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Position is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number: \">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Phone Number is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email: \">\n                      {getFieldDecorator(\"email\", {\n                        rules: [\n                          {\n                            type: \"email\",\n                            message: \"The input is not valid E-mail!\"\n                          },\n                          {\n                            required: true,\n                            message: \"Email is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"photo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Photo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewMember)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_MEMBERS } from \"../../graphql/query\"\nimport { DELETE_MEMBER } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Members() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteMember] = useMutation(DELETE_MEMBER)\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n\n  const columns = [\n    {\n      title: \"Photo\",\n      dataIndex: \"photo\"\n    },\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\"\n    },\n    {\n      title: \"Department\",\n      dataIndex: \"department\",\n      key: \"department\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_MEMBERS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.members.map((member) => {\n              const {\n                id,\n                fullname,\n                phoneNumber,\n                email,\n                created_by,\n                photo,\n                department,\n                created_at\n              } = member\n              return {\n                key: id,\n                photo: (\n                  <img\n                    src={`https://admin-demo.koompi.com${photo}`}\n                    alt=\"post\"\n                    height=\"50px\"\n                    width=\"50px\"\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ),\n                fullname,\n                department,\n                email,\n                phoneNumber,\n\n                created_by: created_by,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/member/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this member?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteMember({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_member.message)\n                            await memberRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Members</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Members\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_MEMBERS, GET_MEMBER } from \"../../graphql/query\"\nimport { UPDATE_MEMBER } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Select, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\nconst { Option } = Select\n\nfunction EditMember(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: postLoading, data: memberData } = useQuery(GET_MEMBER, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  const { refetch: memberRefetch } = useQuery(GET_MEMBERS)\n  const [updateMember] = useMutation(UPDATE_MEMBER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateMember({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            memberRefetch()\n            await message.success(res.data.update_member.message)\n            await props.history.push(\"/admin/members\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The fullname is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    {/* ======= Deparment Sections ======= */}\n                    <Form.Item label=\"Department\">\n                      {getFieldDecorator(\"department\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Please select member department!\"\n                          }\n                        ],\n                        initialValue: memberData.member.department\n                      })(\n                        <Select>\n                          <Option value=\"business-development\">\n                            Business Development\n                          </Option>\n                          <Option value=\"hardware-team\">KOOMPI Hardware Team</Option>\n                          <Option value=\"academy\">KOOMPI ACADEMY</Option>\n                          <Option value=\"sales-and-supplier-relation\">\n                            Sales and Supplier Relation\n                          </Option>\n                          <Option value=\"communication-and-marketing\">\n                            Communication and Marketing\n                          </Option>\n                          <Option value=\"software-team\">Software Teams</Option>\n                        </Select>\n                      )}\n                    </Form.Item>\n\n                    <FormItem label=\"Postion: \">\n                      {getFieldDecorator(\"position\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Position is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.position\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number: \">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Phone Number is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.phoneNumber\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email: \">\n                      {getFieldDecorator(\"email\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Email is required\"\n                          }\n                        ],\n                        initialValue: memberData.member.email\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com\" +\n                              memberData.member.photo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"250px\", height: \"250px\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"photo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Thumnail is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? memberData.member.photo\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditMember)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_RETAILER } from \"../../graphql/mutation\"\nimport { GET_RETAILERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction NewRetailer(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchRetailer } = useQuery(GET_RETAILERS)\n  const [createRetailer] = useMutation(CREATE_RETAILER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        createRetailer({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            refetchRetailer()\n            props.form.resetFields()\n            await message.success(res.data.add_retailer.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">New Retailer</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Email\">\n                      {getFieldDecorator(\"email\", {})(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number\">\n                      {getFieldDecorator(\"phoneNumber\", {})(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link Location: \">\n                      {getFieldDecorator(\"location\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link Location is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"logo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewRetailer)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_RETAILERS } from \"../../graphql/query\"\nimport { DELETE_RETAILER } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Retailers() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteRetailer] = useMutation(DELETE_RETAILER)\n  const { refetch: retailerRefetch } = useQuery(GET_RETAILERS)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\"\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phoneNumber\",\n      key: \"phoneNumber\"\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_RETAILERS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.retailers.map((retailer) => {\n              const {\n                id,\n                name,\n                phoneNumber,\n                email,\n                created_by,\n                logo,\n                created_at\n              } = retailer\n              return {\n                key: parse(name),\n                logo: (\n                  <img\n                    src={`https://admin-demo.koompi.com${logo}`}\n                    alt={name}\n                    height=\"30px\"\n                    width=\"auto\"\n                  />\n                ),\n                name,\n                email: email === null ? \"Null\" : email,\n                phoneNumber: phoneNumber === null ? \"Null\" : phoneNumber,\n\n                created_by: created_by,\n                created_at: moment\n                  .unix(created_at / 1000)\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/retailer/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this retailer?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteRetailer({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_retailer.message)\n                            await retailerRefetch()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Retailers</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Retailers\n","import React, { useState } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_RETAILERS, GET_RETAILER } from \"../../graphql/query\"\nimport { UPDATE_RETAILER } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditRetailer(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: postLoading, data: retailerData } = useQuery(GET_RETAILER, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  const { refetch: refechRetailer } = useQuery(GET_RETAILERS)\n  const [updateRetailer] = useMutation(UPDATE_RETAILER)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateRetailer({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            await message.success(res.data.update_retailer.message, 3)\n            refechRetailer()\n            await props.history.push(\"/admin/retailers\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (postLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Retailer</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ],\n                        initialValue: retailerData.retailer.name\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n                    <FormItem label=\"Email\">\n                      {getFieldDecorator(\"email\", {\n                        initialValue: retailerData.retailer.email\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Phone Number\">\n                      {getFieldDecorator(\"phoneNumber\", {\n                        initialValue: retailerData.retailer.phoneNumber\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link Location: \">\n                      {getFieldDecorator(\"location\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link Location is required\"\n                          }\n                        ],\n                        initialValue: retailerData.retailer.location\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com\" +\n                              retailerData.retailer.logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? retailerData.retailer.logo\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditRetailer)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { CREATE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\nimport { GET_RETAILERS } from \"../../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction NewSocialMedia(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchRetailer } = useQuery(GET_RETAILERS)\n  const [addSocailMedia] = useMutation(CREATE_SOCIAL_MEDIA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        addSocailMedia({ variables: { ...values } })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.add_social_media.message, 3)\n            await refetchRetailer()\n            await props.form.resetFields()\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Social Media</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link: \">\n                      {getFieldDecorator(\"link\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"logo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(NewSocialMedia)\n","import React, { useState } from \"react\"\nimport { Layout, message, Table, Divider, Modal, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport parse from \"html-react-parser\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOCIAL_MEDIA } from \"../../graphql/query\"\nimport { DELETE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction SocialMedia() {\n  // ===== State Management =====\n  const [visible, setVisible] = useState(false)\n\n  // ===== Mutation Varile Section =====\n  const [deleteSocialMedia] = useMutation(DELETE_SOCIAL_MEDIA)\n  const { refetch: refetchSocialMedia } = useQuery(GET_SOCIAL_MEDIA)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\"\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\"\n    },\n    {\n      title: \"Link\",\n      dataIndex: \"link\",\n      key: \"link\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const hideModal = () => {\n    setVisible(false)\n  }\n\n  const DisplaySocailMedia = () => {\n    const { error, loading, data, refetch } = useQuery(GET_SOCIAL_MEDIA)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      refetch()\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.socialMedia.map((socialMedia) => {\n              const { id, name, created_by, link, logo, created_at } = socialMedia\n              return {\n                key: parse(name),\n                logo: (\n                  <img\n                    src={`https://admin-demo.koompi.com${logo}`}\n                    alt={name}\n                    height=\"40px\"\n                    width=\"40px\"\n                  />\n                ),\n                name,\n                link,\n                created_by,\n                created_at: moment\n                  .unix(created_at / 1000)\n                  .format(\"YYYY-MM-DD HH:mm:ss\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/social-media/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title={`Are you sure to delete ${name}?`}\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteSocialMedia({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(\n                              res.data.delete_social_media.message\n                            )\n                            await refetchSocialMedia()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={visible ? false : true}\n          />\n        )\n      }\n      return (\n        <div>\n          <Modal\n            title={\"Details Informtion\"}\n            visible={visible}\n            onOk={hideModal}\n            onCancel={hideModal}\n            footer={null}\n            width=\"98%\"\n          >\n            <DisplayTable />\n          </Modal>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Social Media</h1>\n              <DisplaySocailMedia />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default SocialMedia\n","import React, { useState } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_SOCIAL_MEDIA, GET_ONE_SOCIAL_MEDIA } from \"../../graphql/query\"\nimport { UPDATE_SOCIAL_MEDIA } from \"../../graphql/mutation\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditSocialMedia(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  //   ===== Global Data =====\n  const { loading: socialMediaLoading, data: socialMediaData } = useQuery(\n    GET_ONE_SOCIAL_MEDIA,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  const { refetch: refechSocialMedia } = useQuery(GET_SOCIAL_MEDIA)\n  const [updateSocialMedia] = useMutation(UPDATE_SOCIAL_MEDIA)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values)\n\n        updateSocialMedia({\n          variables: { id: window.location.pathname.split(\"/\")[4], ...values }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n\n            await message.success(res.data.update_social_media.message, 3)\n            await props.form.resetFields()\n            await refechSocialMedia()\n            await props.history.push(\"/admin/social-media\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (socialMediaLoading) {\n    return \"Loading...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Member</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"name\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The name is required\"\n                          }\n                        ],\n                        initialValue: socialMediaData.oneSocialMedia.name\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Link: \">\n                      {getFieldDecorator(\"link\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Link is required\"\n                          }\n                        ],\n                        initialValue: socialMediaData.oneSocialMedia.link\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com\" +\n                              socialMediaData.oneSocialMedia.logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? socialMediaData.oneSocialMedia.logo\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditSocialMedia)\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport \"react-quill/dist/quill.snow.css\" // ES6\nimport LeftNavbar from \"./navbar/left-navbar\"\nimport TopNavbar from \"./navbar/top-navbar\"\nimport PageFooter from \"./footer\"\nimport { UserContext } from \"../context/userContext\"\nimport three_dots from \"../assets/img/three-dots.svg\"\n\n// ===== Query and Mutation Section =====\nimport { UPDATE_USER } from \"../graphql/mutation\"\nimport { GET_USER } from \"../graphql/query\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Settings(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  //   ===== Global Data =====\n  const { loading: userLoading, data: userQuery, refetch } = useQuery(GET_USER, {\n    variables: { email: userData.user.email }\n  })\n\n  const [updateUser] = useMutation(UPDATE_USER)\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [image, setImage] = useState(null)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        const { fullname, avatar, oldPassword, newPassword } = values\n\n        updateUser({\n          variables: {\n            email: userQuery.user.email,\n            fullname,\n            avatar,\n            oldPassword,\n            newPassword\n          }\n        })\n          .then(async () => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            refetch()\n            await message.success(\"User updated successfully.\", 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  if (userLoading) {\n    return \"Loading ...\"\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">User Settings</h1>\n\n              <Form className=\"login-form\" onSubmit={handleSubmit}>\n                <Row gutter={[24, 8]}>\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Photo\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com\" +\n                              userQuery.user.avatar}`}\n                            alt=\"avatar\"\n                            style={{ height: \"133.5px\", width: \"133.5px\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ height: \"133.5px\", width: \"133.5px\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"avatar\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Avatar is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? userQuery.user.avatar\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Full Name\">\n                      {getFieldDecorator(\"fullname\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"FullName is required\"\n                          }\n                        ],\n                        initialValue: userQuery.user.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <div>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Col span={16}>\n                    <FormItem label=\"Old Password\">\n                      {getFieldDecorator(\"oldPassword\")(\n                        <Input size=\"large\" type=\"password\" />\n                      )}\n                    </FormItem>\n\n                    <FormItem label=\"New Password\">\n                      {getFieldDecorator(\"newPassword\")(\n                        <Input size=\"large\" type=\"password\" />\n                      )}\n                    </FormItem>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Settings)\n","import React, { useState } from \"react\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\n\nfunction HandleVerify(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleVerify = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post(\n            `https://bot.koompi.com/telegramlogin?phone=${\n              values.phone\n            }&code=${parseInt(values.code)}`\n          )\n          .then(async (res) => {\n            message.success(res.data.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Form className=\"login-form\" onSubmit={handleVerify}>\n      <h4>Verify Code telegram</h4>\n      <Row gutter={12}>\n        <Col span={18}>\n          <FormItem>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Phone Number is required\",\n                },\n              ],\n              initialValue: props.phone,\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Phone Number\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={6}>\n          <FormItem>\n            {getFieldDecorator(\"code\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Code is required\",\n                },\n              ],\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Code\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            className=\"btnSubmit\"\n            disabled={loading ? true : false}\n          >\n            {loading ? (\n              <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default Form.create()(HandleVerify)\n","import React, { useState } from \"react\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport TextArea from \"antd/lib/input/TextArea\"\nimport axios from \"axios\"\nimport \"react-mde/lib/styles/css/react-mde-all.css\"\n\nconst FormItem = Form.Item\n\nfunction HandleMessage(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleMessage = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      console.log(err)\n\n      if (!err) {\n        console.log(values)\n\n        axios\n          .post(\n            `https://bot.koompi.com/telegrammsg?phone=${values.phone}&channel=${values.channel}&msg=${values.msg}`\n          )\n          .then(async (res) => {\n            message.success(res.data.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <div style={{ marginBottom: \"24px\" }}>\n      <h4>Send a telegram</h4>\n      <Form className=\"login-form\" onSubmit={handleMessage}>\n        <Row gutter={12}>\n          <Col span={12}>\n            <FormItem>\n              {getFieldDecorator(\"phone\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The Phone Number is required\",\n                  },\n                ],\n                initialValue: props.phone,\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                  placeholder=\"Phone Number\"\n                />\n              )}\n            </FormItem>\n          </Col>\n\n          <Col span={12}>\n            <FormItem>\n              {getFieldDecorator(\"channel\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The Channel is required\",\n                  },\n                ],\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  size=\"large\"\n                  placeholder=\"Channel\"\n                />\n              )}\n            </FormItem>\n          </Col>\n          <Col span={24}>\n            <FormItem>\n              {getFieldDecorator(\"msg\", {\n                rules: [\n                  {\n                    required: true,\n                    message: \"The message is required\",\n                  },\n                ],\n              })(<TextArea rows={5}></TextArea>)}\n            </FormItem>\n          </Col>\n\n          <Col span={24}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              size=\"large\"\n              className=\"btnSubmit\"\n              disabled={loading ? true : false}\n            >\n              {loading ? (\n                <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n              ) : (\n                \"Submit\"\n              )}\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  )\n}\n\nexport default Form.create()(HandleMessage)\n","import React, { useState } from \"react\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, message } from \"antd\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\n\nfunction TelegramLogout(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n\n  const handleVerify = (e) => {\n    e.preventDefault()\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        axios\n          .post(`https://bot.koompi.com/telegramlogout?phone=${values.phone}`)\n          .then(async (res) => {\n            message.success(res.data.message)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n  }\n\n  return (\n    <Form className=\"login-form\" onSubmit={handleVerify}>\n      <h4>Logout</h4>\n      <Row gutter={12}>\n        <Col span={18}>\n          <FormItem>\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"The Phone Number is required\",\n                },\n              ],\n              initialValue: props.phone,\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"font-size\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                size=\"large\"\n                placeholder=\"Phone Number\"\n              />\n            )}\n          </FormItem>\n        </Col>\n\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            className=\"btnSubmit\"\n            disabled={loading ? true : false}\n          >\n            {loading ? (\n              <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  )\n}\n\nexport default Form.create()(TelegramLogout)\n","import React, { useState } from \"react\"\n\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\nimport HandleVerify from \"./handle-verify\"\nimport HandleMessage from \"./handle-message\"\nimport TelegramLogout from \"./logout\"\nimport axios from \"axios\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction TelegramBot(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading] = useState(false)\n  const [phone, setPhone] = useState(\"\")\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    axios\n      .post(`https://bot.koompi.com/sendrequest?phone=${phone}`)\n      .then(async (res) => {\n        message.success(res.data.message)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const handleChange = (e) => {\n    setPhone(e.target.value)\n  }\n\n  console.log(phone)\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\" style={{ width: \"60%\" }}>\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Telegram Bot</h1>\n              <div style={{ marginBottom: \"24px\" }}>\n                <h4>Login telegram</h4>\n                <Form className=\"login-form\" onSubmit={handleSubmit}>\n                  <Row gutter={24}>\n                    <Col span={24}>\n                      <FormItem>\n                        {getFieldDecorator(\"phone\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"The Phone Number is required\",\n                            },\n                          ],\n                        })(\n                          <Input\n                            prefix={\n                              <Icon\n                                type=\"font-size\"\n                                style={{ color: \"rgba(0,0,0,.25)\" }}\n                              />\n                            }\n                            size=\"large\"\n                            placeholder=\"Phone Number\"\n                            onChange={handleChange}\n                          />\n                        )}\n                      </FormItem>\n                    </Col>\n                    <Col span={24}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </div>\n              <div style={{ marginBottom: \"24px\" }}>\n                <HandleVerify phone={phone} />\n              </div>\n              <div style={{ marginBottom: \"24px\" }}>\n                <HandleMessage phone={phone} />\n              </div>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(TelegramBot)\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nimport { CREATE_LEGAL } from \"../../graphql/mutation\"\nimport { GET_LEGALS } from \"../../graphql/query\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction Legal(props) {\n  const { getFieldDecorator } = props.form\n  const [createLegal] = useMutation(CREATE_LEGAL)\n  const { refetch: refetchLegal } = useQuery(GET_LEGALS)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [description] = useState(\"\")\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createLegal({\n          variables: {\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            props.form.resetFields()\n            await message.success(res.data.create_legal.message, 3)\n            await refetchLegal()\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legal</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      {getFieldDecorator(\"description\", {\n                        initialValue: description\n                      })(\n                        <div>\n                          <EditorJs\n                            instanceRef={(instance) =>\n                              (editorJsRef.current = instance)\n                            }\n                            tools={EDITOR_JS_TOOLS}\n                            placeholder=\"Let's write an awesome story!\"\n                          />\n                        </div>\n                      )}\n                    </FormItem>\n\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                      onClick={handleSubmit}\n                      // disabled=\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Submit\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Legal)\n","import React from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_LEGALS } from \"../../graphql/query\"\nimport { DELETE_LEGAL } from \"../../graphql/mutation\"\n\n// ===== Antd Section =====\nimport { Form, Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\n\nconst { Content } = Layout\n\nfunction Legals() {\n  // ===== Mutation Varile Section =====\n  const [deleteLegal] = useMutation(DELETE_LEGAL)\n  const { refetch: legalRefetch } = useQuery(GET_LEGALS)\n\n  // ===== Display Column in the Table Section =====\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      onFilter: (value, record) => record.title.indexOf(value) === 0,\n      sorter: (a, b) => a.title.length - b.title.length\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      sorter: (a, b) => a.created_by.length - b.created_by.length\n    },\n\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  // ===== Display Category Section =====\n  const DisplayLegals = () => {\n    const { error, loading, data } = useQuery(GET_LEGALS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <Table\n          columns={columns}\n          dataSource={data.legals.map((data) => {\n            return {\n              key: data.id,\n              title: data.title,\n              created_by: data.created_by,\n              created_at: moment.unix(data.created_at / 1000).format(\"YYYY-MM-DD\"),\n              action: (\n                <div>\n                  <Link to={`/admin/legal/edit/${data.id}`}>\n                    <Tag className=\"btn\" color=\"#2db7f5\">\n                      Edit\n                    </Tag>\n                  </Link>\n                  <Divider type=\"vertical\" />\n\n                  <Popconfirm\n                    placement=\"topRight\"\n                    title=\"Are you sure to delete this legal?\"\n                    onConfirm={(res) => {\n                      deleteLegal({ variables: { id: `${data.id}` } })\n                        .then(async (res) => {\n                          await message.success(res.data.delete_legal.message)\n                          await legalRefetch()\n                        })\n                        .catch((error) => {\n                          console.log(error)\n                          return null\n                        })\n                    }}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    <Tag color=\"#f50\" className=\"btn\">\n                      Delete\n                    </Tag>\n                  </Popconfirm>\n                </div>\n              )\n            }\n          })}\n        />\n      )\n    }\n  }\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legals</h1>\n              <DisplayLegals />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(Legals)\n","import React, { useState, useContext } from \"react\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Antd Section =====\nimport { Form, Icon, Input, Button, Row, Col, Layout, message } from \"antd\"\n\nimport { UPDATE_LEGAL } from \"../../graphql/mutation\"\n// ===== Query Section =====\nimport { GET_LEGAL } from \"../../graphql/query\"\nimport { GET_LEGALS } from \"../../graphql/query\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditLegal(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch: refetchLegal } = useQuery(GET_LEGALS)\n\n  const { error: errorLegal, loading: dataLoading, data: legalData } = useQuery(\n    GET_LEGAL,\n    {\n      variables: { id: window.location.pathname.split(\"/\")[4] }\n    }\n  )\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        updateLegal({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.edit_legal.message, 3)\n            await refetchLegal()\n            await props.history.push(\"/admin/all-legals\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const [updateLegal] = useMutation(UPDATE_LEGAL)\n\n  if (errorLegal) console.log(errorLegal)\n  if (dataLoading) return \"Loading ...\"\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Legal</h1>\n              <Form className=\"login-form\">\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <FormItem>\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: legalData.legal.title\n                      })(\n                        <Input\n                          prefix={\n                            <Icon\n                              type=\"font-size\"\n                              style={{ color: \"rgba(0,0,0,.25)\" }}\n                            />\n                          }\n                          size=\"large\"\n                          placeholder=\"Title\"\n                        />\n                      )}\n                    </FormItem>\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          dataLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(legalData.legal.description)\n                        }\n                      />\n                    </FormItem>\n\n                    <FormItem>\n                      {getFieldDecorator(\"created_by\", {\n                        initialValue: userData.user.fullname,\n                        rules: [\n                          {\n                            required: true,\n                            message: \"User name  is required\"\n                          }\n                        ]\n                      })(\n                        <Input\n                          prefix={\n                            <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                          }\n                          size=\"large\"\n                          disabled\n                        />\n                      )}\n                    </FormItem>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                      onClick={handleSubmit}\n                      // disabled=\n                    >\n                      {loading ? (\n                        <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                      ) : (\n                        \"Update\"\n                      )}\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditLegal)\n","import React, { Fragment, useState } from \"react\"\nimport { Layout, message, Table, Tag, Popconfirm, Badge, Modal } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\n// ===== Query and Mutation Section =====\nimport { GET_CUSTOMERS, GET_PRODUCT } from \"../../graphql/query\"\nimport { DELETE_CUSTOMER } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\nconst { Column, ColumnGroup } = Table\n\nfunction currencyFormat(num) {\n  return \"$\" + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n}\n\nfunction Payment() {\n  const [productData, setProductData] = React.useState(null)\n  // ===== Mutation Varile Section =====\n  const [deleteCustomer] = useMutation(DELETE_CUSTOMER)\n  const { refetch: paymentRefetch } = useQuery(GET_CUSTOMERS)\n  const [state, setState] = useState({ visible: false })\n\n  const showModal = () => {\n    setState({\n      visible: true,\n    })\n  }\n\n  const handleOk = (e) => {\n    console.log(e)\n    setState({\n      visible: false,\n    })\n  }\n\n  const handleCancel = (e) => {\n    console.log(e)\n    setState({\n      visible: false,\n    })\n  }\n\n  const ProductInfo = () => {\n    const { error, loading, data } = useQuery(GET_PRODUCT, {\n      variables: { id: \"5eb3ab2d16100b46720b3a45\" },\n    })\n    if (error) console.log(error)\n    if (loading) {\n      return \"loading ...\"\n    }\n    if (data) {\n      setProductData(data)\n      return null\n    }\n    return null\n  }\n\n  const columns = [\n    {\n      title: \"User Info\",\n      children: [\n        {\n          title: \"Full Name\",\n          render: (data) => {\n            const { firstname, lastname } = data\n            return `${firstname} ${lastname}`\n          },\n        },\n        {\n          title: \"Email\",\n          dataIndex: \"email\",\n        },\n        {\n          title: \"Phone\",\n          dataIndex: \"phone\",\n        },\n      ],\n    },\n\n    {\n      title: \"Product\",\n      children: [\n        {\n          title: \"Items\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => <div>{res.name}</div>)\n          },\n        },\n        {\n          title: \"Qty\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => <div>{res.qty}</div>)\n          },\n        },\n        {\n          title: \"Price\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => <div>{currencyFormat(res.price)}</div>)\n          },\n        },\n        {\n          title: \"Total\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => (\n              <div>{currencyFormat(res.price * res.qty)}</div>\n            ))\n          },\n        },\n\n        {\n          title: \"Deposit\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => <div>{currencyFormat(res.deposit)}</div>)\n          },\n        },\n        {\n          title: \"Total Deposit\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => (\n              <div>{currencyFormat(res.deposit * res.qty)}</div>\n            ))\n          },\n        },\n        {\n          title: \"Remain\",\n          render: (data) => {\n            const result = JSON.parse(data.products)\n            return result.map((res) => (\n              <div>\n                <Tag color=\"red\">\n                  {currencyFormat(res.price * res.qty - res.deposit * res.qty)}\n                </Tag>\n              </div>\n            ))\n          },\n        },\n      ],\n    },\n    {\n      title: \"Purchase At\",\n      dataIndex: \"created_at\",\n      render: (data) => {\n        return moment.unix(data / 1000).format(\"YYYY-MM-DD\")\n      },\n    },\n    {\n      title: \"Action\",\n      render: (data) => {\n        return (\n          <Fragment>\n            <Popconfirm\n              placement=\"topRight\"\n              title=\"Are you sure to delete this payment?\"\n              okText=\"Yes\"\n              cancelText=\"No\"\n              onConfirm={() => {\n                deleteCustomer({ variables: { id: `${data.id}` } })\n                  .then(async (res) => {\n                    await message.success(res.data.delete_customer.message)\n                    await paymentRefetch()\n                  })\n                  .catch((error) => {\n                    console.log(error)\n                    return null\n                  })\n              }}\n            >\n              <Tag color=\"red\" style={{ cursor: \"pointer\" }}>\n                Delete\n              </Tag>\n            </Popconfirm>\n          </Fragment>\n        )\n      },\n    },\n  ]\n\n  const DisplayPayment = () => {\n    const { error, loading, data } = useQuery(GET_CUSTOMERS)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      return (\n        <div>\n          <Table\n            bordered\n            columns={columns}\n            dataSource={data.customers}\n            pagination={{ pageSize: 20 }}\n          />\n          {/* {JSON.stringify(JSON.parse(data.customers[0].products), 0, 2)} */}\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Payments</h1>\n              <DisplayPayment />\n              <ProductInfo />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Payment\n","import Embed from \"@editorjs/embed\"\nimport Table from \"@editorjs/table\"\nimport List from \"@editorjs/list\"\nimport Warning from \"@editorjs/warning\"\nimport Code from \"@editorjs/code\"\nimport LinkTool from \"@editorjs/link\"\nimport Image from \"@editorjs/image\"\nimport Raw from \"@editorjs/raw\"\nimport Header from \"@editorjs/header\"\nimport Quote from \"@editorjs/quote\"\nimport Marker from \"@editorjs/marker\"\nimport CheckList from \"@editorjs/checklist\"\nimport Delimiter from \"@editorjs/delimiter\"\nimport InlineCode from \"@editorjs/inline-code\"\nimport SimpleImage from \"@editorjs/simple-image\"\n\nexport const EDITOR_JS_TOOLS = {\n  embed: Embed,\n  table: Table,\n  // paragraph: Paragraph,\n  list: List,\n  warning: Warning,\n  code: Code,\n  linkTool: LinkTool,\n  image: Image,\n  raw: Raw,\n  header: Header,\n  quote: Quote,\n  marker: Marker,\n  checklist: CheckList,\n  delimiter: Delimiter,\n  inlineCode: InlineCode,\n  simpleImage: SimpleImage\n}\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\n\nimport three_dots from \"../../assets/img/three-dots.svg\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARES } from \"../../graphql/query\"\nimport { ADD_SOFTWARE } from \"../../graphql/mutation\"\n\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction AddSoftware(props) {\n  const { getFieldDecorator } = props.form\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [logo, setLogo] = useState(\"\")\n  const [image, setImage] = useState(\"\")\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n  const { refetch } = useQuery(GET_SOFTWARES)\n  const [createSoftware] = useMutation(ADD_SOFTWARE)\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const uploadLogo = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setLogo(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} logo uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} logo upload failed.`)\n      }\n    }\n  }\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        createSoftware({\n          variables: {\n            ...values,\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            refetch()\n            props.form.resetFields()\n            await message.success(res.data.create_software.message, 3)\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Add Software</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ]\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Created By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"created_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input placeholder=\"SAN Vuthy\" size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        placeholder=\"Let's write an awesome story!\"\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadLogo}>\n                        {logo ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              `${logo}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + logo\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              `${image}`}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src=\"/images/no-image.jpg\"\n                            alt=\"koompi\"\n                            width=\"100%\"\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\"\n                            }\n                          ],\n                          initialValue: \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        size=\"large\"\n                        className=\"btnSubmit\"\n                        disabled={loading ? true : false}\n                        onClick={handleSubmit}\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Submit\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(AddSoftware)\n","import React from \"react\"\nimport { Layout, message, Table, Divider, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport { Link } from \"react-router-dom\"\n\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARES } from \"../../graphql/query\"\nimport { DELETE_SOFTWARE } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction AllSoftwares() {\n  // ===== Mutation Varile Section =====\n  const [deleteSoftware] = useMutation(DELETE_SOFTWARE)\n\n  const { refetch: refetchSoftware } = useQuery(GET_SOFTWARES)\n\n  const columns = [\n    {\n      title: \"Logo\",\n      dataIndex: \"logo\"\n    },\n    {\n      title: \"Image\",\n      dataIndex: \"image\"\n    },\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n      key: \"title\"\n    },\n    {\n      title: \"Author\",\n      dataIndex: \"created_by\",\n      key: \"created_by\"\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"created_at\",\n      key: \"created_at\"\n    },\n\n    {\n      title: \"Actions\",\n      dataIndex: \"action\"\n    }\n  ]\n\n  const DisplayPost = () => {\n    const { error, loading, data } = useQuery(GET_SOFTWARES)\n    if (error) console.log(error)\n    if (loading) return <Table loading={true}></Table>\n    if (data) {\n      const DisplayTable = () => {\n        return (\n          <Table\n            columns={columns}\n            dataSource={data.softwares.map((software) => {\n              const { id, title, created_at, user } = software\n              return {\n                key: id,\n                logo: (\n                  <img\n                    src={\"https://admin-demo.koompi.com\" + software.logo}\n                    alt=\"software\"\n                    height=\"50px\"\n                    width=\"50px\"\n                  />\n                ),\n                image: (\n                  <img\n                    src={\"https://admin-demo.koompi.com\" + software.image}\n                    alt=\"software\"\n                    height=\"50px\"\n                    width=\"50px\"\n                    style={{ borderRadius: \"50%\" }}\n                  />\n                ),\n                title: title.length <= 25 ? title : title.substring(0, 25) + \" ...\",\n\n                created_by: user === null ? \"Null\" : user.fullname,\n                created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n                action: (\n                  <div>\n                    <Link to={`/admin/software/edit/${id}`}>\n                      <Tag className=\"btn\" color=\"#2db7f5\">\n                        Edit\n                      </Tag>\n                    </Link>\n                    <Divider type=\"vertical\" />\n                    <Popconfirm\n                      placement=\"topRight\"\n                      title=\"Are you sure to delete this software?\"\n                      okText=\"Yes\"\n                      cancelText=\"No\"\n                      onConfirm={() => {\n                        deleteSoftware({ variables: { id: `${id}` } })\n                          .then(async (res) => {\n                            await message.success(res.data.delete_software.message)\n                            await refetchSoftware()\n                          })\n                          .catch((error) => {\n                            console.log(error)\n                            return null\n                          })\n                      }}\n                    >\n                      <Tag color=\"#f50\" className=\"btn\">\n                        Delete\n                      </Tag>\n                    </Popconfirm>\n                  </div>\n                )\n              }\n            })}\n            pagination={true}\n          />\n        )\n      }\n      return (\n        <div>\n          <DisplayTable />\n        </div>\n      )\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">All softwares</h1>\n              <DisplayPost />\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default AllSoftwares\n","import React, { useState, useContext } from \"react\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport PageFooter from \"../footer\"\nimport { UserContext } from \"../../context/userContext\"\nimport three_dots from \"../../assets/img/three-dots.svg\"\n// ===== Query and Mutation Section =====\nimport { GET_SOFTWARE, GET_SOFTWARES } from \"../../graphql/query\"\nimport { UPDATE_SOFTWARE } from \"../../graphql/mutation\"\n\n// ===== Import EditorJS =====\nimport EditorJs from \"react-editor-js\"\nimport { EDITOR_JS_TOOLS } from \"./tools\"\nimport slugify from \"slugify\"\nimport { Form, Input, Button, Row, Col, Upload, Layout, message } from \"antd\"\n\nconst FormItem = Form.Item\nconst { Content } = Layout\n\nfunction EditSoftware(props) {\n  const { getFieldDecorator } = props.form\n  //   ===== Global Data =====\n  const { loading: softwareLoading, data: softwareData } = useQuery(GET_SOFTWARE, {\n    variables: { id: window.location.pathname.split(\"/\")[4] }\n  })\n\n  // ===== State Management =====\n  const [loading, setLoading] = useState(false)\n  const [logo, setLogo] = useState(null)\n  const [image, setImage] = useState(null)\n\n  // ===== User Context Section =====\n  const userData = useContext(UserContext)\n\n  // ===== EditorJS =====\n  const editorJsRef = React.useRef(null)\n\n  const { refetch } = useQuery(GET_SOFTWARES)\n  const [updateSoftware] = useMutation(UPDATE_SOFTWARE)\n\n  const handleSubmit = React.useCallback(async () => {\n    const savedData = await editorJsRef.current.save()\n    props.form.validateFieldsAndScroll((err, values) => {\n      console.log(slugify(values.title, { lower: true }))\n\n      if (!err) {\n        updateSoftware({\n          variables: {\n            id: window.location.pathname.split(\"/\")[4],\n            ...values,\n            slug: slugify(values.title, { lower: true }),\n            description: JSON.stringify(savedData)\n          }\n        })\n          .then(async (res) => {\n            setLoading(true)\n            setTimeout(() => {\n              setLoading(false)\n            }, 3000)\n            await message.success(res.data.edit_software.message, 3)\n            await refetch()\n            await props.history.push(\"/admin/all-softwares\")\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const uploadImage = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setImage(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    }\n  }\n\n  const uploadLogo = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://admin-demo.koompi.com/upload/image\",\n    defaultFileList: image,\n    onChange(info) {\n      const { status } = info.file\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList)\n      }\n      if (status === \"done\") {\n        setLogo(info.file.name.replace(/\\s+/g, \"-\").toLowerCase())\n        message.success(`${info.file.name} logo uploaded successfully.`)\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} logo upload failed.`)\n      }\n    }\n  }\n\n  if (softwareLoading) {\n    return \"Loading...\"\n  }\n\n  console.log(\"Result\", softwareData.software.description)\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        {/* =========Top Navbar ======= */}\n        <TopNavbar />\n\n        <Content style={{ margin: \"20px 16px\" }}>\n          {/* ======= Display content ====== */}\n          <div className=\"koompi container\">\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Update Software</h1>\n\n              <Form className=\"login-form\">\n                <Row gutter={[24, 8]}>\n                  <Col span={16}>\n                    <FormItem label=\"Title\">\n                      {getFieldDecorator(\"title\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The title is required\"\n                          }\n                        ],\n                        initialValue: softwareData.software.title\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Updated By: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_by\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: userData.user.fullname\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"update at: \" style={{ display: \"none\" }}>\n                      {getFieldDecorator(\"updated_at\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"The user name is required\"\n                          }\n                        ],\n                        initialValue: new Date().toISOString()\n                      })(<Input size=\"large\" />)}\n                    </FormItem>\n\n                    <FormItem label=\"Description: \">\n                      <EditorJs\n                        instanceRef={(instance) => (editorJsRef.current = instance)}\n                        tools={EDITOR_JS_TOOLS}\n                        data={\n                          softwareLoading\n                            ? \"Loading ...\"\n                            : JSON.parse(softwareData.software.description)\n                        }\n                      />\n                    </FormItem>\n                  </Col>\n\n                  <Col span={8}>\n                    {/* ======= Drag and Drop Image ======= */}\n\n                    <FormItem label=\"Logo\">\n                      <Upload.Dragger {...uploadLogo}>\n                        {logo === null ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com\" +\n                              softwareData.software.logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              logo}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"logo\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Logo is required\"\n                            }\n                          ],\n                          initialValue:\n                            logo === null\n                              ? softwareData.software.logo\n                              : \"/public/uploads/\" + logo\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <FormItem label=\"Image\">\n                      <Upload.Dragger {...uploadImage}>\n                        {image === null ? (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com\" +\n                              softwareData.software.image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        ) : (\n                          <img\n                            src={`${\"https://admin-demo.koompi.com/public/uploads/\" +\n                              image}`}\n                            alt=\"avatar\"\n                            style={{ width: \"100%\" }}\n                          />\n                        )}\n                      </Upload.Dragger>\n                      <div style={{ display: \"none\" }}>\n                        {getFieldDecorator(\"image\", {\n                          rules: [\n                            {\n                              required: true,\n                              message: \"Image is required\"\n                            }\n                          ],\n                          initialValue:\n                            image === null\n                              ? softwareData.software.image\n                              : \"/public/uploads/\" + image\n                        })(<Input size=\"large\" />)}\n                      </div>\n                    </FormItem>\n\n                    <div style={{ float: \"right\" }}>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={handleSubmit}\n                        // disabled=\n                      >\n                        {loading ? (\n                          <img src={three_dots} alt=\"btn-loading\" height=\"10\" />\n                        ) : (\n                          \"Update\"\n                        )}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form>\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Form.create()(EditSoftware)\n","import React from \"react\"\nimport { Layout, message, Table, Tag, Popconfirm } from \"antd\"\nimport TopNavbar from \"../navbar/top-navbar\"\nimport LeftNavbar from \"../navbar/left-navbar\"\nimport PageFooter from \"../footer\"\nimport moment from \"moment\"\nimport { useQuery, useMutation } from \"@apollo/react-hooks\"\n\n// ===== Query and Mutation Section =====\n// import { GET_CUSTOMERS } from \"../../graphql/query\"\nimport { DELETE_PAYMENT } from \"../../graphql/mutation\"\n\nconst { Content } = Layout\n\nfunction Preorder() {\n  // ===== Mutation Varile Section =====\n  // const [deletePayment] = useMutation(DELETE_PAYMENT)\n  // const { refetch: paymentRefetch } = useQuery(GET_CUSTOMERS)\n\n  const columns = [\n    {\n      title: \"First Name\",\n      dataIndex: \"firstname\",\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"lastname\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Phone Number\",\n      dataIndex: \"phone\",\n    },\n    {\n      title: \"Message\",\n      dataIndex: \"message\",\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"created_at\",\n    },\n    {\n      title: \"Actions\",\n      dataIndex: \"action\",\n    },\n  ]\n\n  // const DisplayPayment = () => {\n  //   const { error, loading, data } = useQuery(GET_CUSTOMERS)\n  //   if (error) console.log(error)\n  //   if (loading) return <Table loading={true}></Table>\n  //   if (data) {\n  //     console.log(data)\n\n  //     const DisplayTable = () => {\n  //       return (\n  //         <Table\n  //           columns={columns}\n  //           dataSource={data.payments.map((payment) => {\n  //             const { id, firstname, lastname, email, created_at } = payment\n  //             return {\n  //               key: id,\n  //               firstname,\n  //               lastname,\n  //               email,\n  //               created_at: moment.unix(created_at / 1000).format(\"YYYY-MM-DD\"),\n  //               action: <div></div>,\n  //             }\n  //           })}\n  //           pagination={true}\n  //         />\n  //       )\n  //     }\n  //     return (\n  //       <div>\n  //         <DisplayTable />\n  //       </div>\n  //     )\n  //   }\n  // }\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      {/* =========Left Navbar ======= */}\n      <LeftNavbar />\n      <Layout>\n        <Content>\n          {/* =========Top Navbar ======= */}\n          <TopNavbar />\n\n          <div className=\"koompi container\">\n            {/* ======= Display content ====== */}\n\n            <div className=\"background_container\">\n              <h1 className=\"title_new_post\">Pre-Order</h1>\n              {/* <DisplayPayment /> */}\n            </div>\n          </div>\n        </Content>\n        <PageFooter />\n      </Layout>\n    </Layout>\n  )\n}\n\nexport default Preorder\n","import React from \"react\"\nimport \"antd/dist/antd.css\"\nimport \"./App.css\"\n\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"\nimport LoginForm from \"./components/users/login\"\nimport SignupForm from \"./components/users/signup\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport PublicRoute from \"./PublicRoute\"\nimport { UserProvider } from \"./context/userContext\"\n\n// Call Component\nimport Admin from \"./components/admin\"\nimport NewPost from \"./components/posts/new-post\"\nimport AllPosts from \"./components/posts/all-post\"\nimport NewPage from \"./components/pages/new-page\"\nimport AllPages from \"./components/pages/all-pages\"\nimport Users from \"./components/users\"\nimport Logout from \"./components/users/logout\"\nimport Category from \"./components/categories/category\"\nimport \"nprogress/nprogress.css\"\nimport editCategory from \"./components/categories/edit-category\"\nimport editPost from \"./components/posts/edit-post\"\nimport editPage from \"./components/pages/edit-page\"\nimport newMember from \"./components/members/new-member\"\nimport Members from \"./components/members/members\"\nimport editMember from \"./components/members/edit-member\"\nimport newRetailer from \"./components/retailers/new-retailer\"\nimport Retailers from \"./components/retailers/retailers\"\nimport editRetailer from \"./components/retailers/edit-retailer\"\nimport newSocialMedia from \"./components/socialmedia/new-social-media\"\nimport SocialMedia from \"./components/socialmedia/social-media\"\nimport editSocialMedia from \"./components/socialmedia/edit-social-media\"\nimport Settings from \"./components/settings\"\nimport TelegramBot from \"./components/telegram-bot/telegram-bot\"\nimport Legal from \"./components/legals/legal\"\nimport allLegals from \"./components/legals/all-legals\"\nimport editLegal from \"./components/legals/edit-legal\"\nimport Payment from \"./components/payments/payment\"\nimport AddSoftware from \"./components/softwares/add-software\"\nimport AllSoftwares from \"./components/softwares/all-softwares\"\nimport EditSoftware from \"./components/softwares/edit-software\"\nimport Preorder from \"./components/preorder/preorder\"\n\nfunction App() {\n  return (\n    <UserProvider>\n      <Router>\n        <Switch>\n          <PublicRoute restricted={true} exact path=\"/login\" component={LoginForm} />\n          <PublicRoute exact path=\"/\" restricted={true} component={LoginForm} />\n          <PublicRoute exact path=\"/logout\" component={Logout} />\n          <PublicRoute exact path=\"/register\" component={SignupForm} />\n          <PrivateRoute exact path=\"/admin/dashboard\" component={Admin} />\n          <PrivateRoute exact path=\"/admin/users\" component={Users} />\n          <PrivateRoute exact path=\"/admin/user/settings\" component={Settings} />\n          {/* ===== Post Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-post\" component={NewPost} />\n          <PrivateRoute exact path=\"/admin/all-posts\" component={AllPosts} />\n          <PrivateRoute exact path=\"/admin/post/edit/:id\" component={editPost} />\n          {/* ===== Page Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/add-software\" component={AddSoftware} />\n          <PrivateRoute exact path=\"/admin/all-softwares\" component={AllSoftwares} />\n          <PrivateRoute\n            exact\n            path=\"/admin/software/edit/:id\"\n            component={EditSoftware}\n          />\n          {/* ===== Page Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-page\" component={NewPage} />\n          <PrivateRoute exact path=\"/admin/all-pages\" component={AllPages} />\n          <PrivateRoute exact path=\"/admin/page/edit/:id\" component={editPage} />\n          {/* ===== Category Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/categories\" component={Category} />\n          <PrivateRoute\n            exact\n            path=\"/admin/category/edit/:id\"\n            component={editCategory}\n          />\n          {/* ===== Member Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-member\" component={newMember} />\n          <PrivateRoute exact path=\"/admin/members\" component={Members} />\n          <PrivateRoute exact path=\"/admin/member/edit/:id\" component={editMember} />\n          {/* ===== Retailer Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-retailer\" component={newRetailer} />\n          <PrivateRoute exact path=\"/admin/retailers\" component={Retailers} />\n          <PrivateRoute\n            exact\n            path=\"/admin/retailer/edit/:id\"\n            component={editRetailer}\n          />\n          {/* ===== Social Media Route Section ===== */}\n          <PrivateRoute\n            exact\n            path=\"/admin/add-social-media\"\n            component={newSocialMedia}\n          />\n          <PrivateRoute exact path=\"/admin/social-media\" component={SocialMedia} />\n          <PrivateRoute\n            exact\n            path=\"/admin/social-media/edit/:id\"\n            component={editSocialMedia}\n          />\n          {/* ===== Payment Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/user/payments\" component={Payment} />\n\n          {/* ===== PreOrder Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/user/pre-order\" component={Preorder} />\n          {/* ===== Telegram Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/telegram-bot\" component={TelegramBot} />\n          {/* ===== Legal Route Section ===== */}\n          <PrivateRoute exact path=\"/admin/new-legal\" component={Legal} />\n          <PrivateRoute exact path=\"/admin/all-legals\" component={allLegals} />\n          <PrivateRoute exact path=\"/admin/legal/edit/:id\" component={editLegal} />\n        </Switch>\n      </Router>\n    </UserProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport Cookies from \"js-cookie\"\n\nimport { ApolloClient } from \"apollo-client\"\nimport { createHttpLink } from \"apollo-link-http\"\nimport { setContext } from \"apollo-link-context\"\nimport { InMemoryCache } from \"apollo-cache-inmemory\"\n\n\n// const httpLink = createHttpLink({\n//   uri: \"http://localhost:8080/admin\",\n// })\n\n\nconst httpLink = createHttpLink({\n  uri: \"https://admin-demo.koompi.com\",\n})\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = Cookies.get(\"token\")\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? token : \"\",\n    },\n  }\n})\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n})\n\n// const client = new ApolloClient({\n//   cache,\n//   uri: \"http://localhost:8080/admin\",\n//   credentials: \"same-origin\",\n//   headers: {\n//     authorization: token\n//   }\n// })\n\n// const client = new ApolloClient({\n//   cache,\n//   uri: \"http://localhost:8080/admin\"\n// })\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}